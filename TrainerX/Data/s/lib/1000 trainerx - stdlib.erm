ZVSE2
; Author:   V.A.
; Engine:   ERM 2.0+
; Requires: ERA 3.9+, Era Erm Framework

; Standard Library for TrainerX


// Global mod presence flag for other mods
!#VAi^trainerx_on^:S(TRUE);

// Get the structure of a town
!?FU(trainer_Town_GetStruct);
; x1 - town number on map (0...47)
;?x2 - return: ptr structure town
!#VA(townId:x) (town:x); 
!!IF&(townId)<(MAP_TOWN_FIRST)|(townId)>(MAP_TOWN_LAST):M^{FU(Town_GetStruct)}: Wrong town id.^;
!!UN:C(GAME_MANAGER)/(UNC_UINT32)/?(game:y); 
!!UN:C(game)/136724/(UNC_UINT32)/?(ptr:y); 
!!VR(town):S(townId) *360 +(ptr);
!!IF&(town)<43200000:M^{FU(Town_GetStruct): Attention!}
Error in getting town structure address. 
The game may fall at any time.^; 

// Get the filenames of the hero's portrait
!?FU(trainer_GetHeroPortrait);          [by igrik/Algor]
!#VA(hero:x);                           [hero's number (0..155)]
!#VA(isLarge:x);                        [portrait type (0-small, 1-large)]
!#VA(zIndex:x);                         [The number of the z var for storing the name of the portrait]

!!VRz(zIndex):S^^;
!!FU&(hero)<=(NO_HERO):E;

!!UN:C6806760/4/?(value:y);
!!VR(isLarge):*4 +48 +(value);
!!VR(zIndex):*512+9597416;
!!SN:E7411341/1/(hero);
!!VR(value):Sv1 +52;
!!UN:C(value)/1/?(value);
!!VR(value)&(value)<0:+256;
!!VR(value):*92 +(isLarge);
!!UN:C(value)/4/?(value);

!!re i/1/512;
  !!UN:C(value)/1/?(value2:y) C(zIndex)/1/(value2);
  !!br&(value2)=0;

  !!VR(value):+1;
  !!VR(zIndex):+1;
!!en;

// Check if the first character of z1 is a number
!?FU(trainer_CheckIfZ1FirstCharIsNum);    [by Hawaiing]
!#VA(result:x);

!!VR(result):S(FALSE);
!!UN:C9597928/1/?(firstChar:y);
!!VR(result)&(firstChar)>=48/(firstChar)<=57:S(TRUE);

// Get a monster's rank with experience
!?FU(trainer_GetMonRankWithExp);
!#VA(mon:x) (exp:x) (rank:x);

; Get the exp of R11
!!EA(mon):L?(monExpR10:y) P?(monExpTop:y);
!!VR(monExpR11:y):S(monExpR10) +(monExpTop);

!!if&(exp)=(monExpR11);
  !!VR(rank):S11;
!!el;
  !!SN:E7503648/1/(mon)/(exp);          [This function returns R11 as R10]
  !!VR(rank):Sv1;
!!en;

// Show a monster's dialogue (hero slot style)
!?FU(trainer_ShowMonDlgOfHeroSlot);        [by MoP]
!#VA(hero:x) (slot:x) (showDismissBtn:x) (isPopup:x);

!!UN:C6933756/4/?(value:y);
!!OW:C?(player:y);
!!VR(value2:y):S(player) *360;
!!VR(value):-(value2);
!!UN:C6919480/4/?(value3:y);

!!HE(CURRENT_HERO)&(hero)=(CURRENT_HERO):N?(hero);
!!VR(value2):S(hero) *1170 +(value) +3041;
!!VR(address:y):S(slot) *4 +(value2);
!!UN:C(address)/4/<0;
!!FU&1:E;

!!VR(address):S(value2)-145;
!!SN:E5007632/2/(value3)/(value2)/(slot)/(address)/0/119/20/(showDismissBtn)/(isPopup);

// Show a monster's dialogue (recruiting dialogue style)
!?FU(trainer_ShowMonDlgRecruiting);    [by Hawaiing]
!#VA(mon:x) (isPopup:x);

!!FU&(mon)<=(NO_MON):E;

!!VR(value:y):S9990 *4 +8943204;
!!VR(value2:y):S(isPopup)* -1 +1;       [Get negative value]
!!SN:E6243760/2/(value)/(mon)/119/32/(value2);[Create the dialogue]
!!SN:E6289408/2/(value)/-1/-1;
!!UN:C7998936/4/(mon);                  [For stack Exp Panel]

!!if&(isPopup);
  !!SN:E6245264/2/(value);              [Popup]
!!el;
  !!SN:E6245280/2/(value);              [Normal]
!!en;

!!SN:E6244736/2/(value);                [Destroy the dialogue]

// Set the frame colour of a DL dialogue
!?FU(trainer_SetDlgColour);
!#VA(dlg:x) (player:x);

!!SN:E7510739/1/(dlg);
!!UN:Cv1/4/?y1;
!!VRy2:Sy1 +76;
!!UN:Cy2/4/?y3;
!!SN:E6288384/2/y1/512/13/y3/(player);

// Convert a string to integers with ignorance of separators
!?FU(trainer_ConvertStrToInts);         [by daemon_n]
!#VA(strPtr:x);                         [Original string.]
!#VA(numbersarrayId:x);                 [returns local array id via ?(intVar:y)]
!#VA(amountOfNumbers:x);                [returns local array id size ]

!!VR(numbersarrayId):S0;

!!VRs^trainer_originalString^:S^%z(strPtr)^;
!!SN:Ks^trainer_originalString^/?(strLength:y);

!!VR(amountOfNumberArrays:y):S1;
!!FU(NewIntArray):P?i^current_%(amountOfNumberArrays)_array_ID^;
!!VR(breakPoint:y):S(NULL);
!!VR(isNeedBreakPoint:y):S(FALSE);

!!re i/0/(strLength)/1/-1;
  !!SN:Ks^trainer_originalString^/i/?(checkSymbol:z);
  !!VR(isNeedBreakPoint):S(TRUE);

  !!re (commonInt:y)/0/9;

    !!if&(checkSymbol)=^%(commonInt)^;
      *!IF&(commonInt)=0:L^%(checkSymbol)^;
      !!FU(Array_Push):Pi^current_%(amountOfNumberArrays)_array_ID^/(commonInt);
      !!VR(isNeedBreakPoint):S(FALSE);
      !!br;
    !!en;
  !!en;

  !!if&(isNeedBreakPoint);
    !!SN:Mi^current_%(amountOfNumberArrays)_array_ID^/?(arrayLength:y);
    !!co&(arrayLength)=(NULL);

    !!VR(amountOfNumberArrays):+1;
    !!FU(NewIntArray):P?i^current_%(amountOfNumberArrays)_array_ID^;
  !!en;
!!en;

!!VRs^trainer_originalString^:S^^;
!!SN:Mi^current_%(amountOfNumberArrays)_array_ID^/?(arrayLength:y);
!!VR(amountOfNumberArrays)&(arrayLength)=(NULL):-1;

!!if&(amountOfNumberArrays);  
  !!FU(NewIntArray):P?(numbersarrayId:x);

  !!re i/1/(amountOfNumberArrays);

    !!VR(elemSumm:y):S(NULL);
    !!SN:Mi^current_%i_array_ID^/?(arrayLength:y);

    !!re j/0/(arrayLength)/1/-1;

    !!SN:Mi^current_%i_array_ID^/j/?(elemValue:y);
    !!VR(multipler:y):S(arrayLength) -j -1;

      !!if&(multipler);

        !!re k/1/(multipler);
          !!VR(elemValue):*10;
        !!en;
      !!en;

      !!VR(elemSumm):+(elemValue);
    !!en;

    !!FU(Array_Push)&(arrayLength):P(numbersarrayId)/(elemSumm);
    !!VRi^current_%i_array_ID^:S(NULL);
  !!en;

  !!VR(amountOfNumbers):S(amountOfNumberArrays);
  !!SN:F^ExtendArrayLifetime^/(numbersarrayId);
; Disable debug msg
*!el;
  *!IF:M^There is no number in the text you just entered!^;
!!en;

// Check if it is allowed to build the building in the town
!?FU(trainer_CheckBuildingEligibility); [by igrik]
!#VA(townId:x);                         [town number on map (0...47)]
!#VA(building:x);                       [building id]
!#VA(result:x);                         [return: bool (0-no, 1-yes)]

!!VR(result):S(FALSE);   
!!FU(trainer_GetTownStruct):P(townId)/?(ptr:y);
!!CA0/(townId):R?(isbuilt:y) R(FALSE);
!!SN:E6033696/2/(ptr)/(building);
!!VR(result)&v1<>(FALSE):S(TRUE);
!!CA0/(townId):R(isbuilt);

; Get city structure
!?FU(trainer_GetTownStruct);
!#VA(townId:x);                         [Town number on map (0...47)]
!#VA(ptr:x);                            [Return: ptr structure town]
 
!!IF&(townId)<=(NO_TOWN)|(townId)>47:M^Wrong town id.^;
!!UN:C6919480/4/?(value:y); 
!!VR(value):+136724;
!!UN:C(value)/4/?(value2:y); 
!!VR(ptr:x):S(townId) *360 +(value2);
!!IF&(ptr)<43200000:M^{Attention!}
Error in getting town structure address. 
The game may fall at any time.^; 

// Get the total exp required for reaching a hero level
!?FU(trainer_GetExpRequirementOfLevel); [by daemon_n]
!#VA(lvl:x) (exp:x);

!!VR(exp):S0;

!!if&(lvl)>1/(lvl)<=74;
  !!VR(saveV1:y):Sv1;
  !!SN:E5088784/(CALLCONV_FASTCALL)/(lvl:x);
  !!VR(exp):Sv1;
  !!VRv1:S(saveV1);
!!el&(lvl)>74/(lvl)<=88;
  !!VR(exp):S1810034207;
!!el&(lvl)>88/(lvl)<=100;
  !!VR(exp):S2073739175;
!!el&(lvl)>100/(lvl)<=108;
  !!VR(exp):S2099639276;
!!el&(lvl)>108/(lvl)<=868;
  !!VR(exp):S2044641867;
!!el&(lvl)>868/(lvl)<=3732;
  !!VR(exp):S2146553679;
!!el&(lvl)>3732/(lvl)<=5920;
  !!VR(exp):S2146733313;
!!el&(lvl)>5920/(lvl)<=6424;
  !!VR(exp):S2147293156;
!!en;

// Get the max primary skill value of the game
!?FU(trainer_GetMaxPrimarySkillValue);
!#VA(result:x);

!!UN:C4342141/1/?(value:y);
!!SN:F^PluginExists^/^prima^;

; If display primary skills over 99.bin is enabeld, it overrides prima and set max primary skills at 126
!!if&v1;
  !!if&(value)<>127;
    !!VR(result):S249;
  !!el;
    !!VR(result):S126;
  !!en;
!!el;
  !!if&(value)=127;
    !!VR(result):S127;
  !!el;
    !!VR(result):S99;
  !!en;
!!en;

// Get the stucture of a town
!?FU(trainer_Town_GetStruct);
; x1 - town number on map (0...47)
;?x2 - return: ptr structure town
!#VA(townId:x) (town:x); 
!!IF&(townId)<(MAP_TOWN_FIRST)|(townId)>(MAP_TOWN_LAST):M^{FU(Town_GetStruct)}: Wrong town id.^;
!!UN:C(GAME_MANAGER)/(UNC_UINT32)/?(game:y); 
!!UN:C(game)/136724/(UNC_UINT32)/?(ptr:y); 
!!VR(town):S(townId) *360 +(ptr);
!!IF&(town)<43200000:M^{FU(Town_GetStruct): Attention!}
Error in getting town structure address. 
The game may fall at any time.^; 

// Get the packed coordinates
!?FU(trainer_PackedCoords); 
!#VA(x:x) (y:x) (z:x) (coords:x); 
!!VRt:Sv1;                              [store v1]
!!SN:E7413375/1/(x)/(y)/(z);  
!!VR(coords):Sv1;
!!VRv1:St;                              [restore v1]

// Compare two strings (case insensitive)
!?FU(trainer_CompareStrings);
; Compares two strings. Returns value <0, =0 or >0, corresponding to items relation.
!#VA(strPtr1:x) (strPtr2:x) (result:x);

!!FU(StrToLower):P(strPtr1)/?(strPtr1Lower:z);
!!FU(StrToLower):P(strPtr2)/?(strPtr2Lower:z);

!!VR(result):S0;

!!if&(strPtr1Lower)<(strPtr2Lower);
  !!VR(result):S-1;
!!el&(strPtr1Lower)>(strPtr2Lower);
  !!VR(result):S1;
!!en;
