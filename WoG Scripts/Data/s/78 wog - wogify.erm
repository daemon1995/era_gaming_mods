ZVSE2

** Wogify ERM script v1.9 - Donald X. Vaccarino
** with updates by Timothy Pulver and Anders Jonsson, rennyo, daemon_n, Archer30
** Requires WOG version 3.58f or later
** Add WOG objects to a map on day one
** WoGify Name: script00.erm
** Updated: October 31, 2004
** Updated: Jun 2023 by daemon_n and Archer30

** In addition to normal WOG objects, the following scripted objects as well as
** non-object scripts may be used, though none are essential and all can be
** disabled from the WoGify Options Dialogue. The exception is the Map Options
** script which is required for all spell and artifact disabling to function as
** well as several other options.

** - script01.erm: Map Rules [by Donald X.]
** - script02.erm: Artifact Boosts [by Donald X.]
** - script03.erm: Secondary Skills Boosts [by Donald X.]
** - script04.erm: Arcane Tower [by Donald X.]
** - script05.erm: Bank [by Donald X.]
** - script06.erm: Hourglass of Asmodeus [by Fnord]
** - script07.erm: Fishing Well [by Fnord]
** - script08.erm: Junk Merchant [by Donald X.]
** - script09.erm: Market Of Time [by Fnord]
** - script10.erm: Magic Mushrooms [by Bruno]
** - script11.erm: Palace Of Dreams [by Fnord]
** - script12.erm: Living Skull [by Fnord]
** - script13.erm: Tavern Card Game [by Fnord]
** - script14.erm: Altar Of Transformation [by Fnord]
** - script15.erm: Mysterious Creature Dwelling [by Dieter]
** - script16.erm: Battle Academy [by Anders]
** - script17.erm: Potion Fountains [by Bruno]
** - script18.erm: Alms House [by Donald X.]
** - script19.erm: Masters of Life [by Sir Four]
** - script20.erm: Week of Monster [by Fnord]
** - script21.erm: Freelancer's Guild [by Fnord]
** - script22.erm: Monster Mutterings [by Fnord]
** - script23.erm: Sorcery Enhancement [by Fnord]
** - script24.erm: Enhanced Hint Text (for creature dwellings) [by Fnord]
** - script25.erm: Map Options [by Fnord]
** - script26.erm: Artificer [by Dieter]
** - script27.erm: Spellbook [by Anders]
** - script28.erm: School Of Wizardry [by Anders]
** - script29.erm: Chest [by Donald X.]
** - script30.erm: Adventure Cave [by Donald X.]
** - script31.erm: Treasure Chest 2 [by Fnord]
** - script32.erm: Summoning Stones [by Fnord]
** - script33.erm: Living Scrolls [by Fnord]
** - script34.erm: Cards of Prophecy [by the Qurqirish Dragon]
** - script35.erm: Mysticism Enhancement [by Anders]
** - script36.erm: Mithril Enhancements [by Anders]
** - script37.erm: Rebalanced Factions [by Steven Lynch]
** - script38.erm: Karmic Battles [by Dieter]
** - script39.erm: Hero Specialization Boost [by Alexis Koz]
** - script40.erm: First Money [by Alexis Koz]
** - script41.erm: Battle Extender [by Alexis Koz]
** - script42.erm: Garrisons [by Fnord]
** - script43.erm: Obelisk Runes [by Fnord]
** - script44.erm: Emerald Tower [by Fnord]
** - script45.erm: Castle Upgrading [by Alexis Koz]
** - script46.erm: Berserker Flies [by Fnord]
** - script47.erm: Creature Relationships [by the Qurqirish Dragon]
** - script48.erm: Enhanced Secondary Skills [by Arstahd]
** - script49.erm: Henchmen [by Arstahd]
** - script50.erm: Enhanced Monsters [by Arstahd]
** - script51.erm: Enhanced Commanders [by Arstahd]
** - script52.erm: Mirror of the Home-Way [by Sir Four]
** - script53.erm: Dungeon of the Dragon Master [by Hermann the Weird]
** - script54.erm: Enhanced War Machines I [by Overlord]
** - script55.erm: Enhanced War Machines II [by Arstahd]
** - script56.erm: Metamorphs [by Fnord]
** - script57.erm: Neutral Units [by Alexandru Balahura]
** - script58.erm: Espionage [by Petyo]
** - script59.erm: Piercing Shot [by Petyo]
** - script60.erm: Forgotten Shrine [by Petyo]
** - script61.erm: Protection from the Elements by Petyo]
** - script62.erm: Split Decision [by Fnord]
** - script63.erm: Passable Terrain [by Fnord]
** - script64.erm: Tobyn's Scripts [by Tobyn]
** - script65.erm: Monolith Costs [by Steven Lynch]
** - script66.erm: Commander Witch Huts [by Donald X.]
** - script67.erm: Neutral Town [by Donald X. and Jonas]
** - script68.erm: New Battlefields [by Donald X., Robert, and Jonas]
** - script69.erm: Custom Alliances [by Sir Four]
** - script70.erm: Death Chamber [by Rich Reed]
** - script71.erm: Enhanced Artifacts [by Arstahd]
** - script72.erm: Random Hero [by Bonizag]
** - script73.erm: Enhanced War Machines III [by Bonizag]
** - script74.erm: Summon Elementals [by Bonizag]
** - script75.erm: Secondary Skill Text [by Hermann the Weird]
** - script76.erm: Commander Sanctuary [by Fnord]
** - script77.erm: WoG Cheat Menu [by Fnord]

** Variables Used: v600-v705, v950-v966
** Flags Used: 9,870 (used by Anders' Mithril script section]
** Functions Used: 8-9, 670-686, 5209
** Dialogs Used: 1
** Timers Used: 19, 79

** Universal Timer uses:
** Timers: 1, 2
** Variables: v2371-v2395
** Macros: $week$, $weeks$, $once$, $day$, $weekday$, $AI$, $color$, $month$,
** $monday$, $tuesday$, $wednesday$, $thursday$, $friday$, $saturday$, $sunday$,
** $red$, $blue$, $tan$, $green$, $orange$, $purple$, $teal$, $pink$

** Bit Conversion uses:
** Functions: FU3333
** Macros: $bit$ - replaced with (WOG_CALCULATE_BIT_VALUE)
** Variables: v3333, y-100

** Generate Random Spell uses:
** Functions: FU7777-FU7779
** Macros: $ban$ - replaced with (WOG_CHECK_SPELL_BAN), $spell$ - replaced with (WOG_GENERATE_SPELL)
** Variables: v3500, y-96..y-99

** Set AI/Human Experience uses:
** Functions: FU22000-FU22001
** Dialogs: DG15
** Variables: v1-v3 (temporary)

** Add Warlord's Banner Artifacts to some Creature Banks
** Functions: FU(WOG_IFY_CreatureBanks_AddWarlordBanners)

** Level 7+ Creatures Only Receive 50% Stack Experience
** Functions: FU29

********************************************************************************

** Disable all the blank artifacts (other scripts has to re-enable them, if use any of them)
!#UN:A161/1 A162/1 A163/1 A164/1 A165/1 A166/1 A167/1 A168/1 A169/1 A170/1;

** Auto-disable "Arrow Towers Gain Experience" for Network Games

!?FU(OnAfterErmInstructions); [Post-instruction trigger]
!!UN:V?y-1/?y-2/?y-3/?y-4/?y-5; [Get game info: y-4=1 for a Network game]
!!UN:P1/?y-6; [Check if Arrow Tower Experience is enabled: y-6=0 if YES]
!!UN&y-4=1/y-6=0:P1/1; [Disable Arrow Tower Experience in a Network game]
!!IF&y-4=1/y-6=0:M^%T(wog.1.arrowTower)^; [Display message that Arrow Tower Experience option was disabled]

********************************************************************************

** Bit Conversion by the Qurqirish Dragon **

 [Set up macro for bit-conversion]

!#MCv3333:S@bit@;
!#VRv3333:S(WOG_CALCULATE_BIT_VALUE);

 [Calculate bit value: input in x1 parameter, result in x2]

!?FU(WOG_CALCULATE_BIT_VALUE);
!#VA(powerPlusOne:x) (result:x);

!!if&(powerPlusOne)<=0;
  !!VR(result):S(powerPlusOne) F-1/0;
!!el;
  !!VR(power:y):S(powerPlusOne) -1;
  !!VR(result):S1 Sd<<(power);
!!en;

** end of Bit Conversion.

********************************************************************************

  UNIVERSAL TIMER INIT by Tobyn   (see script64.erm for longer description)

!#VRv2396:S1;          init v2396 month indicator (starts with month 1)
!#VRv2390:S1;          init v2390 day comparator (c also starts with day 1 value)
!#MCv2391:S@once@;     init macros (= other names) for the eight used vars
!#MCv2392:S@day@;
!#MCv2393:S@weekday@;
!#MCv2394:S@AI@;
!#MCv2395:S@color@;
!#MCv2396:S@month@;
!#MCv2388:S@week@;     monthly week count    (1,2,3,4,1,2,...)
!#MCv2389:S@weeks@;    continuing week count (1,2,3,4,5,6,...)

!#MCv2371:S@monday@;     !#VR$monday$:S1;    init macros and values for weekdays
!#MCv2372:S@tuesday@;    !#VR$tuesday$:S2;
!#MCv2373:S@wednesday@;  !#VR$wednesday$:S3;
!#MCv2374:S@thursday@;   !#VR$thursday$:S4;
!#MCv2375:S@friday@;     !#VR$friday$:S5;
!#MCv2376:S@saturday@;   !#VR$saturday$:S6;
!#MCv2377:S@sunday@;     !#VR$sunday$:S7;

!#MCv2380:S@red@;        !#VR$red$:S0;       init macros and values for colors
!#MCv2381:S@blue@;       !#VR$blue$:S1;
!#MCv2382:S@tan@;        !#VR$tan$:S2;
!#MCv2383:S@green@;      !#VR$green$:S3;
!#MCv2384:S@orange@;     !#VR$orange$:S4;
!#MCv2385:S@purple@;     !#VR$purple$:S5;
!#MCv2386:S@teal@;       !#VR$teal$:S6;
!#MCv2387:S@pink@;       !#VR$pink$:S7;

  UNIVERSAL TIMER GLOBAL CALL EVERY DAY

!?TM1;                     GLOBAL CALL (in central script so user needn't do it himself)
!!OW:C?v2395;                get current player color (0..7)
!!OW:Iv2395/?v2394;          get current player status (0=human, 1=AI)
!!VRv2393:Sc %7;             set weekday (mon=1..sat=6,sun=0)
!!VRv2393&v2393=0:S7;        set sunday=7 instead of sunday=0
!!VRv2392:Sc;                set current day (comparison with c doesn't work in the next two lines)
!!VRv2391&v2390=v2392:S1;    set once-on-that-day flag (only first active color)
!!VRv2391&v2390>v2392:S0;    reset that flag (at second active color each day)
!!VRv2390&v2391=1:+1;        inc day comparator (needed for flag)
!!VRv2389&v2391=1:Sc -1 :7 +1; set weeks (cont count)
!!VRv2388&v2393=1/v2391=1:+1; inc  week counter by 1 for each monday
!!VRv2396&v2388=5/v2391=1:+1; inc month counter by 1 for each 5th week
!!VRv2388&v2388=5/v2391=1:S1; reset week counter for each new month

********************************************************************************

*** Generate Random Spell Number by Fnord ***
; Swt up macros - Legacy
!#MCv3341:S@ban@;
!#VRv3341:S(WOG_CHECK_SPELL_BAN);

!#MCv3500:S@spell@;
!#VRv3500:S(WOG_GENERATE_SPELL);

 [Check for Banned and Disabled Spells - y-94 returns banned state]
 [x1=spell to check for banning/disabling]

* SYNTAX: FU(WOG_CHECK_SPELL_BAN):P#;
* #=spell to check (x1)
* y-94=0 if not banned/disabled
* y-94=1 if banned
* y-94=2 if disabled
* y-94=3 if banned and disabled
; Archer30: We no longer need to know whether a spell is banned by wog option or disabled, they are the same thing now.

!?FU(WOG_CHECK_SPELL_BAN);
!#VA(spell:x) (result:x);

!!if|(spell)<(SPELL_FIRST)/(spell)>(SPELL_LAST_WOG); [Exit if not a valid spell number]
  !!VR(result):S99;
  !!VRy-94:S(result);
  *!IF:M^{ERM Error:} FU%(WOG_CHECK_SPELL_BAN) function was called with invalid arguments^;
  !!FU:E;
!!en;

!!UN:J0/(spell)/?(disabled:y); [Check if spell is enabled (0) or disabled (1)]
!!FU(WOG_CheckIfSpellIsBannedByWogOption):P(spell)/?(banned:y);

!!VR(result):S0; [Set to 0 if spell is available]
!!VR(result)&(banned):S1; [Set to 1 if spell is banned]
!!VR(result)&(disabled):S2; [Set to 2 if spell is disabled in the map]
!!VR(result)&(disabled)/(banned):S3; [Set y-94 to 3 if spell is banned and disabled]
!!VRy-94:S(result);                     [legacy]

!?FU(WOG_CheckIfSpellIsBannedByWogOption);
!#VA(spell:x) (result:x);

!!VR(result):S(FALSE);
!!UN&(spell)=(SPELL_SUMMON_BOAT):P152/?(result); [Check for banned Summon Boat    - =1 if banned]
!!UN&(spell)=(SPELL_WATER_WALK):P153/?(result); [Check for banned Water Walk     - =1 if banned]
!!UN&(spell)=(SPELL_TOWN_PORTAL):P154/?(result); [Check for banned Town Portal    - =1 if banned]
!!UN&(spell)=(SPELL_DIMENSION_DOOR):P155/?(result); [Check for banned Dimension Door - =1 if banned]
!!UN&(spell)=(SPELL_FLY):P156/?(result); [Check for banned Fly            - =1 if banned]
!!UN&(spell)=(SPELL_SCUTTLE_BOAT):P221/?(result); [Check for banned Scuttle Boat   - =1 if banned]
!!UN&(spell)=(SPELL_VISIONS):P222/?(result); [Check for banned Visions        - =1 if banned]
!!UN&(spell)=(SPELL_ARMAGEDDON):P223/?(result); [Check for banned Armageddon    - =1 if banned]
!!UN&(spell)=(SPELL_VIEW_AIR):P246/?(result); [Check for banned View Air       - =1 if banned]
!!UN&(spell)=(SPELL_VIEW_EARTH):P247/?(result); [Check for banned View Earth     - =1 if banned]
!!UN&(spell)=(SPELL_DISGUISE):P249/?(result); [Check for banned Disguise       - =1 if banned]

Syntax:

 * FU$spell$:P#1/#2/#3/#4/#5/#6/#7/#8/#9/#10/#11/#12/#13/#14/#15;
 * Spell Number is returned in y-99, value is -1 if no spell exists.

 #1 = minimum spell level: 0=any, or 1..5
 #2 = maximum spell level: 0=any, or 1..5
 #3 = type: 0=any, 1=adventure, 2=combat
 #4 = element: 0=any, 1=air, 2=fire, 4=water, 8=earth. Add numbers for multiple elements.
 #5 = banning: 0=ignore spell banning, 1=skip banned spells
 #6 = exclusions: 0=no exclusions, 1..9=number of specific spell exclusions (#7..#15)
 #7..#15 = specific spell exclusions: 0..69 for spell number, anything else is ignored
           and only exclusions up to the number in #6 are used, so if #6 is 0, all
           specific exclusions will be ignored.

A subfunction of this function may be used to determine the level, element and type
(combat or adventure) of any given spell:

Syntax:
    FU7779:P#;

 #=spell number being checked (0..69).

Returned Values:
 y-96 : Level (1..5)
 y-97 : Type (1=Adventure, 2=Combat)
 y-98 : Element (1=air, 2=fire, 4=water, 8=earth, 15=all elements)

--------------------------------------------------------------------------------

!?FU(WOG_GENERATE_SPELL);
; x1=min. level, x2=max. level, x3=type, x4=element, x5=banning
; x6=number of exclusions, x7..x15=specific exclusions
!#VA(minLvl:x) (maxLvl:x) (spType:x) (schoolBit:x) (restrictBanned:x);
!#VA(numExclSpells:x) (spell[9]:x);

!!VRy-99:S(NO_SPELL); [Initialize y-99 to -1]

!!if|(minLvl)<0/(minLvl)>5/(maxLvl)<0/(maxLvl)>5/(spType)<0/(spType)>2/(schoolBit)<0/(schoolBit)>15/(restrictBanned)<0/(restrictBanned)>3/(numExclSpells)<0/(numExclSpells)>9;
  ; Set y-99 to 99 for an invalid parameter: mast skip loop
  !!VRy-99:S99;
  * !IF:M^{ERM Error:} FU%(WOG_GENERATE_SPELL) function was called with invalid arguments^;
  !!FU:E;
!!en;

; Do up to 500 loops to find a valid spell number: return in y-99 @daemon_n, what? 500 loops? Hold my beer; 
!!FU(NewIntArray):P70/?(allSpells:y);
!!FU(Array_Fill):P(allSpells)/(SPELL_FIRST)/1;
!!FU(Array_Shuffle):P(allSpells);

!!re (randSpellLoop:y)/(SPELL_FIRST)/(SPELL_LAST_WOG);

  !!if&y-99=(NO_SPELL);                                                  [if no chosen spell]
    !!SN:M(allSpells)/(randSpellLoop)/?i^WOG_main_rand_spell^;           [get rnd spell]

    !!if&i^WOG_main_rand_spell^<>(SPELL_TITANS_LIGHTNING_BOLT);          [skip titan]
      !!if&(numExclSpells)>0;

        !!re j/0/(numExclSpells)/1/-1;                                   [if avoid repeat]
          !!if&i^WOG_main_rand_spell^=(spell[j]);                        [check with args]
            !!co 2;                                                      [dont' call function if already exists]
          !!en;
        !!en;
      !!en;

      !!FU7778:P(minLvl)/(maxLvl)/(spType)/(schoolBit)/(restrictBanned); [call fuction without extra args]
      !!VRi^WOG_main_rand_spell^:S0;                                     [clear variable]
    !!en; 
  !!el;
    !!FU:E;                                                              [exit FU, if was found the spell]
  !!en;
!!en;

--------------------------------------------------------------------------------
 [Generate Valid Random Spell Number: y-99]
!?FU7778;
 [x1=min. level, x2=max. level, x3=type, x4=element, x5=banning]
!#VA(minLvl:x) (maxLvl:x) (spType:x) (schoolBit:x) (restrictBanned:x);                     // 

!!FU7779:Pi^WOG_main_rand_spell^; [Determine Spell Level (y-96), Type (y-97), Element (y-98)]

!!if&(schoolBit)<>15/(schoolBit)<>0/y-98<>15;
  !!VR(bitCheck:y):S(schoolBit) Sd&y-98; [Copy x4 (elements) to y3]
  !!FU&(bitCheck)<>y-98:E;
!!en;

!!if|(minLvl)/(maxLvl);
  !!FU|y-96<(minLvl)/y-96>(maxLvl):E;[If level too low or too high, set y2 to 1]
!!en;

!!if&(spType);
  !!FU&y-97<>(spType):E;[If invalid type, set y2 to 1]
!!en;

!!FU(WOG_CHECK_SPELL_BAN):Pi^WOG_main_rand_spell^/?(result:y); * y-94=0 if not banned/disabled/* y-94=1 if banned * y-94=2 if disabled* y-94=3 if banned and disabled

!!if&(result)/(restrictBanned);
  !!FU:E;
!!en;

!!VRy-99:Si^WOG_main_rand_spell^;  [If spell is valid, set y-99 to spell number: y-99]

--------------------------------------------------------------------------------

 [Determine Spell Level, Type, Element]
!?FU7779&x1>=0/x1<=69;
 [x1=spell number, y-96 returns level, y-97 returns type, y-98 returns element]

!!SSx1:L?y-96 S?y-98 F?y-97; [y-96 - spell level, y-98 - spell elements, y-97 spell flags]
!!VRy-97:&1 +1; [y-97=1 for adventure spells, y-97=2 for combat spells]

!!UN:C4474587/4/?y1 Cy1/4/?y2;  [by igrik]
!!VRy3:Sx1 *136 +y2 +28;        [Air=1, Fire=2, Water=4, Earth=8]
!!UN:Cy3/4/?y-98;               [y-98 - spell magic school]

********************************************************************************

** SET AI STACK EXPERIENCE DIFFICULTY by Fnord **

 [Set AI values for all difficulties]
!?FU22000;
!!EA0:Ax16/x1; [Set AI Experience Multiplier]
!!VRz-10&x4=1:S^%X1^; [Convert x1 to a string: z-10]
!!UN&x4=1:N5/-10/2; [Write AI Experience Multiplier to ini file, index 2]
!!EA0:Sx16/x2; [Set AI Additional Experience]
!!VRz-10&x4=1:S^%X2^; [Convert x1 to a string: z-10]
!!UN&x4=1:N5/-10/3; [Write AI Experience Multiplier to ini file, index 3]
!!EA0:Tx16/x3; [Set AI Town Garrison Multiplier]
!!VRz-10&x4=1:S^%X3^; [Convert x1 to a string: z-10]
!!UN&x4=1:N5/-10/4; [Write AI Experience Multiplier to ini file, index 4]

 [Customize Human/AI values]
!?FU22001;
!!UN:J2/?y1; [Player Difficulty level: y1]
!!EA0:Ay1/?y2; [AI Experience Multiplier: y2]
!!EA0:Sy1/?y3; [AI Additional Experience: y3]
!!EA0:Ty1/?y4; [AI Town Garrison Multiplier: y4]
!!EA0:H?y5; [Human Experience Multiplier: y5]

!!VRz-10:S^^; [Set z-10 to null]
!!UN:N6/-10/1; [Load Human Experience Multiplier: z-10]
!!VRz-10:H2; [Set Flag 2 to TRUE if z-10 string not empty]
!!VRy5&2:Vz-10; [Convert z-10 to y5]
!!VRz-10:S^^; [Set z-10 to null]
!!UN:N6/-10/2; [Load AI Experience Multiplier: z-10]
!!VRz-10:H2; [Set Flag 2 to TRUE if z-10 string not empty]
!!VRy2&2:Vz-10; [Convert z-10 to y2]
!!VRz-10:S^^; [Set z-10 to null]
!!UN:N6/-10/3; [Load Additional Experience: z-10]
!!VRz-10:H2; [Set Flag 2 to TRUE if z-10 string not empty]
!!VRy3&2:Vz-10; [Convert z-10 to y3]
!!VRz-10:S^^; [Set z-10 to null]
!!UN:N6/-10/4; [Load AI Town Garrison Multiplier: z-10]
!!VRz-10:H2; [Set Flag 2 to TRUE if z-10 string not empty]
!!VRy4&2:Vz-10; [Convert z-10 to y4]

!!EA0:Hy5; [Set Custom Human Experience Multiplier: y5]
!!DO22000/0/4/1:Py2/y3/y4/0; [Set Custom AI Values: y2, y3, y4]

 [Set AI Experience Multiplier "Level" string: z2]
!!VRz2&y2=0:Sz100039; [None]
!!VRz2&y2>0/y2<100:Sz100018; [Easier than Easy]
!!VRz2&y2=100:Sz100019; [Easy]
!!VRz2&y2>100/y2<200:Sz100020; [Easy/Normal]
!!VRz2&y2=200:Sz100021; [Normal]
!!VRz2&y2>200/y2<300:Sz100022; [Normal/Hard]
!!VRz2&y2=300:Sz100023; [Hard]
!!VRz2&y2>300/y2<400:Sz100024; [Hard/Expert]
!!VRz2&y2=400:Sz100025; [Expert]
!!VRz2&y2>400/y2<500:Sz100026; [Expert/Impossible]
!!VRz2&y2=500:Sz100027; [Impossible]
!!VRz2&y2>500:Sz100028; [Harder than Impossible]

 [Set AI Additional Experience "Level" string: z3]
!!VRz3&y3=0:Sz100039; [None]
!!VRz3&y3>0/y3<50:Sz100018; [Easier than Easy]
!!VRz3&y3=50:Sz100019; [Easy]
!!VRz3&y3>50/y3<100:Sz100020; [Easy/Normal]
!!VRz3&y3=100:Sz100021; [Normal]
!!VRz3&y3>100/y3<200:Sz100022; [Normal/Hard]
!!VRz3&y3=200:Sz100023; [Hard]
!!VRz3&y3>200/y3<300:Sz100024; [Hard/Expert]
!!VRz3&y3=300:Sz100025; [Expert]
!!VRz3&y3>300/y3<400:Sz100026; [Expert/Impossible]
!!VRz3&y3=400:Sz100027; [Impossible]
!!VRz3&y3>400:Sz100028; [Harder than Impossible]

 [Set AI Town Garrison Multiplier "Level" string: z4]
!!VRz4&y4=0:Sz100039; [None]
!!VRz4&y4>0/y4<10:Sz100018; [Easier than Easy]
!!VRz4&y4=10:Sz100019; [Easy]
!!VRz4&y4>10/y4<25:Sz100020; [Easy/Normal]
!!VRz4&y4=25:Sz100021; [Normal]
!!VRz4&y4>25/y4<50:Sz100022; [Normal/Hard]
!!VRz4&y4=50:Sz100023; [Hard]
!!VRz4&y4>50/y4<75:Sz100024; [Hard/Expert]
!!VRz4&y4=75:Sz100025; [Expert]
!!VRz4&y4>75/y4<100:Sz100026; [Expert/Impossible]
!!VRz4&y4=100:Sz100027; [Impossible]
!!VRz4&y4>100:Sz100028; [Harder than Impossible]

!!VRz-1:Sz100006; [Dialogue Header: z-1]
!!VRz-2:Sz100007; [AI Experience Multiplier: z-2]
!!VRz-3:Sz100008; [Human Experience Multiplier: z-3]
!!VRz-4:Sz100009; [AI Town Garrison Multiplier: z-4]
!!VRz-5:Sz100010; [AI Additional Experience Multiplier: z-5]
!!VRz-6:Sz100011; [Use these values: z-6]

 [Display radio button dialogue: result in v3]
!!IF:G1/3/16/-1/-2/-3/-4/-5/-6/0/0/0/0/0/0/0;

 [Display Input box: result in z1 converted to value y6]
!!VRz-9&v3=1:Sz100029; [AI Experience Multiplier values: z-9]
!!VRz-9&v3=4:Sz100030; [AI Town Garrison Multiplier values: z-9]
!!VRz-9&v3=8:Sz100031; [AI Additional Experience values: z-9]
!!VRz-7&v3=1:Sz100012; [AI Experience Multiplier: z-7]
!!VRz-7&v3=2:Sz100013; [Human Experience Multiplier: z-7]
!!VRz-7&v3=4:Sz100014; [AI Town Garrison Multiplier: z-7]
!!VRz-7&v3=8:Sz100015; [AI Additional Experience Multiplier: z-7]
!!VRz-8:Sz100016; [Input prompt: z-8]

!!FU&v3=16:E; [Exit Function if no more changes]

 [Multipurpose Dialogue Box #15 - Text Input Box]
 [Result in z1 converted to y6. v1=-1 if ESC clicked]
!!VRz1:S^^; [Initialize z1 to null: z1]
!!IF:D15/-7/-8/1/1/1/1/1/1/1/1/1/1/1/1/1;
!!IF:E1/15; [Display Input Box]
!!VRz1:H1; [Flag 1 is set to False if no text and True if text]
!!VRy6:Vz1; [Convert z1 to a value and store in y6]

 [Check for allowed range: set Flag 2 to False if out of range]
!!IF:V2/1; [Initialize Flag 2 to True]
!!IF&y6<0:V2/0; [Set Flag 2 to False if y6 less than 0]
!!IF&y6>10000:V2/0; [Set Flag 2 to False if y6 greater than 10000]

!!IF&-2:M1/z100017; [Out of Range Message]

!!VRy2&1/2/v1>=0/v3=1:Sy6; [AI Experience Multiplier]
!!VRy5&1/2/v1>=0/v3=2:Sy6; [Human Experience Multiplier]
!!VRy4&1/2/v1>=0/v3=4:Sy6; [AI Town Garrison Multiplier]
!!VRy3&1/2/v1>=0/v3=8:Sy6; [AI Additional Experience]

!!EA0&1/2/v1>=0/v3=2:Hy5; [Set Custom Human Experience Multiplier: y5]
!!VRz-10:S^%Y5^; [Convert y5 to a string: z-10]
!!UN:N5/-10/1; [Write Human Experience Multiplier to ini file, index 1]
!!DO22000/0/4/1&1/2/v1>=0/v3<>2:Py2/y3/y4/1; [Set Custom AI Values: y2, y3, y4]

!!FU22001:P; [Call Function again to redisplay menu options]

---------------------------------------------------------

!#UN:P900/?v1; [Check if Stack Experience is enabled: v1]
!#UN:P229/?v2; [AI Stack Experience Difficulty: v2]

** If v2=0, Default is used (based on Game Difficulty chosen by player) **
; Parameters: AI Multiplier, AI additional experience and AI Garrison Multiplier
!#DO22000/0/4/1&v1=1/v2=1:P0/0/0; [None]
!#DO22000/0/4/1&v1=1/v2=2:P100/50/10; [Easy]
!#DO22000/0/4/1&v1=1/v2=3:P200/100/25; [Normal]
!#DO22000/0/4/1&v1=1/v2=4:P300/200/50; [Hard]
!#DO22000/0/4/1&v1=1/v2=5:P400/300/75; [Expert]
!#DO22000/0/4/1&v1=1/v2=6:P500/400/100; [Impossible]

** If v2=7, Defaults are used but may be customized by the player **
!#FU22001&v1=1/v2=7:P; [Custom]

********************************************************************************

 [Post-Instruction Trigger]
!?PI;
!!UN:R5/1/1; [Change mouse cursor to "wait" hourglass symbol]
!!UN:R7/0/1; [Show mouse cursor and disable changing]

********************************************************************************

** WoGify Initialization Code

!#UN:P901/0; [Set Experience System to "Equal Shares"]

!#IF:V870/0; [Flag 870 will be set to true by Mithril script if in use]
!#TM19:S1/1/1/255; [timer day one for all players]
!#VRv950:S0; [assume we haven't done the conversion yet]

!#VRi^wog_195_objReplaceMult^:S100;   [Default percentage of the original WoG replacement chance]
!#VRi^wog_195_howlingHollow_on^:S(TRUE);    [compatibility setting with mods - Archer]

** end of Initialization Code


** Timer routine

!?FU(OnEveryDay)&i^timerDay^=1/v950=0;

!!FU670:P; [do conversion if we haven't yet]

** end of timer routine


** function to do conversion

!?FU670;

** setup of and display dialogue box for WoGification message
!!VRv1:S0;
!!VRz1:Sz100000;
!!VRz2:Sz100001;
!!VRz3:S^../data/zvs/lib1.res/wogoption2.bmp^;
!!VRz4:Sz100002;
!!VRz-1:S^^;
!!IF:D1/1/-1/2/3/-1/-1/-1/4/-1/-1/-1/-1/-1/-1/-1;
!!IF:F1/-1/-1/-1/-1/0;          [enabled cancel button]
!!UN:P248/?y26;                 [check if "Display WoGification Messages" is enabled: y26]
!!IF&y26=1:E1/1;                [display WoGification dialogue box if enabled]
!!UN:R5/1/1;                    [Change cursor to "wait" hourglass cursor]
!!UN:R7/0/1;                    [Show cursor and disable changing]

!!VRv950:S1;                    [note we've done conversion]

!!UN:X?v957/?v958;              [get map size and underground flag]

!!UN:P900/?y22;                 [Check if Stack Experience is enabled: y22]
!!UN:P143/?y23;                 [Check if New Artifacts is enabled: y23]
!!UN:P234/?y24;                 [Check if Warlord's Banner is disabled: y24]

!!if|y22=0/y24=1;               [If Stack Experience is disabled, disable Warlord's Banner]
  !!UN:A156/1 P234/1 P234/?y24; [set "banned" and set "blocked"]
!!en;


 [If Stack Experience enabled, New WoG Artifacts enabled, and]
 [Warlord's Banners not banned, add Banners to Creature Banks]
!!FU(WOG_IFY_CreatureBanks_AddWarlordBanners)&y22=1/y23=1/y24=0:P;

** Convert Objects
** table fields: type/subtype/footprint/terrain/back wall/edge x/edge y
** footprint values:  0 = Y, 1 = RY, 2 = YR, 3 = RYR, 4 = other

!!UN:P195/?y21;                         [Check if Replace Objects is enabled: y21=1 if yes]

** TABLE of Y OBJECTS **

!!VRy20:S0;                                [initialize object counter to 0]

!!FU(WOG_CheckRandomMap):P?i^wog_tempIsRandomMap^;
!!if&i^wog_tempIsRandomMap^;
  !!SN:F^PluginExists^/^RMG_CustomizeObjectProperties^;
  !!VRt:Sv1;
  !!if&v1;
    !!SN:L^RMG_CustomizeObjectProperties.era^/?p;
    !!VRt:Sp;

    !!if&p;
      !!SN:Ap/^RMGObjectSupportsGeneration^/?f;
      !!VRt:Sf;

      !!if&f;
        !!SN:Ef/(CALLCONV_CDECL)/63/-1;
        !!VRt:Sv1;
      !!en;
    !!en;
  !!en;
  !!VRi^wog_tempIsRandomMap^:St;
!!en;

!!if&i^wog_tempIsRandomMap^=0;
  
  !!UN:P104/?y3;                             [check if Arcane Tower script is enabled]
  !!VRy3&y21=0:S0;                           [set y3 to 0 if Replace Objects isn't enabled]
  !!VRy20&y3=1:+1;                           [add one to object counter]
  !!VRy11&y3=1:Sy20 *7;                      [number to add to index variable]
  !!VRy10&y3=1:S593 +y11;                    [new index number]
  !!VRvy10&y3=1:C63/ 9/0/-1/0/1/0;           [arcane tower] [table of Y objects]

  !!UN:P110/?y3;                             [check if Magic Mushrooms script is enabled]
  !!VRy3&y21=0:S0;                           [set y3 to 0 if Replace Objects isn't enabled]
  !!VRy20&y3=1:+1;                           [add one to object counter]
  !!VRy11&y3=1:Sy20 *7;                      [number to add to index variable]
  !!VRy10&y3=1:S593 +y11;                    [new index number]
  !!VRvy10&y3=1:C63/14/0/-1/0/1/0;           [air mushroom]

  !!VRy20&y3=1:+1;                           [add one to object counter]
  !!VRy11&y3=1:Sy20 *7;                      [number to add to index variable]
  !!VRy10&y3=1:S593 +y11;                    [new index number]
  !!VRvy10&y3=1:C63/18/0/-1/0/1/0;           [water mushroom]

  !!VRy20&y3=1:+1;                           [add one to object counter]
  !!VRy11&y3=1:Sy20 *7;                      [number to add to index variable]
  !!VRy10&y3=1:S593 +y11;                    [new index number]
  !!VRvy10&y3=1:C63/23/0/-1/1/1/0;           [earth mushroom]

  !!VRy20&y3=1:+1;                           [add one to object counter]
  !!VRy11&y3=1:Sy20 *7;                      [number to add to index variable]
  !!VRy10&y3=1:S593 +y11;                    [new index number]
  !!VRvy10&y3=1:C63/29/0/-1/0/1/0;           [fire mushroom]

  !!UN:P12/?y3;                              [check if Living Skull skull script is enabled]
  !!VRy3&y21=0:S0;                           [set y3 to 0 if Replace Objects isn't enabled]
  !!VRy20&y3=1:+1;                           [add one to object counter]
  !!VRy11&y3=1:Sy20 *7;                      [number to add to index variable]
  !!VRy10&y3=1:S593 +y11;                    [new index number]
  !!VRvy10&y3=1:C63/50/0/-1/1/1/0;           [living skull]

  !!UN:P17/?y3;                              [check if Potion Fountains script is enabled]
  !!VRy3&y21=0:S0;                           [set y3 to 0 if Replace Objects isn't enabled]
  !!VRy20&y3=1:+1;                           [add one to object counter]
  !!VRy11&y3=1:Sy20 *7;                      [number to add to index variable]
  !!VRy10&y3=1:S593 +y11;                    [new index number]
  !!VRvy10&y3=1:C63/48/0/-1/0/0/0;           [valhalla fountain]

  !!UN:P18/?y3;                              [check if Alms House script is enabled]
  !!VRy3&y21=0:S0;                           [set y3 to 0 if Replace Objects isn't enabled]
  !!VRy20&y3=1:+1;                           [add one to object counter]
  !!VRy11&y3=1:Sy20 *7;                      [number to add to index variable]
  !!VRy10&y3=1:S593 +y11;                    [new index number]
  !!VRvy10&y3=1:C63/24/0/ 3/0/1/0;           [alms house using snowy artifact merchant]

  !!UN:P70/?y3;                              [check if Death Chamber script is enabled]
  !!VRy3&y21=0:S0;                           [set y3 to 0 if Replace Objects isn't enabled]
  !!VRy20&y3=1:+1;                           [add one to object counter]
  !!VRy11&y3=1:Sy20 *7;                      [number to add to index variable]
  !!VRy10&y3=1:S593 +y11;                    [new index number]
  !!VRvy10&y3=1:C63/15/0/-1/0/1/0;           [death chamber]

  !!if&y20>0;
    !!FU(WOG_195_CalcReplaceChance):P60/?y30;
    !!FU(WOG_195_CalcReplaceChance):P20/?y31;
    !!FU(WOG_195_CalcReplaceChance):P15/?y32;
    !!FU(WOG_195_CalcReplaceChance):P10/?y33;
    !!FU671:P88/-1/0/y20/y30;                [replace 60% of level 1 magic shrines]
    !!FU671:P100/-1/0/y20/y31;               [replace 20% of learning stones]
    !!FU671:P113/-1/0/y20/y32;               [replace 15% of witch huts]
    !!FU671:P112/-1/0/y20/y33;               [replace 10% of windmills]
  !!en;


  ** table fields: type/subtype/footprint/terrain/back wall/edge x/edge y
  ** footprint values:  0 = Y, 1 = RY, 2 = YR, 3 = RYR, 4 = other

  ** TABLE of RYR OBJECTS **

  !!VRy20:S0; [initialize object counter to 0]
  !!UN:P140/?y3; [check if New Creature Dwellings option is enabled]
  !!VRy3&y21=0:S0; [set y3 to 0 if Replace Objects isn't enabled]
  !!VRy20&y3=1:+1; [add one to object counter]
  !!VRy11&y3=1:Sy20 *7; [number to add to index variable]
  !!VRy10&y3=1:S593 +y11; [new index number]
  !!VRvy10&y3=1:C17/91/3/-1/0/1/0; [vast cavern] [table of RYR objects]

  !!VRy3&y21=0:S0; [set y3 to 0 if Replace Objects isn't enabled]
  !!VRy20&y3=1:+1; [add one to object counter]
  !!VRy11&y3=1:Sy20 *7; [number to add to index variable]
  !!VRy10&y3=1:S593 +y11; [new index number]
  !!VRvy10&y3=1:C17/99/1/-1/1/1/0; [hellfire rift]

  !!UN:P138/?y3; [check if New Creature Banks option is enabled]
  !!VRy3&y21=0:S0; [set y3 to 0 if Replace Objects isn't enabled]
  !!VRy20&y3=1:+1; [add one to object counter]
  !!VRy11&y3=1:Sy20 *7; [number to add to index variable]
  !!VRy10&y3=1:S593 +y11; [new index number]
  !!VRvy10&y3=1:C16/20/3/-1/1/2/1; [grotto]

  !!UN:P108/?y3; [check if Junk Merchant script is enabled]
  !!VRy3&y21=0:S0; [set y3 to 0 if Replace Objects isn't enabled]
  !!VRy20&y3=1:+1; [add one to object counter]
  !!VRy11&y3=1:Sy20 *7; [number to add to index variable]
  !!VRy10&y3=1:S593 +y11; [new index number]
  !!VRvy10&y3=1:C63/ 8/3/-1/2/2/1; [junk merchant] [actually RRYR]

  !!UN:P17/?y3; [check if Potion Fountains script is enabled]
  !!VRy3&y21=0:S0; [set y3 to 0 if Replace Objects isn't enabled]
  !!VRy20&y3=1:+1; [add one to object counter]
  !!VRy11&y3=1:Sy20 *7; [number to add to index variable]
  !!VRy10&y3=1:S593 +y11; [new index number]
  !!VRvy10&y3=1:C63/ 2/3/-1/1/1/0; [venus's fountain]

  !!UN:P15/?y3; [check if Mysterious Creature Dwelling script is enabled]
  !!VRy3&y21=0:S0; [set y3 to 0 if Replace Objects isn't enabled]
  !!VRy20&y3=1:+1; [add one to object counter]
  !!VRy11&y3=1:Sy20 *7; [number to add to index variable]
  !!VRy10&y3=1:S593 +y11; [new index number]
  !!VRvy10&y3=1:C63/ 3/3/-1/0/2/1; [mysterious creature dwelling]

  !!UN:P30/?y3; [check if Adventure Cave script is enabled]
  !!VRy3&y21=0:S0; [set y3 to 0 if Replace Objects isn't enabled]
  !!VRy20&y3=1:+1; [add one to object counter]
  !!VRy11&y3=1:Sy20 *7; [number to add to index variable]
  !!VRy10&y3=1:S593 +y11; [new index number]
  !!VRvy10&y3=1:C63/57/3/-1/0/1/0; [adventure cave]

  !!UN:P26/?y3; [check if Artificer script is enabled]
  !!VRy3&y21=0:S0; [set y3 to 0 if Replace Objects isn't enabled]
  !!VRy20&y3=1:+1; [add one to object counter]
  !!VRy11&y3=1:Sy20 *7; [number to add to index variable]
  !!VRy10&y3=1:S593 +y11; [new index number]
  !!VRvy10&y3=1:C63/52/3/-1/0/2/0; [artificer]

  !!UN:P21/?y3; [check if Freelancer's Guild script is enabled]
  !!VRy3&y21=0:S0; [set y3 to 0 if Replace Objects isn't enabled]
  !!VRy20&y3=1:+1; [add one to object counter]
  !!VRy11&y3=1:Sy20 *7; [number to add to index variable]
  !!VRy10&y3=1:S593 +y11; [new index number]
  !!VRvy10&y3=1:C213/0/3/-1/0/1/0; [freelancer's guild]

  !!if&y20>0;
    !!FU(WOG_195_CalcReplaceChance):P80/?y30;
    !!FU671:P16/1/3/y20/y30; [replace 80% of dwarven treasuries]
    !!FU671:P55/0/3/y20/y30; [replace 80% of mystical gardens]
    !!FU671:P84/0/3/y20/y30; [replace 80% of crypts]
  !!en;



  ** table fields: type/subtype/footprint/terrain/back wall/edge x/edge y
  ** footprint values:  0 = Y, 1 = RY, 2 = YR, 3 = RYR, 4 = other

  ** TABLE of Non-Level 8 Dwelling RY OBJECTS **

  !!VRy20:S0; [initialize object counter to 0]
  !!UN:P138/?y3; [check if New Creature Banks option is enabled]
  !!VRy3&y21=0:S0; [set y3 to 0 if Replace Objects isn't enabled]
  !!VRy20&y3=1:+1; [add one to object counter]
  !!VRy11&y3=1:Sy20 *7; [number to add to index variable]
  !!VRy10&y3=1:S593 +y11; [new index number]
  !!VRvy10&y3=1:C16/11/1/-1/1/1/0; [hunting lodge]   [table of non-level 8 RY Objects]

  ; Already moved to new script
  *!UN:P109/?y3; [check if Market of Time script is enabled]
  *!VRy3&y21=0:S0; [set y3 to 0 if Replace Objects isn't enabled]
  *!VRy20&y3=1:+1; [add one to object counter]
  *!VRy11&y3=1:Sy20 *7; [number to add to index variable]
  *!VRy10&y3=1:S593 +y11; [new index number]
  *!VRvy10&y3=1:C63/51/1/-1/0/0/0; [market of time]

  !!UN:P28/?y3; [check if School of Wizardry script is enabled]
  !!VRy3&y21=0:S0; [set y3 to 0 if Replace Objects isn't enabled]
  !!VRy20&y3=1:+1; [add one to object counter]
  !!VRy11&y3=1:Sy20 *7; [number to add to index variable]
  !!VRy10&y3=1:S593 +y11; [new index number]
  !!VRvy10&y3=1:C63/62/1/-1/0/0/0; [school of wizardry]

  !!UN:P44/?y3; [check if Emerald Tower script is enabled]
  !!VRy3&y21=0:S0; [set y3 to 0 if Replace Objects isn't enabled]
  !!VRy20&y3=1:+1; [add one to object counter]
  !!VRy11&y3=1:Sy20 *7; [number to add to index variable]
  !!VRy10&y3=1:S593 +y11; [new index number]
  !!VRvy10&y3=1:C63/65/1/-1/0/0/0; [emerald tower]

  !!UN:P140/?y3; [check if New Creature Dwellings option is enabled]
  !!VRy3&y21=0:S0; [set y3 to 0 if Replace Objects isn't enabled]
  !!VRy20&y3=1:+1; [add one to object counter]
  !!VRy11&y3=1:Sy20 *7; [number to add to index variable]
  !!VRy10&y3=1:S593 +y11; [new index number]
  !!VRvy10&y3=1:C17/94/1/-1/0/1/0; [lost friary]

  !!VRy3&y21=0:S0; [set y3 to 0 if Replace Objects isn't enabled]
  !!VRy20&y3=1:+1; [add one to object counter]
  !!VRy11&y3=1:Sy20 *7; [number to add to index variable]
  !!VRy10&y3=1:S593 +y11; [new index number]
  !!VRvy10&y3=1:C17/96/1/-1/0/0/0; [sylvan homestead]

  !!if&i^wog_195_howlingHollow_on^;       [compatibility setting with mods - Archer]
    !!VRy3&y21=0:S0; [set y3 to 0 if Replace Objects isn't enabled]

    !!if&y3=1;
      !!VRy20:+1; [add one to object counter]
      !!VRy11:Sy20 *7; [number to add to index variable]
      !!VRy10:S593 +y11; [new index number]
      !!VRvy10:C17/98/1/-1/0/0/0; [howling hollow]
    !!en;
  !!en;

!!en;

!!UN:P76/?y3; [check if Commander Sanctuary script is enabled]
!!VRy3&y21=0:S0; [set y3 to 0 if Replace Objects isn't enabled]
!!VRy20&y3=1:+1; [add one to object counter]
!!VRy11&y3=1:Sy20 *7; [number to add to index variable]
!!VRy10&y3=1:S593 +y11; [new index number]
!!VRvy10&y3=1:C80/0/1/-1/0/0/0; [sanctuary]

!!if&y20>0;
  !!FU(WOG_195_CalcReplaceChance):P70/?y30;
  !!FU(WOG_195_CalcReplaceChance):P75/?y31;
  !!FU(WOG_195_CalcReplaceChance):P25/?y32;
  !!FU671:P16/3/1/y20/y30; [replace 70% of imp caches]
  !!FU671:P16/2/1/y20/y30; [replace 70% of griffin conservatories]
  !!FU671:P64/-1/1/y20/y31; [replace 75% of rally flags]
  !!FU671:P23/-1/1/y20/y32; [replace 25% of marletto towers]
!!en;


** table fields: type/subtype/footprint/terrain/back wall/edge x/edge y
** footprint values:  0 = Y, 1 = RY, 2 = YR, 3 = RYR, 4 = other

** TABLE of LEVEL 8 DWELLING RY OBJECTS **

!!if&i^wog_tempIsRandomMap^=0;
  
  !!VRy20:S0; [initialize object counter to 0]
  !!UN:P137/?y3; [check if Level 8 Creature Dwellings option is enabled]
  !!VRy3&y21=0:S0; [set y3 to 0 if Replace Objects isn't enabled]
  !!VRy20&y3=1:+1; [add one to object counter]
  !!VRy11&y3=1:Sy20 *7; [number to add to index variable]
  !!VRy10&y3=1:S593 +y11; [new index number]
  !!VRvy10&y3=1:C17/80/1/-1/0/1/0; [portal of splendor] [table of level 8 RY objects]

  !!VRy20&y3=1:+1; [add one to object counter]
  !!VRy11&y3=1:Sy20 *7; [number to add to index variable]
  !!VRy10&y3=1:S593 +y11; [new index number]
  !!VRvy10&y3=1:C17/82/1/-1/1/0/0; [storm temple]

  !!VRy20&y3=1:+1; [add one to object counter]
  !!VRy11&y3=1:Sy20 *7; [number to add to index variable]
  !!VRy10&y3=1:S593 +y11; [new index number]
  !!VRvy10&y3=1:C17/83/1/-1/0/0/0; [unholy palace]

  !!VRy20&y3=1:+1; [add one to object counter]
  !!VRy11&y3=1:Sy20 *7; [number to add to index variable]
  !!VRy10&y3=1:S593 +y11; [new index number]
  !!VRvy10&y3=1:C17/85/1/-1/0/1/0; [cave of darkness]

  !!VRy20&y3=1:+1; [add one to object counter]
  !!VRy11&y3=1:Sy20 *7; [number to add to index variable]
  !!VRy10&y3=1:S593 +y11; [new index number]
  !!VRvy10&y3=1:C17/86/1/-1/0/1/0; [behemoth tomb]

  !!VRy20&y3=1:+1; [add one to object counter]
  !!VRy11&y3=1:Sy20 *7; [number to add to index variable]
  !!VRy10&y3=1:S593 +y11; [new index number]
  !!VRvy10&y3=1:C17/88/1/-1/0/1/0; [spirit pyre]

  !!if&y20>0;
    !!FU(WOG_195_CalcReplaceChance):P40/?y30;
    !!FU(WOG_195_CalcReplaceChance):P50/?y31;
    !!FU671:P16/3/1/y20/y30; [replace 40% of imp caches]
    !!FU671:P16/2/1/y20/y30; [replace 40% of griffin conservatories]
    !!FU671:P64/-1/1/y20/y31; [replace 50% of rally flags]
    !!FU671:P23/-1/1/y20/10; [replace 10% of marletto towers]
  !!en;


  ** table fields: type/subtype/footprint/terrain/back wall/edge x/edge y
  ** footprint values:  0 = Y, 1 = RY, 2 = YR, 3 = RYR, 4 = other

  ** TABLE of Non-Level 8 Dwelling YR OBJECTS **

  !!VRy20:S0; [initialize object counter to 0]
  !!UN:P140/?y3; [check if New Creature Dwellings option is enabled]
  !!VRy3&y21=0:S0; [set y3 to 0 if Replace Objects isn't enabled]
  !!VRy20&y3=1:+1; [add one to object counter]
  !!VRy11&y3=1:Sy20 *7; [number to add to index variable]
  !!VRy10&y3=1:S593 +y11; [new index number]
  !!VRvy10&y3=1:C17/89/2/ 6/0/1/0; [rock covered position] [table of non-level 8 YR objects]

  !!VRy20&y3=1:+1; [add one to object counter]
  !!VRy11&y3=1:Sy20 *7; [number to add to index variable]
  !!VRy10&y3=1:S593 +y11; [new index number]
  !!VRvy10&y3=1:C17/90/2/ 3/0/1/0; [snow covered position]

  !!VRy20&y3=1:+1; [add one to object counter]
  !!VRy11&y3=1:Sy20 *7; [number to add to index variable]
  !!VRy10&y3=1:S593 +y11; [new index number]
  !!VRvy10&y3=1:C17/92/2/-1/0/1/0; [dream horse-shoe]

  !!VRy20&y3=1:+1; [add one to object counter]
  !!VRy11&y3=1:Sy20 *7; [number to add to index variable]
  !!VRy10&y3=1:S593 +y11; [new index number]
  !!VRvy10&y3=1:C17/93/2/-1/0/1/0; [natural calamity]

  ; Warning: The passability of Snowman and its replaced objects are different (Snowman is bigger), this could possibly blocks the patch
  !!VRy20&y3=1:+1; [add one to object counter]
  !!VRy11&y3=1:Sy20 *7; [number to add to index variable]
  !!VRy10&y3=1:S593 +y11; [new index number]
  !!VRvy10&y3=1:C17/95/2/ 3/1/1/0; [snowman]

  !!VRy20&y3=1:+1; [add one to object counter]
  !!VRy11&y3=1:Sy20 *7; [number to add to index variable]
  !!VRy10&y3=1:S593 +y11; [new index number]
  !!VRvy10&y3=1:C17/97/2/-1/0/1/0; [sorceress dwelling]

  !!VRy20&y3=1:+1; [add one to object counter]
  !!VRy11&y3=1:Sy20 *7; [number to add to index variable]
  !!VRy10&y3=1:S593 +y11; [new index number]
  !!VRvy10&y3=1:C17/100/2/-1/0/1/0; [dracolich dwelling]

  !!UN:P138/?y3; [check if New Creature Banks option is enabled]
  !!VRy3&y21=0:S0; [set y3 to 0 if Replace Objects isn't enabled]
  !!VRy20&y3=1:+1; [add one to object counter]
  !!VRy11&y3=1:Sy20 *7; [number to add to index variable]
  !!VRy10&y3=1:S593 +y11; [new index number]
  !!VRvy10&y3=1:C16/12/2/ 3/1/2/0; [snow-covered grotto]

  !!VRy20&y3=1:+1; [add one to object counter]
  !!VRy11&y3=1:Sy20 *7; [number to add to index variable]
  !!VRy10&y3=1:S593 +y11; [new index number]
  !!VRvy10&y3=1:C16/17/2/-1/0/1/0; [translyvanian tavern]

  !!VRy20&y3=1:+1; [add one to object counter]
  !!VRy11&y3=1:Sy20 *7; [number to add to index variable]
  !!VRy10&y3=1:S593 +y11; [new index number]
  !!VRvy10&y3=1:C16/18/2/-1/0/1/0; [home of the bat]

  !!UN:P141/?y3; [check if Sphinx option is enabled]
  !!VRy3&y21=0:S0; [set y3 to 0 if Replace Objects isn't enabled]
  !!VRy20&y3=1:+1; [add one to object counter]
  !!VRy11&y3=1:Sy20 *7; [number to add to index variable]
  !!VRy10&y3=1:S593 +y11; [new index number]
  !!VRvy10&y3=1:C63/10/2/ 1/0/1/0; [sand sphinx]

  !!VRy20&y3=1:+1; [add one to object counter]
  !!VRy11&y3=1:Sy20 *7; [number to add to index variable]
  !!VRy10&y3=1:S593 +y11; [new index number]
  !!VRvy10&y3=1:C63/13/2/ 3/0/1/0; [snow sphinx]

  !!VRy20&y3=1:+1; [add one to object counter]
  !!VRy11&y3=1:Sy20 *7; [number to add to index variable]
  !!VRy10&y3=1:S593 +y11; [new index number]
  !!VRvy10&y3=1:C63/12/2/ 2/0/1/0; [grass sphinx]

  !!UN:P14/?y3; [check if Altar of Transformation script is enabled]
  !!VRy3&y21=0:S0; [set y3 to 0 if Replace Objects isn't enabled]
  !!VRy20&y3=1:+1; [add one to object counter]
  !!VRy11&y3=1:Sy20 *7; [number to add to index variable]
  !!VRy10&y3=1:S593 +y11; [new index number]
  !!VRvy10&y3=1:C63/20/2/-1/0/1/0; [transformation altar]
!!en;

!!UN:P13/?y3; [check if Tavern Card Game script is enabled]
!!VRy3&y21=0:S0; [set y3 to 0 if Replace Objects isn't enabled]
!!VRy20&y3=1:+1; [add one to object counter]
!!VRy11&y3=1:Sy20 *7; [number to add to index variable]
!!VRy10&y3=1:S593 +y11; [new index number]
!!VRvy10&y3=1:C95/ 0/2/-1/0/1/0; [tavern]

!!if&y20>0;
  !!FU(WOG_195_CalcReplaceChance):P70/?y30;
  !!FU(WOG_195_CalcReplaceChance):P75/?y31;
  !!FU(WOG_195_CalcReplaceChance):P80/?y32;
  !!FU671:P16/4/2/y20/y30; [replace 70% of medusa stores]
  !!FU671:P16/0/2/y20/y30; [replace 70% of cyclops stockpiles]
  !!FU671:P16/5/2/y20/y30; [replace 70% of naga banks]
  !!FU671:P96/-1/2/y20/y31; [replace 75% of temples]
  !!FU671:P106/-1/2/y20/y31; [replace 75% of war machine factories]
  !!FU671:P28/-1/2/y20/y31; [replace 75% of fairy rings]
  !!FU671:P14/-1/2/y20/y32; [replace 80% of swan ponds]
!!en;


** table fields: type/subtype/footprint/terrain/back wall/edge x/edge y
** footprint values:  0 = Y, 1 = RY, 2 = YR, 3 = RYR, 4 = other
!!if&i^wog_tempIsRandomMap^=0;

  !!VRy20:S0; [initialize object counter to 0]
  !!UN:P137/?y3; [check if Level 8 Creature Dwellings option is enabled]
  !!VRy3&y21=0:S0; [set y3 to 0 if Replace Objects isn't enabled]
  !!VRy20&y3=1:+1; [add one to object counter]
  !!VRy11&y3=1:Sy20 *7; [number to add to index variable]
  !!VRy10&y3=1:S593 +y11; [new index number]
  !!VRvy10&y3=1:C17/81/2/-1/0/1/0; [dragon peaks] [table of level 8 YR objects]

  !!VRy20&y3=1:+1; [add one to object counter]
  !!VRy11&y3=1:Sy20 *7; [number to add to index variable]
  !!VRy10&y3=1:S593 +y11; [new index number]
  !!VRvy10&y3=1:C17/84/2/-1/0/1/0; [spectral vault]

  !!VRy20&y3=1:+1; [add one to object counter]
  !!VRy11&y3=1:Sy20 *7; [number to add to index variable]
  !!VRy10&y3=1:S593 +y11; [new index number]
  !!VRvy10&y3=1:C17/87/2/-1/0/1/0; [chaos pool]

  !!if&y20>0;
    !!FU(WOG_195_CalcReplaceChance):P25/?y30;
    !!FU(WOG_195_CalcReplaceChance):P40/?y31;
    !!FU(WOG_195_CalcReplaceChance):P60/?y32;
    !!FU671:P16/4/2/y20/y30; [replace 25% of medusa stores]
    !!FU671:P16/0/2/y20/y30; [replace 25% of cyclops stockpiles]
    !!FU671:P16/5/2/y20/y30; [replace 25% of naga banks]
    !!FU671:P28/-1/2/y20/y31; [replace 40% of fairy rings]
    !!FU671:P14/-1/2/y20/y32; [replace 60% of swan ponds]
  !!en;


  ** table fields: type/subtype/footprint/terrain/back wall/edge x/edge y
  ** footprint values:  0 = Y, 1 = RY, 2 = YR, 3 = RYR, 4 = other

  !!VRy20:S0; [initialize object counter to 0]
  !!UN:P137/?y3; [check if Level 8 Creature Dwellings option is enabled]
  !!VRy3&y21=0:S0; [set y3 to 0 if Replace Objects isn't enabled]
  !!VRy20&y3=1:+1; [add one to object counter]
  !!VRy11&y3=1:Sy20 *7; [number to add to index variable]
  !!VRy10&y3=1:S593 +y11; [new index number]
  !!VRvy10&y3=1:C17/62/1/ 3/0/1/0; [frozen cliffs] [table of Azure Dragon dwelling]

  !!FU671&y20>0:P39/-1/1/y20/10; [replace 10% of Lean To's]


  ** table fields: type/subtype/footprint/terrain/back wall/edge x/edge y
  ** footprint values:  0 = Y, 1 = RY, 2 = YR, 3 = RYR, 4 = other

  !!VRy20:S0; [initialize object counter to 0]
  !!UN:P137/?y3; [check if Level 8 Creature Dwellings option is enabled]
  !!VRy3&y21=0:S0; [set y3 to 0 if Replace Objects isn't enabled]
  !!VRy20&y3=1:+1; [add one to object counter]
  !!VRy11&y3=1:Sy20 *7; [number to add to index variable]
  !!VRy10&y3=1:S593 +y11; [new index number]
  !!VRvy10&y3=1:C17/63/1/-1/0/0/0; [crystal caverns] [table of Crystal Dragon dwelling]

  !!if&y20>0;
    !!FU(WOG_195_CalcReplaceChance):P30/?y30;
    !!FU671:P78/-1/1/y20/10; [replace 10% of Refugee Camps]
    !!FU671:P97/-1/1/y20/y30; [replace 30% of Den of Thieves]
  !!en;


  ** table fields: type/subtype/footprint/terrain/back wall/edge x/edge y
  ** footprint values:  0 = Y, 1 = RY, 2 = YR, 3 = RYR, 4 = other

  !!VRy20:S0; [initialize object counter to 0]
  !!UN:P138/?y3; [check if New Creature Banks option is enabled]
  !!VRy3&y21=0:S0; [set y3 to 0 if Replace Objects isn't enabled]
  !!VRy20&y3=1:+1; [add one to object counter]
  !!VRy11&y3=1:Sy20 *7; [number to add to index variable]
  !!VRy10&y3=1:S593 +y11; [new index number]
  !!VRvy10&y3=1:C16/19/0/-1/0/0/0; [lost bottle] [table of Y water objects]

  !!FU671&y20>0:P82/-1/0/y20/20; [replace 20% of sea chests]


  ** table fields: type/subtype/footprint/terrain/back wall/edge x/edge y
  ** footprint values:  0 = Y, 1 = RY, 2 = YR, 3 = RYR, 4 = other

  !!VRy20:S0; [initialize object counter to 0]
  !!UN:P11/?y3; [check if Palace of Dreams script is enabled]
  !!VRy3&y21=0:S0; [set y3 to 0 if Replace Objects isn't enabled]

  !!if&y3=1;
    !!VRy20:+1; [add one to object counter]
    !!VRy11:Sy20 *7; [number to add to index variable]
    !!VRy10:S593 +y11; [new index number]
    !!VRvy10:C63/33/4/-1/0/1/0; [palace of dreams] [table of large objects]
  !!en;

  !!UN:P16/?y3; [check if Battle Academy script is enabled]
  !!VRy3&y21=0:S0; [set y3 to 0 if Replace Objects isn't enabled]

  !!if&y3=1;
    !!VRy20:+1; [add one to object counter]
    !!VRy11:Sy20 *7; [number to add to index variable]
    !!VRy10:S593 +y11; [new index number]
    !!VRvy10:C63/32/5/-1/0/1/0; [battle academy]
  !!en;

  !!if&y20>0;
    !!FU(WOG_195_CalcReplaceChance):P40/?y30;
    !!FU671:P(OBJ_DRAGON_UTOPIA)/-1/4/y20/y30; [replace 40% of dragon utopias]
  !!en;


  ** table fields: type/subtype/footprint/terrain/back wall/edge x/edge y
  ** footprint values:  0 = Y, 1 = RY, 2 = YR, 3 = RYR, 4 = other

  !!VRy20:S0; [initialize object counter to 0]
  !!UN:P32/?y3; [check if Summoning Stones script is enabled]
  !!VRy3&y21=0:S0; [set y3 to 0 if Replace Objects isn't enabled]
  !!VRy20&y3=1:+1; [add one to object counter]
  !!VRy11&y3=1:Sy20 *7; [number to add to index variable]
  !!VRy10&y3=1:S593 +y11; [new index number]
  !!VRvy10&y3=1:C63/21/3/-1/1/1/0; [summoning stones] [table of obscure objects]

  !!UN:P52/?y3; [check if Mirror of the Way Home script is enabled]
  !!VRy3&y21=0:S0; [set y3 to 0 if Replace Objects isn't enabled]
  !!VRy20&y3=1:+1; [add one to object counter]
  !!VRy11&y3=1:Sy20 *7; [number to add to index variable]
  !!VRy10&y3=1:S593 +y11; [new index number]
  !!VRvy10&y3=1:C63/66/1/-1/1/0/0; [mirror portal]

  !!if&y20>0;
    !!FU(WOG_195_CalcReplaceChance):P60/?y30;
    !!FU671:P107/-1/3/y20/y30; [replace 60% of schools of war]
  !!en;
!!en;

!!VRi^wog_tempIsRandomMap^:S(NULL);

** table fields: type/subtype/footprint/terrain/back wall/edge x/edge y
** footprint values:  0 = Y, 1 = RY, 2 = YR, 3 = RYR, 4 = other

!!VRy20:S0; [initialize object counter to 0]
!!UN:P29/?y3; [check if New Treasure Chest script is enabled]
!!VRy3&y21=0:S0; [set y3 to 0 if Replace Objects isn't enabled]
!!VRy20&y3=1:+1; [add one to object counter]
!!VRy11&y3=1:Sy20 *7; [number to add to index variable]
!!VRy10&y3=1:S593 +y11; [new index number]
!!VRvy10&y3=1:C101/1/0/-1/0/0/0; [new treasure chest] [table of new chests]

!!UN:P31/?y3; [check if New Treasure Chest 2 script is enabled]
!!VRy3&y21=0:S0; [set y3 to 0 if Replace Objects isn't enabled]
!!VRy20&y3=1:+1; [add one to object counter]
!!VRy11&y3=1:Sy20 *7; [number to add to index variable]
!!VRy10&y3=1:S593 +y11; [new index number]
!!VRvy10&y3=1:C101/5/0/-1/0/0/0; [2nd new treasure chest (type 5)]

!!if&y20>0;
  !!FU(WOG_195_CalcReplaceChance):P50/?y30;
  !!FU671:P101/0/0/y20/y30; [replace 50% of treasure chests]
!!en;


** JHV mod to load random selections into POx/y/L after wogification
** uses FU5211 in script29 which was reserved by script31 but not used
** re-uses v951-954 used by script00 previously
!!UN:P29/?y3;     [Check for TC1 WoG option]
!!UN:U101/1/?v951; [count number of TC1's]
!!VRv952:S-2; [Initialize v952 to last object for faster UN:U format]
!!DO5211/1/v951/1&y3=1/v951>0:P1; [do a loop for each object]

!!UN:P31/?y3;     [Check for TC 5 WoG option]
!!UN:U101/5/?v951; [count number of TC5's]
!!VRv952:S-2; [Initialize v952 to last object for faster UN:U format]
!!DO5211/1/v951/1&y3=1/v951>0:P5; [do a loop for each object]

!!UN:P107/?y3; check for Fishing Well option
!!UN:U49/-1/?v951; [count number of wells]
!!VRv952:S-2; [Initialize v952 to last object for faster UN:U format]
!!DO5211/1/v951/1&y3=1/v951>0:P-1; [do a loop for each object]


** table fields: type/subtype/footprint/terrain/back wall/edge x/edge y
** footprint values:  0 = Y, 1 = RY, 2 = YR, 3 = RYR, 4 = other

!!VRy20:S0; [initialize object counter to 0]
!!UN:P27/?y3; [check if Spellbook script is enabled]
!!VRy3&y21=0:S0; [set y3 to 0 if Replace Objects isn't enabled]
!!VRy20&y3=1:+1; [add one to object counter]
!!VRy11&y3=1:Sy20 *7; [number to add to index variable]
!!VRy10&y3=1:S593 +y11; [new index number]
!!VRvy10&y3=1:C5/0/0/-1/0/0/0; [spellbook]

!!FU671&y20>0:P93/-1/0/y20/10; [replace 10% of scrolls]


** table fields: type/subtype/footprint/terrain/back wall/edge x/edge y
** footprint values:  0 = Y, 1 = RY, 2 = YR, 3 = RYR, 4 = other

!!VRy20:S0; [initialize object counter to 0]
!!UN:P165/?y3; [check if Replace Dragon Fly option is enabled]
!!VRy20&y3=1:+1; [add one to object counter]
!!VRy11&y3=1:Sy20 *7; [number to add to index variable]
!!VRy10&y3=1:S593 +y11; [new index number]
!!VRvy10&y3=1:C112/0/0/-1/0/1/0; [windmill] [table of dragon fly hive replacements]

!!VRy20&y3=1:+1; [add one to object counter]
!!VRy11&y3=1:Sy20 *7; [number to add to index variable]
!!VRy10&y3=1:S593 +y11; [new index number]
!!VRvy10&y3=1:C113/0/0/-1/0/1/0; [witch hut]

!!VRy20&y3=1:+1; [add one to object counter]
!!VRy11&y3=1:Sy20 *7; [number to add to index variable]
!!VRy10&y3=1:S593 +y11; [new index number]
!!VRvy10&y3=1:C12/0/0/-1/0/0/0; [camp fire]

!!FU671&y20>0:P16/6/0/y20/80; [replace 80% of dragon fly hives]


** table fields: type/subtype/footprint/terrain/back wall/edge x/edge y
** footprint values:  0 = Y, 1 = RY, 2 = YR, 3 = RYR, 4 = other

!!VRy20:S0; [initialize object counter to 0]
!!UN:P196/?y3; [check if Power Stones option is enabled]
!!UN:P3/?y4; [Check if Commanders are enabled: y4=0 if yes]
!!VRy3&y4=1:S0; [Disable option if Commanders not enabled]

!!if&y3=1;
  !!UN:B7/1; [Enable Power Stones]
  !!UN:B8/1; [Enable Power Stones]
  !!UN:B9/1; [Enable Power Stones]
  !!UN:B10/1; [Enable Power Stones]
  !!VRy3&y21=0:S0; [set y3 to 0 if Replace Objects isn't enabled]
  !!VRy20:+1; [add one to object counter]
  !!VRy11:Sy20 *7; [number to add to index variable]
  !!VRy10:S593 +y11; [new index number]
  !!VRvy10:C101/7/0/-1/0/0/0; [opal of magic] [table of power stones]

  !!VRy20:+1; [add one to object counter]
  !!VRy11:Sy20 *7; [number to add to index variable]
  !!VRy10:S593 +y11; [new index number]
  !!VRvy10:C101/8/0/-1/0/0/0; [ruby of offense]

  !!VRy20:+1; [add one to object counter]
  !!VRy11:Sy20 *7; [number to add to index variable]
  !!VRy10:S593 +y11; [new index number]
  !!VRvy10:C101/9/0/-1/0/0/0; [sapphire of defense]

  !!VRy20:+1; [add one to object counter]
  !!VRy11:Sy20 *7; [number to add to index variable]
  !!VRy10:S593 +y11; [new index number]
  !!VRvy10:C101/10/0/-1/0/0/0; [emerald of speed]
!!en;

!!if&y20>0;
  !!FU671:P79/1/0/y20/10; [replace 10% of mercury]
  !!FU671:P79/3/0/y20/10; [replace 10% of sulfur]
  !!FU671:P79/4/0/y20/10; [replace 10% of crystals]
  !!FU671:P79/5/0/y20/10; [replace 10% of gems]
  !!FU671:P93/-1/0/y20/20; [replace 20% of spell scrolls]
!!en;


** table fields: type/subtype/footprint/terrain/back wall/edge x/edge y
** footprint values:  0 = Y, 1 = RY, 2 = YR, 3 = RYR, 4 = other

!!VRy20:S0; [initialize object counter to 0]
!!UN:P60/?y3; [check if Forgotten Shrine script is enabled]
!!VRy3&y21=0:S0; [set y3 to 0 if Replace Objects isn't enabled]
!!VRy20&y3=1:+1; [add one to object counter]
!!VRy11&y3=1:Sy20 *7; [number to add to index variable]
!!VRy10&y3=1:S593 +y11; [new index number]
!!VRvy10&y3=1:C63/22/0/-1/0/0/0; [Forgotten Shrine]

!!if&y20>0;
  !!FU(WOG_195_CalcReplaceChance):P40/?y30;
  !!FU(WOG_195_CalcReplaceChance):P50/?y31;
  !!FU671:P89/-1/0/y20/y30; [replace 40% of level 2 magic shrines]
  !!FU671:P90/-1/0/y20/y30; [replace 40% of level 3 magic shrines]
  !!FU671:P38/-1/0/y20/y31; [replace 50% of idols of fortune]
!!en;


** table fields: type/subtype/footprint/terrain/back wall/edge x/edge y
** footprint values:  0 = Y, 1 = RY, 2 = YR, 3 = RYR, 4 = other

*!VRy20:S0; [initialize object counter to 0]
*!UN:P252/?y3; [check if Most Spell Scrolls are replaced option is enabled]
*!VRy20&y3=1:+1; [add one to object counter]
*!VRy11&y3=1:Sy20 *7; [number to add to index variable]
*!VRy10&y3=1:S593 +y11; [new index number]
*!VRvy10&y3=1:C79/6/0/-1/0/0/0; [gold pile] [table of scroll replacements]

*!VRy20&y3=1:+1; [add one to object counter]
*!VRy11&y3=1:Sy20 *7; [number to add to index variable]
*!VRy10&y3=1:S593 +y11; [new index number]
*!VRvy10&y3=1:C101/0/0/-1/0/0/0; [standard treasure chest]

*!FU671&y20>0:P93/-1/0/y20/70; [replace 70% of scrolls]


------------


** convert some artifacts

!!VRv600:C12/18/24/30/32/33/34/35/36/40; [table of relic numbers]
!!VRv610:C44/59/72/86/87/88/89/90/93/115;
!!VRv620:C123/124/126;

!!UN:P143/?y3; [check if New Artifacts options is enabled]

!!if&y3=1;
  !!UN:A(ART_SLAVAS_RING_OF_POWER)/3/(ART_LEVEL_MAJOR); [Set Slava's Ring as "Major" class artifact]
  !!UN:A(ART_CRIMSON_SHIELD_OF_RETRIBUTION)/3/(ART_LEVEL_MAJOR); [Set Crimson Shield of Retribution as "Major" class artifact]
  !!UN:U(OBJ_ARTIFACT)/(ANY_OBJ)/?v951; [get number of artifacts]
  !!VRy2:S0 R5; [starting number for Commander artifact replacement: y2]
  !!VRy4:S0 R5; [starting number for Relic artifact replacement: y4]
  !!VRy5:S0 R7; [starting number for Major artifact replacement: y5]
  !!VRy6:S0 R9; [starting number for Minor artifact replacement: y6]
  !!VRy7:S0 R3; [starting number for Combo artifact replacement: y7
!!en;

!!VRv952:S-2; [Initialize v952 to last object for faster UN:U format]
!!DO677/1/v951/1&y3=1:Py2/y4/y5/y6/y7; [loop through all artifacts on map]


** convert monster stacks

!!UN:P139/?y3; [check if Replacing Creatures option is enabled]
!!UN:P242/?y4; [Check if some Level 3's replaced with Ghosts enabled: y4=1 if enabled]
!!UN|y3=1/y4=1:U54/-1/?v951; [get number of monsters]
!!VRv952:S-2; [Initialize v952 to last object for faster UN:U format]
!!DO680/1/v951/1|y3=1/y4=1:Py3/y4; [loop through all monsters]
!!FU(H3Quests_RefreshData):P(FALSE);

** add SoD terrains

!!UN:P142/?y3; [check if Special Terrain option is enabled]
!!VRy1&y3=1:Sv957; [get map size]
!!VRy1&y3=1::9; [get size-dependent number from 4-16]
!!DO685/1/y1/1&y3=1:P; [try to add 4-16 bits of SoD terrain]

** redraw screen

!!SN:D;

** end of function


!?FU(WOG_195_CalcReplaceChance);
!#VA(chance:x) (newChance:x);

!!VR(newChance):S(chance) *i^wog_195_objReplaceMult^ :100;


!?FU(OnEveryDay)&i^timerDay^=1/i^timerOnce^/v950=1;
** setup of and display dialogue box for closing WoGification message

!!VRz1:Sz100003;
!!VRz2:Sz100004;
!!VRz4:S^../data/zvs/lib1.res/wogoption.bmp^;
!!VRz5:Sz100005;
!!IF:D1/1/^^/2/4/^^/^^/^^/5/^^/^^/^^/^^/^^/^^/^^;
!!IF:F1/^^/^^/^^/^^/(FALSE); [remove cancel button]
!!UN:P248/?y-1; [check if "Display WoGification Messages" is enabled: y-1]
!!IF&y-1=1:E1/1; [display WoGification dialogue box if enabled]
!!UN:R7/0/0; [Show mouse cursor and enable changing]
!!UN:R5/0/0; [Restore default cursor]

** End of Timer 79

** high level function to handle building replacement objects
** x1/x2 are type/subtype of object to replace
** x3 is footprint of object to replace
**    0 = Y, 1 = RY, 2 = YR, 3 = RYR, 4 = other
** x4 is the number of possible replacements in a table at v600
** x5 is % chance to actually change any given object

!?FU671;

!!UN:Ux1/x2/?v951; [count number of replaceable objects]
!!FU&v951<2:E; exit if < 2 objects [added by JHV 7/23/2008]

!!VRv951:-1; [added by JHV 7/23/2008]
!!VRx4:-1; [deal with replacements numbered 0 to x4]
!!VRv952:S-2; [Initialize v952 to last object for faster UN:U format]
!!DO672/1/v951/1:Px1/x2/x3/x4/x5; [do a loop for each object]

** end of function


** function to handle possibly replacing one object

!?FU672;

!!UN:Ux1/x2/-2/952; [get x/y/l of yellow square of object into v952-v954]
!!VRy3:S1 R3; [number of times to roll percentile dice (for extra randomness): y3]
!!VRy2:S0 R99; [roll percentile dice: y2]
!!VRy2&y3=4:S0 R99; [reroll percentile dice: y2]

!!if&y2<x5;
  !!if&x1=(OBJ_OBELISK);
    !!MTv952/v953/v954:N?y4; [If an Obelisk is replaced, get Obelisk number: y4]
    !!UN:L-2/y4/1; [If an Obelisk is replaced, set it to "visited" for all players]
  !!en;

  !!FU673:Px1/x2/x3/x4/x5; [go replace it x5 % of the time]
!!en;

** end of function


** function to replace an object if possible

!?FU673;

!!VRv955:S0 Rx4; [pick a random replacement]
!!FU674:Px1/x2/x3/x4/x5; [check for usable in v965]
!!FU675&v965=1:Px1/x2/x3/x4/x5; [actually replace object]

** end of function


** function to check for replace-ability

!?FU674;
!#VA(objType:x);

!!VRy1:Sv955 *7 +602; [now vy1 is footprint]
!!VRy2:Sy1 +1; [now vy2 is terrain required]
!!VRy3:Sy1 +2; [now vy3 is back wall flag]
!!VRy4:S1; [assume can replace]

!!TR952:T?y5/d/d/d/d/d/d/d; [get terrain]
!!VRy4&vy2<>-1/vy2<>y5:S0; [wrong terrain]
!!VRy4&(objType)=(OBJ_DRAGON_UTOPIA)/y5=8:S0; [Skip Utopias on water]

!!FU686:P0/-1; [test square above yellow for redness]
!!VRy6:Sv966;
!!FU686:P-1/-1; [test square above and left of yellow for redness]
!!VRy5:Sv966;
!!FU686:P1/-1; [test square above and right of yellow for redness]
!!VRy7:Sv966;
!!VRy4&vy3=1/vy1=0/y6<>0:S0; [back wall missing for Y object]
!!VRy4&vy3=1/vy1=1/y5<>0:S0; [back wall missing for RY object]
!!VRy4&vy3=1/vy1=1/y6<>0:S0;
!!VRy4&vy3=1/vy1=2/y6<>0:S0; [back wall missing for YR object]
!!VRy4&vy3=1/vy1=2/y7<>0:S0;
!!VRy4&vy3=1/vy1=3/y5<>0:S0; [back wall missing for RYR object]
!!VRy4&vy3=1/vy1=3/y6<>0:S0;
!!VRy4&vy3=1/vy1=3/y7<>0:S0;
!!FU686:P-2/0; [test square two to the left of yellow square for redness]
!!VRy4&vy3=2/v966<>0:S0; [far left red square missing for Junk Merchant]

!!VRv965:Sy4; [set return value in v965 equal to y4]

** end of function


** function to replace object

!?FU675;

!!VRv955:*7 +600; [vv955 is new type]
!!VRv956:Sv955 +1; [vv956 is new subtype]

!!VRv959:Sv955 +2; [vv959 is new footprint]
!!VRv960:Sv955 +5; [vv960 is x offs to place]
!!VRv961:Sv955 +6; [vv961 is y offs to place]

!!VRy3:Sv952 +vv960; [y3 = x to place]
!!VRy4:Sv953 +vv961; [y4 = y to place]

!!UN:Ov952/v953/v954/0/0; [delete old object, no redraw]
!!UN:Iy3/y4/v954/vv955/vv956/vv955/vv956/-1/0; [place new object, no redraw]

 ** Setup for some Dragon Fly Hive and Scroll replacement objects **

!!VRy5:S0 R5; [random resource]
!!VRy6:S3 R3; [random amount (3-6)]
!!VRy8:S2 R3; [random amount (2-5)]
!!VRy9:S5 R5; [random amount (5-10)]
!!VRy7:Sy3 -1; [subtract 1 from x value to get trigger square]
!!MLy7/y4/v954&vv955=112:By5/y6; [set up windmill]
!!FRy3/y4/v954&vv955=12:By5/6; [set up camp fire]
!!CHy3/y4/v954&vv955=101/vv956=0:S0 By8; [set up treasure chest]
!!ARy3/y4/v954&vv955=79/vv956=6:Vy9; [set up gold pile]


!!VRy5:S0 R26; [random skill]
!!VRy5&y5>=12:+1; [Add one if it's Necromancy or higher]
!!WHy7/y4/v954&vv955=113:Sy5; [set up witch hut]

 ** End of setup **

!!FU676&vv959=4:P-4/-1 P-3/-1 P-2/-2 P0/-2 P1/-2; [fill missing red squares for utopia/palace swap]
!!FU676&vv959=5:P-4/-1 P-2/0 P-2/-2 P0/-2 P1/-2; [fill missing red squares for utopia/battle academy swap]

** end of function


** function to place a stump or log if square isn't red;
** v952-v954 = x/y/l; x1/x2 are x/y offset

!?FU676;

!!VRv952:+x1;
!!VRv953:+x2;
!!TR952:P?y1; [get y1=0 if red square]
!!VRy2:S0 R1;
!!VRy2&y2=0:S130; [log]
!!VRy2&y2=1:S153; [stump]
!!UN&y1<>0:Iv952/v953/v954/y2/0/y2/0/-1/0; [place object, no redraw]
!!VRv952:-x1;
!!VRv953:-x2;

** end of function


** function to possibly replace an artifact

!?FU677;

!!UN:U5/-1/-2/952; [get x/y/l of yellow square of artifact into v952-v954]
!!OB952:U?v955; [get subtype = artifact number]

!!VRy20:S0; [Initialize y20 to 0]
!!UN&v955<=128:Av955/?y20; [y20=1 if artifact to be replaced is disabled - prevents quest hut artifacts being replaced]

 [Check for a customized (or ERM-placed) artifact]
!!UN:P904/1; [Disable error messages]
!!UN:P905/0; [Reset P905 ERM error status to 0]
!!AR952:M1/?z1; [Check for a custom text string]
!!UN:P905/?y36 P905/(FALSE); [Check for error: y36=1 if error, meaning non-customized, or y36=0 if no error, meaning customized]
!!UN:P904/0; [Enable error messages]

 [Skip this artifact if it's Armageddon's Blade, a new WoG Artifact, a customized artifact or a quest hut artifact]
!!FU|v955<7/v955=128/v955>=141/y20=1/y36=0:E;

!!UN:Av955/3/?y4; [get artifact class into y4]
!!VRx2&y4=16/v955<128:+1; [add 1 to counter: replace 1 in 4 relics with WoG Relics]
!!VRx3&y4=8:+1; [add 1 to counter: replace 1 in 8 major artifacts with WoG Majors]
!!VRx4&y4=4:+1; [add 1 to counter: replace 1 in 10 minor artifacts with Warlord's Banners]
!!VRx5&v955>=129/v955<=140:+1; [add 1 to counter: replace 1 in 4 combos with WoG Combos]
!!FU&y4=16/x2<4/v955<=128:E; [Skip this artifact if it's a relic but not replaced]
!!FU&v955>=129/v955<=140/x5<4:E; [Skip this artifact if it's a Combo but not replaced]

!!VRy50:S0; [Initialize y50 to 0]

!!UN:P237/?y29; [Check if Barbarian Lord's Axe of Ferocity is disabled in WoG Options: y29=0 if enabled]

!!if&v955>=129/v955<=140;
  !!if&x5>=5/y29=0/x9<2;
    !!UN:Ov952/v953/v954/0/0; [delete old Combo artifact, no redraw]
    !!UN:Iv952/v953/v954/5/158/5/158/-1/0; [place new wog Combo, no redraw]
    !!VRx9:+1; [increment x9 -- place a maximum of *two* Barbarian Lord's Axes]
    !!VRx5:S0; [reset Combo replacement counter after replacement]
  !!en;

  !!FU:E; [Exit if a Combo]
!!en;

!!if&y4=16; handle only relict (type=16) artifacts
  !!FU&x2<5:E; current art should not be replaced

  !!UN:P176/?y22; [Check if Magic Wand is disabled in WoG Options: y22=0 if enabled]
  !!UN:P226/?y23; [Check if Gold Tower Arrow is disabled in WoG Options: y23=0 if enabled]
  !!UN:P227/?y24; [Check if Monster's Power is disabled in WoG Options: y24=0 if enabled]
  !!UN:P241/?y32; [Check if Dragonheart Ring is disabled in WoG Options: y32=0 if enabled]
  !!UN:P243/?y33; [Check if Gate Key is disabled in WoG Options: y33=0 if enabled]

  !!VRy25:S5; [Number of New Relic Artifacts: y25]
  !!VRy25&y22=1:-1; [Subtract 1 if Magic Wand disabled: y25]
  !!VRy25&y23=1:-1; [Subtract 1 if Gold Tower Arrow disabled: y25]
  !!VRy25&y24=1:-1; [Subtract 1 if Monster's Power disabled: y25]
  !!VRy25&y32=1:-1; [Subtract 1 if Dragonheart disabled: y25]
  !!VRy25&y33=1:-1; [Subtract 1 if Gate Key disabled: y25]
  !!FU&y25<=0:E; [Exit if it's a relic and all are disabled]

  !!VRy25:-1;
  !!VRy3:S141 Ry25; [New Artifact #: y3 (141-145), 144 will be changed to 159, 145 to 160]
  !!VRy3&y22=1/y3>=141:+1; [Add 1 to new artifact # if Magic Wand disbled: y3]
  !!VRy3&y23=1/y3>=142:+1; [Add 1 to new artifact # if Gold Tower Arrow disabled: y3]
  !!VRy3&y24=1/y3>=143:+1; [Add 1 to new artifact # if Monster's Power disabled: y3]
  !!VRy3&y32=1/y3>=144:+1; [Add 1 to new artifact # if Dragonheart Ring disabled: y3]
  !!VRy3&y33=1/y3>=145:+1; [Add 1 to new artifact # if Gate Key disabled: y3]
  !!VRy3&y3=144/y32=0:S159; [Set correct number for Dragonheart: y3]
  !!VRy3&y3=145/y33=0:S160; [Set correct number for Gate Key: y3]

  !!UN:Ov952/v953/v954/0/0; [delete old relic artifact, no redraw]
  !!UN:Iv952/v953/v954/5/y3/5/y3/-1/0; [place new wog relic, no redraw]
  !!VRx2:S0; [reset relic replacement counter after replacement]
!!en;

!!UN:P3/?y8; [check if Commanders are enabled: y8=0 if enabled]
!!UN:P219/?y27; [check if Enhanced Commander Artifacts are enabled: y27=1 if enabled]
!!VRy8&y27=1:S0; [Set y8 0 (enabled) if Enhanced Commander Artifacts enabled]
!!UN:P238/?y30; [check if Commander artifacts are enabled: y30=0 if enabled]
!!VRy8&y30=1:S1; [set y8 to 1 (disabled) if Commander artifacts are disabled: y8]

!!UN:P236/?y28; [Check if Crimson Shield of Retribution is disabled in WoG Options: y28=0 if enabled]
!!UN:P177/?y21; [Check if Slava's Ring is disabled in WoG Options: y21=0 if enabled]

!!if&x3>=8;
  !!VRy34:S1; [New Major Artifact random range (initialize to 1): y34]
  !!VRy34&y28=1:-1; [Subtract 1 if Crimson Shield is disabled: y34]
!!en;

!!VRy34|y21=1/y8=1:-1; [Subtract 1 if Slava's Ring or Commanders disabled: y34]

!!if&x3>=8;
  !!VRy35:S0; [Initialize y35 to 0]

  !!if&y4=8;
    !!VRy35&y34>=0:S1 Ry34; [New Artifact y35 = 1..2. 1 will be changed to 157, 2 to 155]
    !!VRy35&y34>=0/y28=1/y35>=1:+1; [Add 1 to new artifact # if Crimson Shield disabled: y3]
    !!VRy35&y34>=0/y35=1:S157; [Set correct number for Crimson Shield: y35]
    !!VRy35&y34>=0/y35=2:S155; [Set correct number for Slava's Ring: y35]

    !!if&y35=157;
      !!UN&x7<2:Ov952/v953/v954/0/0; [delete old major artifact, no redraw]
      !!UN&x7<2:Iv952/v953/v954/5/157/5/157/-1/0; [place Shield of Retribution, no redraw]
      !!VRy50&x7<2:S1; [set y50 to 1 to exit after replacement: y50]
      !!VRx7:+1; [increment x7 -- place a maximum of *two* Crimson Shields]
      !!VRx3&x7<=2:S0; [reset major artifact replacement counter after replacement]
    !!el&y35=155;
      !!UN&x8<2:Ov952/v953/v954/0/0; [delete old major artifact, no redraw]
      !!UN&x8<2:Iv952/v953/v954/5/155/5/155/-1/0; [place Slava's Ring, no redraw]
      !!VRy50&x8<2:S1; [set y50 to 1 to exit after replacement: y50]
      !!VRx8:+1; [increment x8 -- place a maximum of *two* Slava's Rings]
      !!VRx3&x8<=2:S0; [reset major artifact replacement counter after replacement]
    !!en;
  !!en;
!!en;

!!UN&y4=4:P234/?y31; [Check if Warlord's Banners are disabled in WoG Options: y31=0 if enabled]
!!UN&y4=4/x4>=10/y31=0:Ov952/v953/v954/0/0; [delete old minor artifact, no redraw]
!!UN&y4=4/x4>=10/y31=0:Iv952/v953/v954/5/156/5/156/-1/0; [place warlord's banner, no redraw]
!!PO952&y4=4/x4>=10/y31=0:O-2; [Set value of -2 for PO:O for Warlord's Banner square]
!!VRy50&y4=4/x4>=10/y31=0:S1; [set y50 to 1 to exit after replacement: y50]
!!VRx4&y4=4/x4>=10/y31=0:S0; [reset minor artifact replacement counter after replacement]

!!FU|y4=16/y8=1/y50=1:E; [Exit if artifact was a relic, replaced or Commanders are disabled]

!!VRx1&y4>=2/y4<=8:+1; [add 1 to counter: replace 1 in 5 treasure/minor/major artifacts]
!!VRy6&x1>=5/v955>6:S146 R8; [Commander artifact #, excluding Slava's Ring]
!!UN&x1>=5/v955>6:Ov952/v953/v954/0/0; [delete old artifact, no redraw]
!!UN&x1>=5/v955>6:Iv952/v953/v954/5/y6/5/y6/-1/0; [place new artifact, no redraw]
!!UN&x1>=5/v955>6:Ay6/3/4; [set Commander artifact to "minor" class artifact]
!!VRx1&x1>=5/v955>6:S0; [reset counter after replacement]

** end of function

** function to check if an artifact is a relic

!?FU678;

!!VRy1:S600;
!!VRy1:+x16; [get number of variable with relic number]
!!VRv956&vy1=v955:S1; [it's a relic]

** end of function


** function to possibly convert a monster stack

!?FU680;
 [x1=1 if replacing some monster with WoG monsters is enabled]
 [x2=1 if replacing some L3 monsters with ghosts is enabled]
!!UN:U54/-1/-2/952; [get x/y/l of yellow square of monster into v952-v954]
!!VR(random:y):S0 R99; [roll percentile dice]
!!FU&(random)>=50:E; [Exit if roll is 50 or higher: greatest chance is 50% - to save time only go on half the time]

!!FU(WOG_CheckIfMonIsEligibleToBeRepalced):P952/?(result:y);
!!FU&(result)<>(TRUE):E;

!!FU681:P(random)/x1/x2; [Possible conversion (greatest chance is 50%)]

** end of function


** function to continue possibly converting a monster stack

!?FU681;
 [x1=percentile roll]
 [x2=1 if replacing some monster with WoG monsters is enabled]
 [x3=1 if replacing some L3 monsters with ghosts is enabled]
!!OB952:U?v955; [get subtype = monster type]
!!FU&v955>144:E; [don't convert WoG monsters]
!!MA:Lv955/?v956; [Get Monster Level: v956]
!!VRv956:+1; [Add 1 to Monster Level to get 1..7: v956]
!!VRx1&v957<80::2; [double chance of new monsters on small maps]
!!FU682&v956=3/x3=1/x1>=12/x1<=16:P159/1; [5% of level 3's become Ghosts]
!!FU&x2<>1:E; [Exit if other monster replacement aren't enabled]
!!FU682&v956=3/x1<=4:P173/0; [5% of level 3's become Santa Gremlins]
!!FU682&v956=3/x1>=5/x1<=11:P192/1; [7% of level 3's become half as many Sylvan Centaurs]
!!FU682&v956=4/x1<=2:P164/0; [3% of level 4's become Fire Messengers]
!!FU682&v956=4/x1>=3/x1<=5:P165/0; [3% of level 4's become Earth Messengers]
!!FU682&v956=4/x1>=6/x1<=8:P166/0; [3% of level 4's become Air Messengers]
!!FU682&v956=4/x1>=9/x1<=11:P167/0; [3% of level 4's become Water Messengers]
!!FU682&v956=5/x1<=2:P169/0; [3% of level 5's become War Zealots]
!!FU682&v956=5/x1>=3/x1<=5:P170/0; [3% of level 5's become Arctic Sharpshooters]
!!FU682&v956=5/x1>=6/x1<=8:P171/0; [3% of level 5's become Lava Sharpshooters]
!!FU682&v956=5/x1>=9/x1<=15:P194/0; [7% of level 5's become Werewolves]
!!FU682&v956=6/x1<=7:P172/0; [8% of level 6's become Nightmares]
!!FU682&v956=6/x1>=8/x1<=15:P168/1; [8% of level 6's become half as many Gorynyches]
!!FU682&v956=6/x1>=16/x1<=23:P195/0; [8% of level 6's become Hell Steeds]
!!FU682&v956=6/x1>=24/x1<31:P193/0; [8% of level 6's become Sorceresses]
!!FU682&v955=13:P150/1; [50% of archangels become half as many Supreme Archangels]
!!FU682&v955=27:P151/1; [50% of gold dragons become half as many Diamond Dragons]
!!FU682&v955=41:P152/1; [50% of titans become half as many Lords Of Thunder]
!!FU682&v955=55:P153/1; [50% of archdevils become half as many Antichrists]
!!VRy1:S0 R2; [33% chance that Ghost Dragons will become one quarter as many Dracoliches]
!!FU682&y1<2/v955=69:P154/1; [50% of ghost dragons become half as many Blood Dragons]
!!FU682&y1=2/v955=69:P196/2; [33% chance that 25% of ghost dragons become one quarter as many Dracoliches]
!!FU682&v955=83:P155/1; [50% of black dragons become half as many Darkness Dragons]
!!FU682&v955=97:P156/1; [50% of ancient behemoths become half as many Ghost Behemoths]
!!FU682&v955=111:P157/1; [50% of chaos hydras become half as many Hell Hydras]
!!FU682&v955=131:P158/1; [50% of phoenixes become half as many Sacred Phoenixes]
!!FU682&v955=134:P133/0; [50% of faerie dragons become Crystal Dragons]
!!FU682&v955=135:P132/1; [50% of rust dragons become half as many Azure Dragons]

** end of function


** function to convert a monster stack, x1 = new subtype, x2 = 1 if half as many

!?FU682;

!!MO952:G?y1; [get old number of monsters]
!!VRy1&x2=1::2; [half as many if x2=1]
!!VRy1&x2=2::4; [one quarter as many if x2=2]
!!VRy1&y1<1:S1; [make sure there's at least 1 left]
!!UN:Ov952/v953/v954/0/0; [delete old monster stack, no redraw]
!!UN:Iv952/v953/v954/54/x1/54/x1/-1/0; [place new stack, no redraw]
!!MO952:Gy1; [set number of monsters and set them to grow]
!!MO952:O0 U0; [set monsters to grow and allow them to flee]
!!MO952&x1=159:R10/1; [Set Ghost stacks to "savage" (never join)]


** end of function


** function to try to add a bit of SoD terrain

!?FU685;

!!VRy1:Sv957; [map size]
!!VRy1:-4; [max x/y location]
!!VRv952:S0 Ry1; [random x]
!!VRv953:S0 Ry1; [random y]
!!VRv954:S0; [surface only, to avoid having to check for cave walls]
!!TR952:P?y3; [get y3=0 if red square]
!!TR952:E?y4; [get y4=0 if yellow square]
!!TR952:T?y6/d/d/d/d/d/d/d; [get terrain type]
!!VRy5:S222 R8; [random terrain number]
!!VRy5&y5>=225:+1; [skip Favorable Winds]
!!VRy5&y5=223:S21; [use old Cursed Ground]
!!VRy5&y5=230:S46; [use old Magic Plains]
!!VRy5&y6=8:S225; [use Favorable Winds if on water]
!!VRy6:S1; [assume we need 4 copies of terrain]
!!VRy6&y5=21:S0; [not so for Cursed Ground]
!!VRy6&y5=46:S0; [or Magic Plains]
!!UN&y3<>0/y4<>0:Iv952/v953/v954/y5/0/y5/0/-1/0; [place SoD terrain on empty spot, no redraw]
!!VRv952&y6=1:+1;
!!VRv953&y6=1:-1;
!!UN&y3<>0/y4<>0/y6=1:Iv952/v953/v954/y5/0/y5/0/-1/0; [place additional terrains, since they're tall and skinny]
!!VRv952&y6=1:+1;
!!VRv953&y6=1:+1;
!!UN&y3<>0/y4<>0/y6=1:Iv952/v953/v954/y5/0/y5/0/-1/0;
!!VRv952&y6=1:+1;
!!VRv953&y6=1:-1;
!!UN&y3<>0/y4<>0/y6=1:Iv952/v953/v954/y5/0/y5/0/-1/0;

 [If Passable Terrain script active, make squares passable again]
!!UN:P63/?y7; [Check if Passable Terrain script is enabled: y7]
!!FU&y7<>1:E; [Exit if Passable Terrain isn't enabled]

!!UN:X?y8/?y9;          [Map size: y8]
!!VRy10&y6=1:Sv953 -4;  [Starting y-coordinate for loop: y10]
!!VRy11&y6=1:Sv953 +1;  [Ending y-coordinate for loop: y11]
!!VRy10&y6=0:Sv953 -3;  [Starting y-coordinate for loop (Magic Plains/Cursed Land): y10]
!!VRy11&y6=0:Sv953 +0;  [Ending y-coordinate for loop (Magic Plains/Cursed Land): y11]
!!VRy10&y10<0:S0;       [No y-coordinate below 0: y10]
!!VRy11&y11>=y8:Sy8 -1; [No y-coordinate above map size: y11]
!!DO8/y10/y11/1&y3<>0/y4<>0:Py6/v952/0; [Make trees, mountains etc. passable again]

** end of function


** Functions if Passable Terrain active and special SoD patches placed
** to make the appropriate squares passable again

!?FU8;
 [x1=Magic Plains/Cursed Land if 0, Other Terrains if 1]
 [x2=ending x-coordinate, x16=y-coordinate, x3=level]

!!VRy1&x1=0:Sx2 -5; [Starting x-coordinate for Magic Plains/Cursed Land]
!!VRy1&x1=1:Sx2 -4; [Starting x-coordinate for other terrains]
!!VRy1&y1<0:S0;     [No x-coordinate below 0]
!!DO9/y1/x2/1:Px16/x3; [Check each square and make passable if trees, mountains etc.]

!?FU9; [Passable Terrain compatibility with added SoD terrains]
 [x16=x-coordinate, x1=y-coordinate, x2=level]
!!OBx16/x1/x2:T?y1; [Type of object: y1]
!!TRx16/x1/0|y1=114/y1=115/y1=116/y1=119/y1=120/y1=122/y1=129/y1=130/y1=131/y1=132/y1=135/y1=137/y1=138/y1=150/y1=153/y1=155:P1; [Make tree and bush and flower squares passable]
!!TRx16/x1/0|y1=156/y1=159/y1=160/y1=165/y1=166/y1=167/y1=160/y1=165/y1=166/y1=167/y1=170/y1=173/y1=181/y1=182/y1=183/y1=186:P1; [Make tree and bush and flower squares passable]
!!TRx16/x1/0|y1=188/y1=189/y1=194/y1=197/y1=199/y1=200/y1=211:P1; [Make tree and bush and flower squares passable]
!!TRx16/x1/0|y1=133/y1=134/y1=136/y1=147/y1=148/y1=151/y1=152/y1=157/y1=158/y1=169/y1=174/y1=184/y1=185/y1=187/y1=191:P1; [Make rock and mountain/hill squares passable]

** end of functions


** function to check square v952-v954 for being red or off the map, but not being water
** x1/x2 = x/y offset, v966 returns 0 if red

!?FU686;

!!VRv952:+x1;
!!VRv953:+x2;
!!VRv966:S0; [assume red]
!!TR952&v952>=0/v953>=0/v952<v957/v953<v957:P?v966; [get 0 if red, 1 if not]
!!TR952&v952>=0/v953>=0/v952<v957/v953<v957:T?y1/d/d/d/d/d/d/d; [get terrain]
!!VRv966&y1=8:S1; [treat water as not red]
!!VRv952:-x1;
!!VRv953:-x2;

** end of function

!?FU5209;

!!VRy1:S1; [assume squares are clear to begin with]
!!FU686:P0/1; [check for red square directly below scroll]
!!VRy1&v966=0:S0; [set y1 to 0 if scroll with red square directly below]
!!FU686:P-1/1; [check for red square below and left of scroll]
!!VRy1&v966=1:S1; [set y1 to 1 if square left and below is open]
!!FU686:P1/1; [check for red square below and right of scroll]
!!VRy1&v966=1:S1; [set y1 to 1 if square right and below is open]
!!FU686:P-1/0; [check for red square left of scroll]
!!VRy1&v966=1:S1; [set y1 to 1 if square left is open]
!!FU686:P1/0; [check for red square right of scroll]
!!VRy1&v966=1:S1; [set y1 to 1 if square right is open]

!!VRv966&y1=1:S1; [Set v966 to 1 if scroll can be replaced]
!!VRv966&y1=0:S0; [Set v966 to 0 if scroll can't be replaced]

** end of function

 [Set up Warlord's Banner artifacts on map]
!?FU(WOG_IFY_CreatureBanks_AddWarlordBanners);

!#VA(creatureBanks[5]:y);

!!VR(creatureBanks[0]):C(OBJ_CREATURE_BANK)/(OBJ_DERELICT_SHIP)/(OBJ_DRAGON_UTOPIA)/(OBJ_CRYPT)/(OBJ_SHIPWRECK);

!!re i/0/(creatureBanks[SIZE])/1/-1;
  !!VRv2:S-1;                                     [Initialize v1 to first object for faster UN:U format]
  !!UN:U(creatureBanks[i])/(ANY_OBJ)/?(objNum:y); [Number of Creature Banks on map: y2]

  !!re j/0/(objNum)/1/-1;
    !!UN:U(creatureBanks[i])/-1/-1/2;             [Store Creature Bank Coordinates in v1/v2/v3]
    !!VRr:R0/0/1;
    !!CB2&r:A3/(ART_WARLORDS_BANNER);             [Add a Banner to 50% of Creature Banks]
    !!if&(creatureBanks[i])=(OBJ_DRAGON_UTOPIA);
      !!CB2:A3/(ART_WARLORDS_BANNER);             [Add an extra Banner to all Dragon Utopias]
    !!en;
  !!en;
!!en;

** end of function

// Level 1 & 2 Spells Scrools are replaced by Archer30
; This script must be executed later than all the classic WoG replacements. Otherwise you won't have spells scrolls replaced by other objects
!?FU(OnEveryDay)&i^timerDay^=1/i^timerOnce^;
!!UN:P252/?(wogOption:y);
!!FU&(wogOption)<>(TRUE):E;

!!VR(x:y):S-1;                          [setting x-coordinate to -1 will force to start search from scratch]

!!re i;                                 [endless loop]
  !!UN:U(OBJ_SPELL_SCROLL)/(ANY_OBJ)/-1/(x)/(y:y)/(z:y); [find next spell scroll, (x) = -1 on failure]
  !!br&(x)<0;                           [exit loop if nothing found]

  !!OB(x)/(y)/(z):U?(objsubtype:y);
  !!FU(WOG_252_ReplaceSpellScroll):P(x)/(y)/(z)/(objsubtype);
!!en;

!!SN:D;

!?FU(WOG_252_ReplaceSpellScroll);
!#VA(x:x) (y:x) (z:x) (spell:x);

; Skip if the spell not supported by SS command
!!FU|(spell)<(SPELL_FIRST)/(spell)>(SPELL_LAST_WOG):E;

; Check spell level and see if it is a low level spell
!!SS(spell):L?(level:y);

; Replace with standard treasure chests or gold piles randomly
!!if&(level)<=2;
  !!VR(type:y):R0/0/1;
  ; Remove the spell scroll
  !!UN:O(x)/(y)/(z)/1/0;

  !!if&(type)=0;
    !!FU(WOG_252_GenerateRandomStandardChest):P(x)/(y)/(z);
  !!el;
    !!FU(WOG_252_GenerateRandomGoldPile):P(x)/(y)/(z);
  !!en;
!!en;

!?FU(WOG_252_GenerateRandomStandardChest);
!#VA(x:x) (y:x) (z:x);
!#VA(hasArtifact:y);                    [Bool. 0 for gold or exp, 1 for artifact inside]
!#VA(subtype:y);                        [If the chest has an artifact, subtype is the artifact ID. Otherwise it is the level of the chest (0~15)]

; Generate default treasure chest at the given location
!!UN:I(x)/(y)/(z)/(OBJ_TREASURE_CHEST)/0/(OBJ_TREASURE_CHEST)/0/-1/0;

; Change its content according to chance
!!VR(hasArtifact):S(FALSE);
!!VR(random:y):R0/0/99;

!!if&(random)<=31;
  !!VR(subtype):S2;
!!el&(random)>31/(random)<=63;
  !!VR(subtype):S3;
!!el&(random)>63/(random)<=94;
  !!VR(subtype):S4;
!!el;
  !!VR(hasArtifact):S(TRUE);
  !!UN:J6/(ART_LEVEL_TREASURE)/?(subtype);
!!en;

!!if&(hasArtifact)<>(TRUE);
  !!CH(x)/(y)/(z):B(subtype);
!!el;
  !!CH(x)/(y)/(z):S1;
  !!CH(x)/(y)/(z):A(subtype);
!!en;

!?FU(WOG_252_GenerateRandomGoldPile);
!#VA(x:x) (y:x) (z:x);

; Generate default gold pile at the given location
!!UN:I(x)/(y)/(z)/(OBJ_RESOURCE)/(RES_GOLD)/(OBJ_RESOURCE)/(RES_GOLD)/-1/0;

; Change its content according to chance
!!VR(random:y):R0/0/5;
!!AR(x)/(y)/(z):Vd(random);             [gold amount = 100 * AR:V value for ]

// Allow to pick up Lost Bottles after defeating the guards
; This script allow to pick up Lost Bottles and remove it from the map. These bottles are known to block H3 pathfinding and becomes a problem for custom maps.
; AI players will never pick up Lost Bottles
!$OB(OBJ_CREATURE_BANK)/19&(ERM_FLAG_IS_HUMAN);
; Exit if the Utopia has not been cleared
!!CB998:T?(isCleared:y);
!!FU&(isCleared)<>(TRUE):E;

!!IF:Q1/^%T(wog.138.lostBottle0)^;

!!if&1;
  !!VR(random:y):R0/0/255;
  !!FU(GetTextFileString):P^randtvrn^/(random)/?(randInfo:z);
  !!SN:T^wog.138.lostBottle1^/?(msg:z)/^info^/(randInfo);
  !!IF:M^%(msg)^;

  !!VR(random:y):R0/1/6;
  !!SN:P^pickup0%(random)^;
  !!UN:Ov998/v999/v1000/1;
!!en;
