ZVSE2

** Updated: September 16, 2004
** Updated: June 2022 by Archer30
** Rewritten: October 2023 by daemon_n - almost week spent. Week of ERM monster :thinking:


** Version 2.0 19 October 2023;


** Week of Monsters ERM Scriptcreated by Timothy Pulver
** with minor modifications by Anders Jonnson
** and suggestions by Donald X. Vaccarino and the Qurqirish Dragon
** Requires ERA version 3.9 or later using ERM 2.0 version 1.0 or later.

** This script replaces the standard "Week of the" results that appear each
** day 1, as well as eliminating the monthly "Month of the" results that
** "double population" and place new monsters on the map. Plague is also
** eliminated.

** Instead, EVERY week except week 1 is a week of a monster. This gives
** all monsters of that type a 33% bonus (rounding down but with a minimum
** bonus of +1) to Attack, Defense, Health, Speed, Damage, and a 50%
** bonus to Growth for the entire week. If the monster type is neutral, rather
** than one that may be recruited from a town, there is no Growth bonus.


** Version 1.1 adds a check for the Diety of Fire - if it's present, it will be
** "Week of the Imp" (with +15 Imp *and* +15 Familiar Growth).

** Version 1.2 adds special weeks for resources where mines of that type
** produce double the number (e.g., 2 crystals for Week of the Sparkling
** Crystals, 4 Wood for  Week of the Woodcutter).

** Version 1.3 switches from totally random monster weeks to a monster that
** is present in a hero's army, cycling through all the players in a random
** fixed order. Once per cycle, a completely random monster week will still
** occur, as well as a resource week. This version also adds some wandering
** monsters if it's a monster week or some resource piles if it's a resource
** week. In addition, any Refugee Camps on the map will offer the monster of
** the week unless it's a war machine or resource week in which case it's
** random as normal. Also, week 1 will always be a level 1 monster. The last
** feature this version adds is a reminder of the week's monster and bonuses
** by right-clicking on the End-Turn button.

** Version 1.4 fixes a bug with Imps not growing at all if a Diety of Fire
** is built.

** Version 1.5 is updated to work with new creatures in 3.58. It also reworks
** a function so that it's not recursive and prevents there being more than 48
** Wandering Monsters on a map at any one time due to the slow-downs that
** too many WMs cause.

** Version 1.6 makes the Refugee Camp synchonization a separate option so it
** can be disabled if desired. It also fixes a few related bugs.

** Version 1.7 gives Warlord's Banners to 33% of wandering/stationary monsters.

** Version 1.8 reduces the chance of generating Warlord's Banners to 10%. Added
** support for new monsters declared in FU(GetMaxMonsterId).

** Version 2.0 rewritten whole script:
  now works directly at new week start;
  really increase income of the all mines
  places monster into refugee when game iterates them at week start;
  full MP support
  freed all flags, non-named functions and non-temp variables 

--------------------------------------------------------------------------------------
!#DC(WOG_20_FIRST_WEEK)   = 0;
!#DC(WOG_20_MONSTER_WEEK) = 1;
!#DC(WOG_20_RESOURCE_WEEK) = 2;
!#DC(WOG_20_PLAYER_WEEK) = 3;
!#DC(WOG_20_INFERNO_WEEK) = 4;

*#DC(WEEK_TYPE_NONE) = 0;
!#DC(WEEK_TYPE_MONSTER) = 1;
*#DC(WEEK_TYPE_INFERNO) = 2;

!#DC(MONTH_TYPE_NONE) = 0;
*#DC(MONTH_TYPE_MONSTER) = 1;
*#DC(MONTH_TYPE_PLAGUE) = 2;

 [Check if script is enabled: if it is, set flag i^wog_20_enabled^ to true]


!?FU(WOG_20_Initialization);
!!UN:P20/?i^wog_20_enabled^;
!!FU&i^wog_20_enabled^<>(TRUE):E;

!!VRi^wog_20_next_week_subtype^:S(NO_MON);
!!FU(WOG_20_GetNextWeekType):P(NULL)/?i^wog_20_next_week_type^;
!!FU(WOG_20_GetNextWeekSubtype):Pi^wog_20_next_week_type^/?i^wog_20_next_week_subtype^;

; Set up addtional monsters list for Deity Of Fire
!!FU(NewIntArray):P?i^wog_20_deityOfFireExtraMonsters^/(M_STORED);
!!FU(Array_Push):Pi^wog_20_deityOfFireExtraMonsters^/(MON_FAMILIAR);

!#FU(WOG_20_Initialization):P;
--------------------------------------------------------------------------------------
!?FU(WOG_CreateERMHook)&i^wog_20_enabled^;
!!SN:Ex1/1/5032547/(WOG_20_HOOK_OnNewWeekMessage);
!!SN:Ex1/1/5016726/(WOG_20_HOOK_OnNewMonth);4C8C96
!!SN:Ex1/1/5014935/(WOG_20_HOOK_OnNewWeek);004C8597

5016726
5014678


!!UN:P200/?(isRefugeeSync:y);
!!if&(isRefugeeSync);
  !!SN:Ex1/1/5015808/(WOG_20_HOOK_RefugeeIteration);
!!en;

!?FU(WOG_20_HOOK_OnNewMonth)&i^wog_20_enabled^; 4C8C96
!!UN:C6916228/4/(MONTH_TYPE_NONE); // set default month type
!!UN:C6911896/4/(MONTH_TYPE_NONE); // set monster as pikeman but it is set as 0 - default 



!?FU(WOG_20_HOOK_OnNewWeek)&i^wog_20_enabled^; 004C8597
*!IF:M^WOG_OnNewWeek^;
!!VR(previousWeekType:y):Si^wog_20_week_type^; [strore global data to local to better code]
!!VR(previousWeekSubType:y):Si^wog_20_week_subtype^;

!!VR(thisWeekType:y):S-1;         [init new week values]
!!VR(thisWeekSubType:y):S-1;

// first - reset monster stats;
!!FU(WOG_20_ResetWeekBonus):P(previousWeekType:y)/(previousWeekSubType:y)/?i^wog_20_monster_parameter_0^/?i^wog_20_monster_parameter_1^/?i^wog_20_monster_parameter_2^  /?i^wog_20_monster_parameter_3^/?i^wog_20_monster_parameter_4^/?i^wog_20_monster_parameter_5^/?i^wog_20_monster_parameter_6^; [reset parameters]

// then check again next week type
!!FU(WOG_20_GetNextWeekType):P(previousWeekType:y)/?(thisWeekType:y);

!!if&(thisWeekType:y)=i^wog_20_next_week_type^; [if result is the same]
  !!VR(thisWeekSubType:y):Si^wog_20_next_week_subtype^; [then set this week type properly]
!!el;
  !!FU(WOG_20_GetNextWeekSubtype):P(thisWeekType:y)/?(thisWeekSubType:y); [else recalc result (lmao only imps gonna be here)]
!!en;

!!FU(WOG_20_GetNextWeekType):P(thisWeekType:y)/?i^wog_20_next_week_type^; [then get new weeks type based on the new one]
!!FU(WOG_20_GetNextWeekSubtype):Pi^wog_20_next_week_type^/?i^wog_20_next_week_subtype^; [then get subtype for new one]

!!if&(thisWeekType)=(WOG_20_RESOURCE_WEEK); [if resources then]
  !!VRi^wog_20_double_mine_income^:S(TRUE); [allow double income]
  !!VR(needToPlaceAnywhere:y):S(TRUE);  [allow to place]
!!el; [if any monster week]
  !!FU(WOG_20_SetMonsterParameters):P(thisWeekType)/(thisWeekSubType)/?(needToPlaceAnywhere:y)/?i^wog_20_monster_parameter_0^/?i^wog_20_monster_parameter_1^/?i^wog_20_monster_parameter_2^
  /?i^wog_20_monster_parameter_3^/?i^wog_20_monster_parameter_4^/?i^wog_20_monster_parameter_5^/?i^wog_20_monster_parameter_6^;
  !!VRi^wog_20_sync_refugee^:S(needToPlaceAnywhere);
!!en;

!!if&(needToPlaceAnywhere);             [if need to place check other scripts]
  !#VA(customArg[2]:y);
  !!FU(WOG_20_GetObjectToPlace):P(thisWeekType:y)/(thisWeekSubType:y)/?(fooPtr:y)/?(objectNumber:y)/?(customArg[0])/?(customArg[1]);
  !!if&(fooPtr);
    !!FU(WOG_20_PlaceNewObjects):P(fooPtr)/(thisWeekSubType:y)/(objectNumber)/(customArg[0])/(customArg[1]);
    !!UN:C(GAME_MANAGER)/4/?(gameMgr:y);
    // set guard for the placed objects
    !!SN:E5021904/(CALLCONV_THISCALL)/(gameMgr);
  !!en;
!!en;

!!VRi^wog_20_week_type^:S(thisWeekType);
!!VRi^wog_20_week_subtype^:S(thisWeekSubType);
!!FU(WOG_20_SyncOnlineData):D^wog_20_week_type^/i^wog_20_week_type^ D^wog_20_week_subtype^/i^wog_20_week_subtype^; [send data to all players]

!!if&(thisWeekType)<>(NO_RES);
  !!UN:C6911904/4/(WEEK_TYPE_MONSTER) C6915148/4/(thisWeekSubType);     [-set week type && week subtype; to show proper message]


  *!MA:G(monId)/?(growth:y);
  !!VR(additionalGrowth:y):S0;
  !!UN:Cx1/(STRUCT_HOOK_CONTEXT_EBP)/4/?(ebp:y) C(ebp:y)/-8/4/(thisWeekSubType);
  *!VR(monId:y):S(thisWeekSubType);
  *!UN:Cx1/(STRUCT_HOOK_CONTEXT_EBP)/4/?(ebp:y) Cx1/(STRUCT_HOOK_CONTEXT_EDI)/4/?(this:y); // get this
  *!UN:C(ebp:y)/-4/4/(this) C(ebp:y)/-12/4/(additionalGrowth:y) C(ebp:y)/-8/4/(NO_MON) C(ebp:y)/-16/4/(NO_MON); [this is necessary all another used only to set town creatures gorwth]
  *!UN:Cx1/(STRUCT_HOOK_CONTEXT_EAX)/4/(monId:y);

  ; WARNING: This jump makes it possible to have recruited hero appearing from taverns
  ; Discussion: https://discord.com/channels/665742159307341827/1247341490401706014
  *!SN:X?t/0;
  *!UN:Cx1/(STRUCT_HOOK_CONTEXT_RET)/4/5015087;[skip only mon init and imp week but add mon to towns] 4C862F
!!en;

!?FU(WOG_20_SyncOnlineData);
!#VA(variableName:x) (value:x);
!!VRi^%z(variableName)^:S(value);
---------------------------------------------------------------------------------------
!?FU(WOG_20_GetNextWeekSubtype);
!#VA(weekType:x) (weekSubType:x);

!!VR(weekSubType):S(NO_MON);
!!MA:F(MON_AZURE_DRAGON)/?(maxFv:y);                                                                                 [get strongest mon FV to limit monster week power]

!!if&(weekType:x)=(WOG_20_INFERNO_WEEK);
  !!VR(weekSubType):S(MON_IMP);
!!el&(weekType)=(WOG_20_RESOURCE_WEEK);
  !!VR(weekSubType):T0/(RES_FIRST)/(RES_LAST_SOD);
!!el&(weekType)=(WOG_20_PLAYER_WEEK);
  !!FU(WOG_20_GetMonsterOfPlayerWeek):P?(weekSubType)/?(player:y)/?(hero:y)/(maxFv);
!!el&(weekType)=(WOG_20_MONSTER_WEEK);
  ; If it was a week of monsters, skip the monster for the next week
  !!if|i^wog_20_week_type^=(WOG_20_PLAYER_WEEK)/i^wog_20_week_type^=(WOG_20_MONSTER_WEEK);
    !!VR(excludeMon:y):Si^wog_20_week_subtype^;
  !!el;
    !!VR(excludeMon):S(NO_MON);
  !!en;

  !!FU(WOG_GetRandomMonster):P?(weekSubType)/(MON_MIN_LEVEL)/(MON_MAX_LEVEL)/(maxFv)/(excludeMon);
!!en;

---------------------------------------------------------------------------------------
!?FU(WOG_20_GetNextWeekType);
!#VA(currentType:x) (nextType:x);

!!VR(nextType):S(currentType) +1;       [set next week type]

!!if&(nextType)>(WOG_20_PLAYER_WEEK);   [if out of range]
  !!VR(nextType):S(WOG_20_MONSTER_WEEK);[set first week again if out of range]
!!en;

!!VR(x:y):S-1;

!!re i;
  !!UN:U(OBJ_TOWN)/(TOWN_INFERNO)/-1/(x)/(y:y)/(z:y);
  !!br&(x)<0;
  !!CA(x)/(y)/(z):B3/26;

  !!if&1;
    !!VR(nextType):S(WOG_20_INFERNO_WEEK);
    !!FU:E;
    !!br;                               [break the loop if Inferno with grail found]
  !!en;
!!en;


---------------------------------------------------------------------------------------
// modify TEXT_BUFFER
!?FU(WOG_20_HOOK_OnNewWeekMessage);
!!UN:Cx1/(STRUCT_HOOK_CONTEXT_ECX)/4/?(textBuffer:y);
!!FU(WOG_20_GetWeekDescription):Pi^wog_20_week_type^/i^wog_20_week_subtype^/?(descrition:z);
!!SN:B(textBuffer)/d/^%(descrition)^;

!?FU(WOG_20_HOOK_RefugeeIteration)&i^wog_20_sync_refugee^;
!!UN:Cx1/(STRUCT_HOOK_CONTEXT_EAX)/4/i^wog_20_week_subtype^; replace refugee mon id by own 

!?FU(WOG_OnCalculateMineIncome_Quit)&i^wog_20_double_mine_income^;
!#VA(x:x) (y:x) (z:x) (baseIncome:x) (newIncome:x);
!!MN(x)/(y)/(z):R?r/1;                  [get res type no redraw]
!!if&r=i^wog_20_week_subtype^;
  !!VR(newIncome):Sd<<1;                [double income for this mine]
!!en;

 [Right-Click on End-Turn button will display current week's monster]
!?FU(OnAdventureMapRightMouseClick)&i^wog_20_enabled^/i^mouse_item^=(ITEM_ADVMAP_END_TURN_BTN)/i^mouse_action^=(MOUSE_RMB_PRESSED);
!!if&i^timerWeek^>1;
  !!FU(WOG_20_GetWeekDescription):Pi^wog_20_week_type^/i^wog_20_week_subtype^/?(weekMsg:z);

  !!if&i^wog_20_week_type^=(WOG_20_RESOURCE_WEEK);
    !!VR(picType:y):Si^wog_20_week_subtype^;
    !!VR(offset:y):S(picType:y) *4;
    !!UN:C6781304/(offset)/4/?(picSubType:y);
    !!VR(picSubType):*-2;

  !!el|i^wog_20_week_type^=(WOG_20_MONSTER_WEEK)/i^wog_20_week_type^=(WOG_20_PLAYER_WEEK);
    !!VR(picType:y):S(PIC_TYPE_MONSTER);
    !!VR(picSubType:y):Si^wog_20_week_subtype^;

  !!el&i^wog_20_week_type^=(WOG_20_INFERNO_WEEK);
    !!VR(picType):S25;                  [Inferno buildings]
    !!VR(picSubType):S26;               [Deity of Fire]
  !!en;
!!el;
  !!VR(picType):S(PIC_TYPE_LUCK_NEUTRAL);
  !!VR(picSubType):S(NO_PIC_TYPE);
  !!SN:T^wog.20.monster.not^/?(weekMsg);
!!en;

; Compatibility with Mysticism I - show the info of next week
!!UN:P35/?(isMysticism:y);

!!if&(isMysticism);
  !!OW:C?(player:y)/?(interactPlayer:y);
  !!VR(weekMsg):+s^wog_35_prediction_%(interactPlayer)^;
!!en;

!!IF:Q1/(picType:y)/(picSubType:y)/(MSG_TYPE_POPUP)/(weekMsg:z); [Display Week of Monsters info]

s^wog_35_prediction_%i^

!!CM:R0;                                [Disable standard right-click message]

!?FU(WOG_20_GetWeekDescription);
!#VA(weekType:x) (weekSubType:x) (result:x);

!!FU(WOG_20_GetWeekName):P(weekType:x)/(weekSubType:x)/?(weekName:z);
!!FU(WOG_20_GetWeekBonusName):P(weekType:x)/(weekSubType:x)/?(weekBonusName:z);

!!VR(result):Z^%(weekName)%(weekBonusName)^;


!?FU(WOG_20_GetWeekName);
!#VA(weekType:x) (weekSubType:x) (result:x);
!!if&(weekType)=(WOG_20_RESOURCE_WEEK);
  !!SN:T^wog.20.resource.name.%(weekSubType)^/?(msg:z);
!!el;
  !!SN:H^monname^/(weekSubType:x)/0/?(single:z) T^wog.20.monster.name^/?(msg:z)/^single^/(single);
!!en;

!!VR(result):Z(msg);

!?FU(WOG_20_GetWeekBonusName);
!#VA(weekType:x) (weekSubType:x) (result:x);

!!if&(weekType)=(WOG_20_RESOURCE_WEEK);
  !!SN:T^wog.20.resource.description.%(weekSubType)^/?(msg:z);
!!el;
  !!VR(bonus:z):S^%T(wog.endl)^;
  !!re i/0/6;
    !!co&i=3;                           [Archer30: It doesn't seem like we need both min/max damage to be displayed as their bonuses are the same]

    !!VR(value:y):Si^wog_20_monster_parameter_%i^;

    !!if&(value)>0;
      !!SN:T^wog.20.monster.%i^/?(tmp:z)/^value^/(value);
      !!VR(bonus):+(tmp);
    !!en;
  !!en;

  ; Additional text for Deity of Fire
  !!if&(weekType)=(WOG_20_INFERNO_WEEK);
    !!VR(deityMons:z):S^^;
    !!SN:Mi^wog_20_deityOfFireExtraMonsters^/?(size:y);

    !!re i/0/(size)/1/-1;
      !!SN:Mi^wog_20_deityOfFireExtraMonsters^/i/?(mon:y);
      !!SN:H^monname^/(mon)/1/?(mult:z);

      !!VR(deityMons)&(deityMons)<>^^:+^%T(wog.slash)^;
      !!VR(deityMons):+(mult);
    !!en;

    !!SN:T^wog.20.monster.deityOfFire^/?(deityMsg:z)/^monsters^/(deityMons);
    !!VR(bonus):S^%(deityMsg)%(bonus)^;
  !!en;

  !!SN:H^monname^/(weekSubType:x)/1/?(mult:z);
  !!SN:T^wog.20.monster.description^/?(msg:z)/^mult^/(mult)/^bonus^/(bonus);
!!en;

!!VR(result):Z(msg);




!?FU(WOG_20_SetMonsterParameters);
!#VA(type:x);
!#VA(monId:x) (needToPlaceAnywhere:x) (s[7]:x); [return changes]
!#VA(st[7]:y);

!!VR(needToPlaceAnywhere):S(TRUE);

!!MA:A(monId:x)/?(st[0]) D(monId:x)/?(st[1]) M(monId:x)/?(st[2]) E(monId:x)/?(st[3]) P(monId:x)/?(st[4]) S(monId:x)/?(st[5]) G(monId:x)/?(growth:y);

*!VR(st[2]):S(st[3]);                   [set min damage as max damage;]

!!re i/0/5;
  !!if&(st[i])>0;
    !!VR(s[i]):S(st[i]) :3 F1/(st[i]); set 33% stats bonus
  !!en;
!!en;

!!if&(growth)>0;
  !!VR(s[6]):S(growth) Sd>>1 F1/(growth);
!!en;

!!MA:A(monId:x)/d(s[0]) D(monId:x)/d(s[1]) M(monId:x)/d(s[2]) E(monId:x)/d(s[3]) P(monId:x)/d(s[4]) S(monId)/d(s[5]) G(monId:x)/d(s[6]);

; Set bonuses for Familiars if Deity of Fire is built
!!if&(type)=(WOG_20_INFERNO_WEEK);
  !!SN:Mi^wog_20_deityOfFireExtraMonsters^/?(size:y);

  !!re i/0/(size)/1/-1;
    !!SN:Mi^wog_20_deityOfFireExtraMonsters^/i/?(extraMonId:y);

    !!MA:A(extraMonId)/d(s[0]) D(extraMonId)/d(s[1]) M(extraMonId)/d(s[2]) E(extraMonId)/d(s[3]) P(extraMonId)/d(s[4]) S(extraMonId)/d(s[5]) G(extraMonId)/d(s[6]);
  !!en;
!!en;

!!SN:E4696752/(CALLCONV_FASTCALL)/(monId:x); [is mon a war machine]
!!VRv1:&1;                                   [check byte]
!!VR(isWarMachine:y):Sv1;
!!if|(isWarMachine)/(monId)=(MON_GHOST);
  !!VR(needToPlaceAnywhere):S(FALSE);
!!en;


!?FU(WOG_20_ResetWeekBonus);
!#VA(type:x) (monId:x) (st[7]:x);

!!if|(type)=(WOG_20_MONSTER_WEEK)/(type)=(WOG_20_PLAYER_WEEK)/(type)=(WOG_20_INFERNO_WEEK); if week bonus = 1 = monster
  !!MA:A(monId:x)/d-(st[0]) D(monId:x)/d-(st[1]) M(monId:x)/d-(st[2]) E(monId:x)/d-(st[3]) P(monId:x)/d-(st[4]) S(monId:x)/d-(st[5]) G(monId:x)/d-(st[6]);

  ; Reset bonuses for Familiars (or other monsters) if Deity of Fire is built
  !!if&(type)=(WOG_20_INFERNO_WEEK);
    !!SN:Mi^wog_20_deityOfFireExtraMonsters^/?(size:y);

    !!re i/0/(size)/1/-1;
      !!SN:Mi^wog_20_deityOfFireExtraMonsters^/i/?(extraMonId:y);
      !!MA:A(extraMonId)/d-(st[0]) D(extraMonId)/d-(st[1]) M(extraMonId)/d-(st[2]) E(extraMonId)/d-(st[3]) P(extraMonId)/d-(st[4]) S(extraMonId)/d-(st[5]) G(extraMonId)/d-(st[6]);
    !!en;
  !!en;

  ; reset variables
  !!re i/0/(st[SIZE])/1/-1;
    !!VR(st[i]):S0;
  !!en;
!!en;

!!VRi^wog_20_sync_refugee^:S(FALSE); 
!!VRi^wog_20_double_mine_income^:S(FALSE);

!?FU(WOG_20_GetObjectToPlace);
!#VA(weekType:x) (weekSubType:x) (fooPtr:x) (objectNumber:x) (customArg[2]:x);
!!VR(fooPtr):S(NULL);
!!UN:X?(mapSize:y)/?t;
!!if&(weekType)=(WOG_20_RESOURCE_WEEK);
  !!FU(WOG_20_GetBasicTypeOfWeek):P;
  !!UN:P134/?(isPlacingEnabled:y);
  !!if&(isPlacingEnabled);
    !!VR(fooPtr):S(WOG_20_PlaceResource);

    !!VR(objectNumber):S(mapSize:y) -1:36 *2 F1/12 *2 *2;
    !!VR(customArg[0]):S3;
    !!VR(customArg[1]):S6;
    !!if|(weekSubType)=(RES_ORE)/(weekSubType)=(RES_WOOD);
      !!VR(customArg[0]):S6;
      !!VR(customArg[1]):S10;
    !!el|(weekSubType)=(RES_GOLD);
      !!VR(customArg[0]):S5;
      !!VR(customArg[1]):S10;
    !!en;
  !!en;
!!el;
  
  !!UN:P135/?(isWanderingEnabled:y) P136/?(isStationaryEnabled:y);

  !!if|(isWanderingEnabled)/(isStationaryEnabled);

    !!MA:G(weekSubType)/?(growth:y) L(weekSubType)/?l;                [Enhanced base value (+50% for Town creatures)]
    !!VR(objectNumber):S(mapSize:y) -1:36 *2 F1/12 *2;
    !!VR(week:y):Sc0 -1 :7 +1 F1/4095;
    !!VR(customArg[0]):S(growth) Sd>>1 F1/(growth) *(week:y) F1/4095; [calc growth of the creatures]
    !!UN:P234/?(isBanerBanned:y) A(ART_WARLORDS_BANNER)/?(isBanned:y);
    !!VR(customArg[1]):S(isBanerBanned) |(isBanned:y) X1;             [reverse ban behaviour]
    !!if&(isWanderingEnabled);
      !!FU(WOG_GetNumberOfAvailWanderingMonsters):P?(monstersLeft:y);
      !!VR(objectNumber):F0/(monstersLeft);
      !!VR(fooPtr):S(WOG_20_PlaceWanderingMonster);
    !!el;
      !!VR(fooPtr):S(WOG_20_PlaceStaticMonster);
    !!en;
  !!en;
!!en;

--------------------------------------------------------------------------------------

>>[Calculates the next player to base monster type on]
!?FU(WOG_20_GetMonsterOfPlayerWeek);
!#VA(monster:x) (player:x) (hero:x) (maxFv:x);

; init values
!!VR(monster):S(NO_MON);
!!VR(player):S(NO_PLAYER);
!!VR(hero):S(NO_HERO);
; Create a new array for all the valid options of the week with 2 elements
!!FU(NewIntArray):P?(livingPlayers:y);;create living players array:


!!re i/(PLAYER_FIRST)/(PLAYER_LAST);
  !!OW:Ii/d/?(isDead:y);
  !!FU(Array_Push)&(isDead)=0:P(livingPlayers)/i;
!!en;


!!SN:M(livingPlayers)/?(size:y); 


!!if&(size:y);                                            [if there are living players]
  !!FU(Array_Shuffle):P?(livingPlayers);                  [huffle them]

  !!re i/0/(size)/1/-1;                                   [loop living players]
    
    !!SN:M(livingPlayers)/i/?(playerId:y);                [get them one by one]

    !!OW:H(playerId)/1;                                   [get player heroes]
    !!VR(heroesNum:y):Sv1;                                [store]
    !!if&(heroesNum:y);                                   [if there are heros]
      !!FU(NewIntArray):P(heroesNum:y)/?(playerHeroes:y); [create array for them]

      !!re j/2/(heroesNum:y)/1/1;
        !!VR(ind:y):Sj -2;
        !!SN:M(playerHeroes)/(ind:y)/vj;                  [fill array]
      !!en;

      !!FU(Array_Shuffle):P?(playerHeroes);               [shuffle heroes]

      !!re j/0/(heroesNum:y)/1/-1;                        [now iterate them]
        !!SN:M(playerHeroes)/j/?(randomPlayerHero:y);     [get random hero]

        !!FU(NewIntArray):P?(heroArmy:y);                 [create array again lmao now for army]
        !!re (slotInd:y)/0/(ARMY_SLOT_LAST);              [iterate hero's army]
          !!HE(randomPlayerHero):C0/(slotInd:y)/?t/?n;
          !!if&t<>(NO_MON)/n>0;                           [if there is creature]
            !!MA:Ft/?f;                                   [get fight value]
            !!FU(Array_Push)&f<=(maxFv):P(heroArmy)/t;    [if less then max FV add mon "t" there]
          !!en;
        !!en;

        !!SN:M(heroArmy)/?(armyTypesSize:y);              [check if array isn't empty]
        !!if&(armyTypesSize);
          !!FU(Array_SortedUnique):P?(heroArmy);          [sort unique]
          !!FU(Array_Shuffle):P?(heroArmy);               [shuffle afte sort]
          !!SN:M(heroArmy)/0/?(monster);                  [take first mon as result]
          !!VR(player):S(playerId:y);                     [take player as result]
          !!VR(hero):S(randomPlayerHero:y);               [take hero as result]
          !!FU:E;                                         [end all the loops]
        !!en;
      !!en;
    !!en;
  !!en;
!!en;

; If it was a week of monsters, skip the monster for the next week
!!if|i^wog_20_week_type^=(WOG_20_PLAYER_WEEK)/i^wog_20_week_type^=(WOG_20_MONSTER_WEEK);
  !!VR(excludeMon:y):Si^wog_20_week_subtype^;
!!el;
  !!VR(excludeMon):S(NO_MON);
!!en;

!!FU(WOG_GetRandomMonster):P?(monster)/(MON_MIN_LEVEL)/(MON_MAX_LEVEL)/(maxFv)/(excludeMon);

--------------------------------------------------------------------------------------

--------------------------------------------------------------------------------------
!?FU(WOG_20_PlaceNewObjects);
!#VA(fooPtr:x) (subtype:x) (objectNumber:x) (value:x) (customArg:x); 

!!UN:X?(mapSize:y)/?(hasUnderground:y);
!!VR(hasUnderground):F0/1;
!!VR(chance:y):S(mapSize) *(mapSize) Sd>>1 Sd<<(hasUnderground) :(objectNumber);
!!VR(objectNumber):S0;
!!re (z:y)/0/(hasUnderground);
  !!re (y:y)/0/(mapSize)/1/-1;
    !!re (x:y)/0/(mapSize)/1/-1;
      *!FU&(objectNumber)=0:E;

      !!TR(x)/(y)/(z):T?t/d/d/d/d/d/d/d; [Check terrain type]
      !!co&t>7;
      !!OB(x)/(y)/(z):T?t; [Check object type for free square]
      !!co&t;
      !!VRr:R0/1/(chance);
      !!co&r<(chance);
      *!VR(objectNumber):-1;
      !!FU(fooPtr):P(x)/(y)/(z)/(subtype)/(value)/(customArg);/(arg[2]);
    !!en;
  !!en;
!!en;
*!IF:M^%(objectNumber)^;

!?FU(WOG_20_PlaceResource);
!#VA(x:x) (y:x) (z:x) (resType:x) (minValue:x) (maxValue:x);
  !!UN:I(x)/(y)/(z)/(OBJ_RESOURCE)/(resType)/0;                                          [Place monster or resource on empty land square only]
  !!VR(value:y):R0/(minValue)/(maxValue:x);                                              [Random number for value of resource pile]
  !!AR(x)/(y)/(z):V(value);                                                              [Set value of resource pile]

!?FU(WOG_20_PlaceStaticMonster);
!#VA(x:x) (y:x) (z:x) (monId:x) (monNum:x) (banner:x);
  !!UN:I(x)/(y)/(z)/(OBJ_MONSTER)/(monId);                                               [Place monster or resource on empty land square only]
  !!VR(aggresion:y):R0/(ADV_MON_AGGRESSION_HOSTILE_MIN)/(ADV_MON_AGGRESSION_HOSTILE_MAX);
  !!MO(x)/(y)/(z):O0 U0 R(aggresion)/1 G(monNum:x);                                      [Set number of monsters, aggression, etc.]

  !!if&(banner:x);
    !!VRr:R0/0/9;                                                                        [Random number for chance of carrying a Warlord's Banner]
    !!if&r=0;
      !!MO(x)/(y)/(z):A(ART_WARLORDS_BANNER);                                            [10% chance of carrying a Warlord's Banner]
    !!en;
  !!en;

!?FU(WOG_20_PlaceWanderingMonster);
!#VA(x:x) (y:x) (z:x) (monId:x) (monNum:x) (banner:x);
  !!FU(WOG_20_PlaceStaticMonster):P(x)/(y)/(z)/(monId)/(monNum)/(banner);                [first place monster with delegating function]
  !!MW:M(x)/(y)/(z)/?(wm:y);                                                             [Make monster a wandering monster: y5=WM number]
  !!MW(wm:y):A2/0/0/0 A3/0/0/0/0/0/0/0;                                                  [Set WM defaults]

--------------------------------------------------------------------------------------
!?FU(WOG_GetNumberOfAvailWanderingMonsters);                                             [; Check how many wandering monster slot is available. Max = 48.]
!#VA(result:x);
!!VR(result):S0;
!!re (wm:y)/1/48;
  !!MW(wm):E?(wmExisted:y);
  !!VR(result)&(wmExisted)<>(TRUE):+1;
!!en;

--------------------------------------------------------------------------------------
