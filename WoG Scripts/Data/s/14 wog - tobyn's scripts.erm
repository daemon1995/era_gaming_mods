ZVSE2

** All My Scripts (2004 September 19)                         (for WoG v3.58)
** by Tobyn
** with big thanks to Fnord and the team for all their advice
**
** Each scriptlet is fully documented and contains a separate variables list.
** Var i^wog_36_enabled^ are script activity "flags" for my new scriptlets here.
** To enable a script, set respective var to 1 (normally done via Wogify Options).
**
** Updated on Jul 2023 by Archer30 and daemon_n


; Disable Reduce Conflux Growth if Neutral Town is enabled
!#UN:P67/?(neutralTown:y);
!#UN&(neutralTown):P189/(FALSE);

!#UN:P188/?i^wog_188_enabled^;          check if Rampart Monster Change is enabled in WoGify Options
!#UN:P189/?i^wog_189_enabled^;          check if Conflux Monster Change is enabled in WoGify Options
!#UN:P190/?i^wog_190_enabled^; check if First Aid Enhanced is enabled in WoGify Options
!#UN:P191/?i^wog_191_enabled^;          check if Estates Enhanced is enabled in WoGify Options
!#UN:P193/?i^wog_193_enabled^;          check if Warfare is enabled in WoGify Options
!#UN:P194/?i^wog_194_enabled^;          check if Advanced Witch Huts are enabled in WoGify Options

!#UN:P203/?i^wog_203_enabled^;          check if Estates I (script48.erm, Arstahd) is enabled
!#UN:P36/?i^wog_36_enabled^;           check if Mithril (script36.erm, Anders) is enabled


; Hooks
!?FU(WOG_CreateERMHook);
; Estates I & II
!!SN|i^wog_191_enabled^/i^wog_203_enabled^:Ex1/1/5129755/(WOG_OnHeroGetGoldIncome);
5129765

; Warfare
; INIT SKILL NAMES (leaves descriptions unchanged)
!!if&i^wog_193_enabled^;
  !!SN:Ex1/1/5121389/(WOG_Hero_SSkillSet);                                    [set new skill value by game native way]
  !!SN:Ex1/1/5121366/(WOG_Hero_SSkillAdd);                                    [add new skill value by game native way]

  !!SN:Ex1/1/7620989/(WOG_ERM_Hero_BeforeSkillAffection);                     [.text 004E2540  00000061  0000000C  00000005  R . . . B T .] 74497D
  !!SN:Ex1/1/7621364/(WOG_ERM_Hero_AfterSkillAffection);                      [.text 004E2540  00000061  0000000C  00000005  R . . . B T .] 744AF4
!!en;


******************************************************************************************

** TOBYN LIBRARY FUNCTIONS (2004 September 19)                (for WoG v3.58)
** by Tobyn
**
**
** some common functions (may also be used from outside with a fct call)
**
** USES FU(WOG_Hero_GetLuckLevel),(WOG_GetSkillInfoByClick)


******************************************************************************************

** ADVANCED WITCH HUTS (2004 September 19)                    (for WoG v3.58)
** by Tobyn
** Rewritten by Archer30
**
** This script enhances Witch Huts with an option not to learn the
** offered skill, get that skill advanced (for 3000 gold) or even
** forget all about the respective skill.
**
** AI always learns advanced skill (if enough gold, only needs 500 gold)
** or basic skill otherwise (standard object behaviour), but
** AI never forgets that skill here.
**
** Witch Huts won't give their skill if hero already has 8 other skills.
** careful: to have standard no-more-than-8-skills behaviour, it is
**   needed to check pre-visit skill expertise, then operate standard
**   Witch Hut and check post-visit skill expertise. Compare, and if
**   both are "none", Witch Hut gives out standard msg for full skills.
**
** IDEA:
** - if player has more than 9 Mithril and hero expert skill, let the
**   witch "offer" to hide that skill for 10 Mithril. If rejected,
**   either do nothing or call full wrath (= unlearn that skill)
**
** ONLY ACTIVE if i^wog_194_enabled^=1 (wogify option 194)


!?OB(OBJ_WITCH_HUT)&i^wog_194_enabled^;
; Enable standard object interaction - if AI
!!if&-(ERM_FLAG_IS_HUMAN);
  !!OB998:R;
  !!FU:E;
!!en;

; Disable standard object interaction - if human
!!OB998:S;

; Set the Witch Hut as visited for the player
!!FU(WOG_AdvMgr_SetObjectAsVisited):Pv998/v999/v1000/i^timerOwner^;

; Exit if the secondary skill is banned
!!WH998:S?(secSkill:y); get Witch Hut skill
!!FU&(secSkill)=-1:E;

!!HE(CURRENT_HERO):S(secSkill)/?(level:y);        get hero skill expertise

; Execute the learning function if the hero has learned the given skill before
!!if&(level)>(SKILL_NOT_LEARNED);
  !!FU(WOG_194_LearnOrForgetSkill):P;
; Check for more info if the hero has not learned the given skill before
!!el;
  !!UN:C4881872/(UNC_INT8)/?(secSkillLimit:y);
  *!HE(CURRENT_HERO):S?(number:y);      [HE:S should also be correct if everything's right, but seems it isn't]
  !!FU(WOG_GetNumberOfSecSkills):P(CURRENT_HERO)/?(number:y);

  ; Excute the learning function if the hero can still learn a new skill
  !!if&(number)<(secSkillLimit);
    !!FU(WOG_194_LearnOrForgetSkill):P;
  ; Show msg if the hero cannot learn any new skill
  !!el&(ERM_FLAG_IS_HUMAN);
    !!SN:H^secskill^/(secSkill)/(SKILL_NOT_LEARNED)/?z-1; using built-in skill name lookup
    !!IF:M1/z164000; msg if not given (= no free skill slot)
  !!en;
!!en;

!?FU(WOG_194_LearnOrForgetSkill);                  dialogue function
!!WH998:S?(secSkill:y);    get Witch Hut skill
!!HE(CURRENT_HERO):S(secSkill)/?(level:y);              get hero expertise with this skill
!!OW:R(CURRENT_PLAYER)/(RES_GOLD)/?(gold:y);              get owner's gold
!!VR(picSubtype:y):S(secSkill)*3 +2 +(level);                (calculations for display skill pic)    .
!!VR(picSubtype)&(level)<=(SKILL_BASIC):+1;               .

!!VR(isWarfare:y)|(secSkill)=(SKILL_BALLISTICS)/(secSkill)=(SKILL_ARTILLERY)/(secSkill)=(SKILL_FIRST_AID):S(TRUE); set (isWarfare)=1 if one of the Warfare skills
!!VR(isWarfare)&i^wog_193_enabled^=0:S(FALSE);           set (isWarfare)=0 if Warfare inactive

; Offer to forget the skill if already advanced
!!if&(level)>=(SKILL_ADVANCED);
  !!IF:Q1/(PIC_TYPE_SEC_SKILL)/(picSubtype)/(MSG_TYPE_QUESTION)/z164001;     msg if already adv or expert

  !!if&-1;
    !!HE(CURRENT_HERO)&(isWarfare)=(FALSE):S(secSkill)/0; remove adv/exp skill at player's choice (AI never forgets) and end function (because (level) gladly not actualized)
    !!HE(CURRENT_HERO)&i^wog_193_enabled^=1/(isWarfare):S(SKILL_BALLISTICS)/(SKILL_NOT_LEARNED) S(SKILL_ARTILLERY)/(SKILL_NOT_LEARNED) S(SKILL_FIRST_AID)/(SKILL_NOT_LEARNED); unlearn all three Warfare skills if appropriate and end fct

    !!IF:M(MSG_TYPE_MES)/z164002;          msg if "unlearn"
  !!en;
; Offer to learn the skill if the hero has none or basic level of the skill
!!el;
  !!if&(level)=(SKILL_NOT_LEARNED);
    !!IF:Q1/20/(picSubtype)/(MSG_TYPE_QUESTION)/z164003; std msg if no skill

    !!if&1;
      !!HE(CURRENT_HERO):S(secSkill)/1;         set skill to basic if agreed to learn
      !!VR(picSubtype):+1;            (inc display pic)
      !!VR(level):S1;            set skill expertise var to basic
    !!en;
  !!en;

  !!if&(level)=(SKILL_BASIC);
    !!if&(gold)<3000;
      !!IF:Q1/(PIC_TYPE_SEC_SKILL)/(picSubtype)/(PIC_TYPE_RES_GOLD)/3000/(MSG_TYPE_MES)/z164004; msg if bas and not enough gold
    !!el;
      !!IF:Q1/(PIC_TYPE_SEC_SKILL)/(picSubtype)/(PIC_TYPE_RES_GOLD)/3000/(MSG_TYPE_QUESTION)/z164005; msg if bas and enough gold (offer to advance)

      !!if&1;
        !!OW:R(CURRENT_PLAYER)/(RES_GOLD)/d-3000;    pay 3000 gold if agreed
        !!HE(CURRENT_HERO):S(secSkill)/(SKILL_ADVANCED);         set skill to advanced then
      !!en;
    !!en;
  !!en;
!!en;

; AI behaviours
!$OB(OBJ_WITCH_HUT)&i^wog_194_enabled^/-(ERM_FLAG_IS_HUMAN);
; Exit if the secondary skill is banned
!!WH998:S?(secSkill:y); get Witch Hut skill
!!FU&(secSkill)=-1:E;

!!HE(CURRENT_HERO):S(secSkill)/?(level:y);        get hero skill expertise
!!OW:R(CURRENT_PLAYER)/(RES_GOLD)/?(gold:y);              get owner's gold

!!if&(level)<=(SKILL_BASIC)/(gold)>499;
  !!HE(CURRENT_HERO):S(secSkill)/(SKILL_ADVANCED); AI gets advanced if enough gold
  !!OW:R(CURRENT_PLAYER)/(RES_GOLD)/d-500;  AI pays 500 gold if advanced
!!en;

******************************************************************************************

** ESTATES ENHANCED (2004 September 19)                       (for WoG v3.58)
** by Tobyn
**
** This script enhances Estates secondary skill with further resources.
** Estates will give additional 25/50/100 Gold (Basic/Advanced/Expert)
** for every 10,000 experience each day (adjustable via v2333, will be *0.25/0.5/1)
** Max +2000 Gold/day (from hero lvl 25 on), but Estates specialists have max +5000
** Gold/day (lvl 30) in addition to their standard +5% per level (no cap there)
** Also generates additional resources, depending on hero level and weekday:
** - For lvl 1 to 9, each hero level gives one resource per week (i.e 1-7
**   resources per week in total, lvl 7-9 will give you one resource each day)
**   Resource type randomly chosen at first time and always stays the same:
**   1 (Wood+Ore|Mercury|Sulfur|Crystal|Gem|350 Gold)
** - For lvl 10+, Estates change resource type every day, cycling through
**   all types within one week: 1 Wood+Ore (monday), 1 Mercury (tuesday), ...
**   350 Gold (saturday) and 1 Mithril (sunday)
** - Humans may choose resource with left-clicking Expert Estates icon in heroes
**   screen if hero is lvl 10+. The hero will provide this resource every day
**   until player interferes again. Choose none to reactivate weekly cycle.
**   If Mithril chosen, there's a random factor whether player gets Mithril or
**   the weekday's resource, modified by hero's current luck. Player will always
**   get Mithril on sundays (or the 350 gold if Mithril disabled)
**
** - Heroes' normal resource specialties are not affected by this script.
**
** IDEAS to improve this script
** - if possible to change skill pic, display last or chosen resource pic there
** - or once the "choose from many pictures" dialogue is available, use it to
**   replace the successive msgboxes for resource selection
**
** USES hero var w47 (resource choice)
**      FU(WOG_191_ShowEstatesSkillDlg)-FU2344
** calls library fcts FU(WOG_Hero_GetLuckLevel) (luck), FU(WOG_GetSkillInfoByClick) (skill click)
** uses flag 236, uses v2333 (modifier for ExpEst gold/day), v2334 (lvl 10 msg status)
** temp uses vars (v2331,v2332)
** ONLY ACTIVE if i^wog_191_enabled^=1 (wogify option 191)

;  resource (Wood+Ore|Mercury|Sulphur|Crystal|Gem|350 Gold)  Mithril   cycling
;    w47  =      1       2       3       4     5     6         (7)        8
;                9      10      11      12    13    14         15      
;
; 0 = nothing, 7 = (Mithril, but unused), 17+ not used
; 8 = cycling: automatically from lvl 10 on, each weekday gets corrspondant resource, unless chosen manually
; 9..14 = 1 Wood/Ore .. 1 Gem each day (chosen)
;    15 = 1 Mithril each day was chosen, but if you get it depends on random factor, modified by hero's current luck
;    16 = Mithril chosen, but unlucky that day (give weekday resource then if Estates) => always 1 Mithril on sunday
;
;  following are statistics about Mithril threshold
;  r9 means random 0..9 (exception here: will be random -1..8 if luck is 0, so 0 luck is treated as 1 luck)
;
;  luck    -1    0    1    2    3    4    5    6    7    8    9   10
;  r9<luck  0   10   10   20   30   40   50   60   70   80   90  100  % each day (10% base, 100% max)
;  Mithril  1    1    1    1    1    1    1    1    1    1    1    7   worst/week
;  Mithril  1   1.6  1.6  2.2  2.8  3.4   4   4.6  5.2  5.8  6.4   7   avg/week
;  Mithril  1    7    7    7    7    7    7    7    7    7    7    7   best/week

; To-do: Hide everything about Mithril if Mithril is not enabled in the game


!#VRv2333&i^wog_191_enabled^=1:S100; set daily additional Expert Estates gold per 100,000 experience (adv=half, basic=quarter), may be modified by map maker, e.g. =0 if only resource bonus

  DAILY ADDED RESOURCES FOR ESTATES HEROES (or heroes with manually ERM set w47)

;   check w47 for resources/day irrespective of Estates,
;   only take Estates into account when *changing* w47

!?FU(WOG_OnHeroGetGoldIncome);
!!UN:Cx1/(STRUCT_HOOK_CONTEXT_ECX)/1/?(skillLvl:y);
!!VR(offset:y):S(skillLvl) *(SIZEOF_INT);
!!UN:C6547992/(offset:y)/4/?(gold:y);
!!if&(skillLvl);
  !!UN:Cx1/(STRUCT_HOOK_CONTEXT_ESI)/4/?(hero:y) C(hero)/26/4/?(heroId:y);


  !!HE(heroId):X?(specType:y)/?(specSkill:y); better use this way so far as game uses __int64 (rax => eax+ [ebp-8])
  
  !!if&(specType)=0/(specSkill)=(SKILL_ESTATES);
    !!HE(heroId):E?(exp:y)/?(level:y)/1;
    !!VR(specGold:y):S(gold) *(level) *5 :100;
    !!VR(gold):+(specGold);
  !!en;

  !!if&i^wog_estates_ignore_native_calculation^=0; [Adds bonus from scripts]

    !!if&i^wog_203_enabled^;              [Estates I]
      !!FU(WOG_203_Hero_GetEstatesIBonus):P(heroId)/(skillLvl)/?(result:y); [if hero has estates, is in use and it's that hero's owner's turn, continue in function 7005 - if enabled]
      !!VR(gold):+(result);
    !!en;

    !!if&i^wog_191_enabled^;              [Estates II]
      !!FU(WOG_191_Hero_GetEstatesIIBonus):P(heroId)/(skillLvl)/?(result);
      !!VR(gold):+(result);
    !!en;
  !!en;
!!en;

!!UN:Cx1/(STRUCT_HOOK_CONTEXT_EAX)/4/(gold:y);
!!SN:X?t/0;
!!UN:Cx1/(STRUCT_HOOK_CONTEXT_RET)/4/5129831; // now return directly to the +350 gold

!?FU(WOG_203_Hero_GetEstatesIBonus);    [Estates I]
!#VA(heroId:x) (skillLvl:x) (result:x);

!!HE(heroId):E?(exp:y)/?l/1;
!!VR(result):S(skillLvl) *5 *l;

!?FU(WOG_191_Hero_GetEstatesIIBonus);   [Estates II]
!#VA(heroId:x) (skillLvl:x) (result:x);

!!VR(result):S0;
!!HE(heroId):E?(exp:y)/?(level:y)/1;

!!if&(level)>=1;
  !!HE(heroId):X?(type:y)/?(subtype:y)/d/d/d/d/d;;

  ; Restrain the gold gained (2000/5000 depending on whether the hero is a Estate Specialist)
  !!if&(type)=0/(subtype)=(SKILL_ESTATES);
    !!VR(maxGold:y):S5000;
  !!el;
    !!VR(maxGold:y):S2000;
  !!en;

  !!VR(divisor:y):S(skillLvl) -3 *-1; // divide gold depending on skill lvl /by 4/by 2 / by 1
  !!VR(result):S(exp) *v2333 :100000 Sd>>(divisor);
  !!VR(result)&(result)<0:S(maxGold);   [If the value become negative (due to super high level), set the addtional gold to the max value]
  !!VR(result):F0/(maxGold);

  ; Manage daily gold bonus from selection (level 10+ only)
  !!if&(level)>=10;
    !!IF:W(heroId);
    !!VR(result)&w47=14:+350;
  !!en;
!!en;

; Initialise w-var
!?FU(WOG_OnResetHero)&i^wog_191_enabled^;
!#VA(hero:x);

!!IF:W(hero);
!!VRw47:S0;

!?FU(OnEveryDay)&i^wog_191_enabled^;                       daily timer for every color (if script active)
; init lvl 10 msg status at first day
!!if&i^timerDay^=1;
  !!VRv2334&i^timerOnce^:S0;
; Add bonuses from the second day
!!el;
  !!OW:H(CURRENT_PLAYER)/2331/0;                       store current color's number of heroes in v2331
  !!DO2343/1/v2331/1:P;                  loop through every hero a player has
!!en;

!?FU2343;                            hero loop function for Estates
!#VA(usedY[20]:y);

!!OW:H(CURRENT_PLAYER)/2332/x16;                     store x16th hero of that player in v2332
!!IF:V236/1 Wv2332;                    set w var reference to current hero, set flag 236
!!HEv2332:S(SKILL_ESTATES)/?(estatesLvl:y) E?(exp:y)/?(heroLvl:y)/1 X?y14/?y13/d/d/d/d/d; get Estates expertise (estatesLvl), hero experience (exp) and level (heroLvl), hero skill spec (y14=0 and y13=(SKILL_ESTATES) if Estates)
!!FU&(estatesLvl)=0/w47=0:E;                     exit if that hero has no Estates and no w47

*!VRy10:S1;                            full modifier for Expert Estates and in general to avoid division by zero
*!VRy10&(estatesLvl)=2:S2;                       half for Advanced Estates
*!VRy10&(estatesLvl)=1:S4;                       quarter for Basic Estates
*!VRy4&(estatesLvl)>0:S(exp) :100000 *v2333 :y10;    calculate gold according to expertise and experience
*!VRy4&y4>2000/y13<>(SKILL_ESTATES):S2000;          max of +2000 Gold/day (from lvl 25 on) unless Estates specialist
*!VRy4&y4>5000:S5000;                  max of +5000 Gold/day (around lvl 30) even if Estates specialist
*!OW&(estatesLvl)>0:R-1/6/dy4;                   give/remove that gold
*!OW&(estatesLvl)>0:R-1/6/?y17;                  check current treasure (player's current gold)
*!OW&(estatesLvl)>0/y17<0:R-1/6/0;               no negative treasure allowed

  change w47 state automatically (init w47 for lvl 1..9 or change w47 for lvl 10+ or reset unlucky Mithril)
*!VRw47&(estatesLvl)=0:S0;                       (if no Estates then reset w47 because hero may have unlearned Estates)
!!VRw47&w47=0/(estatesLvl)>(SKILL_NOT_LEARNED)/(heroLvl)<10:R0/1/6;       lvl 1..9 inits w47 with random 1..6, meaning +1 (Wood+Ore|Mercury|Sulfur|Crystal|Gem|350 Gold)

*!VRw47&w47<8/y13=(SKILL_ESTATES)/y14=0:S8;         Estates specialty allows cycling/choosing from the beginning
!!VRw47&w47<8/y13=(SKILL_ESTATES)/y14=0:+8;         Estates specialty sets random resource to daily (even for low-level), Expert allows choosing as if lvl10+

!!VRy5:S41 +(estatesLvl);                        set correct Estates pic for msg below
!!VRy6:S(NO_PIC_TYPE);                 init pic to none
!!VRy6&(estatesLvl)=(SKILL_EXPERT)/(heroLvl)>=10/i^wog_36_enabled^:S(PIC_TYPE_RES_MITHRIL);           set Mithril pic if Expert Estates and lvl10+ and Mithril active

!!VR(playerBit:y):S1 Sd<<i^timerOwner^;
!!VRy12:Sv2334 &(playerBit);

!!IF:V236/(TRUE);

!!if&(ERM_FLAG_IS_HUMAN);
  !!VRz-1:S^^;
  !!VRz-1&i^wog_36_enabled^:Sz164014;              Mithril selection line added to lvl 10 msg if Mithril active
  !!IF&w47<8/(estatesLvl)>(SKILL_NOT_LEARNED)/(heroLvl)>=10/y12=0:Q236/(PIC_TYPE_SEC_SKILL)/y5/y6/0/(MSG_TYPE_QUESTION)/z164015; human only msg once hero has reached lvl 10
!!en;

!!VRv2334&-236:|(playerBit);                   that color won't receive the message any more if Cancel was clicked

!!VRy11&w47<8/(estatesLvl)>(SKILL_NOT_LEARNED)/(heroLvl)>=10:S1;            indicator: no cycling/choice yet, Estates present, lvl 10+

!!if&y11=1;
  !!VRw47:S8;                      init w47 resource cycling
  !!VRw47&(estatesLvl)=(SKILL_EXPERT)/i^wog_36_enabled^:S15;        init w47 Mithril cycling if Mithril script active and Exp Estates and lvl10+
!!en;

!!VRw47&w47>15:S15;                    reset w47 Mithril choice unlucky flag (from the day before)

  prepare resources according to w47 state
!!VR(res:y):S0;                             init resource var (res)
!!VR(res)&w47>0/w47<8/(heroLvl)>=i^timerWeekDay^:Sw47; lvl<10, check for weekday if to give resource type w47 at all that day - Archer30: why do we check (heroLvl)>=i^timerWeekDay^ here??
!!VR(res)&w47=8:Si^timerWeekDay^;               lvl 10+  cycling, give respective weekday resource
!!VR(res)&w47>8/w47<15:Sw47 -8;           lvl 10+  give chosen resource type (w47 -8)

!!if&w47=15;
  !!FU(WOG_Hero_GetLuckLevel):Pv2332/0/?(luck:y);           Mithril section: check current luck for that hero
  !!VR(luck):F1/(INT_MAX);
  !!VR(random:y):R0/0/10;

  !!if&(random)<=(luck);
    !!VR(res):S(RES_MITHRIL);                 .. set (res) to Mithril if successful
  !!el;
    !!VR(res)&(estatesLvl)>(SKILL_NOT_LEARNED):Si^timerWeekDay^;    .. set (res) to weekday if unsuccessful but Estates
  !!en;
!!en;

  give resources according to above conditions
!!OW&(res)=1:R(CURRENT_PLAYER)/(RES_WOOD)/d1 R(CURRENT_PLAYER)/(RES_ORE)/d1;           give 1 Wood and 1 Ore
!!OW&(res)=2:R(CURRENT_PLAYER)/(RES_MERCURY)/d1;                    give 1 Mercury
!!OW&(res)>2/(res)<6:R(CURRENT_PLAYER)/(res)/d1;              give 1 Sulphur, Crystal or Gem

!!OW&(res)=6/w47<>14:R(CURRENT_PLAYER)/(res)/d350;         give 350 Gold - partially managed in FU(WOG_191_Hero_GetEstatesIIBonus)

!!if&(res)=7;
  !!if&i^wog_36_enabled^;
    !!VR(res):S(RES_MITHRIL);
    !!OW:R(CURRENT_PLAYER)/(res)/d1; [give 1 Mithril if active]
  !!el;
    !!VR(res):S(RES_GOLD);
    !!OW:R(CURRENT_PLAYER)/(res)/d350; [give 350 Gold if Mithril inactive (weekday cycle reached sunday)]
  !!en;
!!en;

!!VRi^wog_191_dailyResPlusOne_%v2332^:S(res) +1;  [global var to show resource got today]

    --------------------

  HERO SCREEN CLICK

!?FU(OnHeroScreenMouseClick)|i^mouse_action^=(MOUSE_LMB_PRESSED)/i^mouse_action^=(MOUSE_RMB_PRESSED);

  !!if|i^wog_191_enabled^=1/i^wog_193_enabled^=1; [estates II option/ Warfare option]


    !!FU(WOG_GetSkillInfoByClick):Pi^mouse_item^/-1/?(skill:y)/?(skillArea:y); [call skill click function (in: click number and hero number, out: skill (y-3), area (y-4) and slot (y-5))]


    !!if&(skill)=(SKILL_ESTATES)/i^wog_191_enabled^=1;
      !!UN:P75/?(shortDescr:y);         [check if Short Skill descriptions (script75.erm, Hermann the Weird) is enabled]
      ; 203 - Estates I
      !!if&i^wog_203_enabled^=(FALSE)/(shortDescr)=(FALSE); [if clicked skill was Estates, disable standard skill click reaction]         [NOTE to get std Estates descr on name click: y-1<87 instead of y-1<103]                                                              
        !!FU(WOG_191_ShowEstatesSkillDlg):P(skillArea)/i^mouse_action^; [.. and call enhEstates display function (in: skill area, left/right-click)  [NOTE to get std Estates descr on name click: add /y-1<87]

      !!el&(skillArea)=1;               [same but for Estates I or short skill descr, then only a click on skill icons will trigger the below msgboxes]                                                              
        !!FU(WOG_191_ShowEstatesSkillDlg):P(skillArea)/i^mouse_action^; [.. same but for Estates I or short skill descr]
      !!en;

    !!en;

    !!if|(skill)=(SKILL_BALLISTICS)/(skill)=(SKILL_ARTILLERY)/(skill)=(SKILL_FIRST_AID);
      !!if&i^wog_193_enabled^=1/(skillArea)=1;
        !!CM:R0;
        !!FU(WOG_44_Msg_SkillView):P(skillArea)/i^mouse_action^/(skill); [.. and call Warfare display function (in: skill area, left/right-click, skill)]
      !!en;
    !!en;

  !!en;

  ENHANCED ESTATES DISPLAY FUNCTION

!?FU(WOG_191_ShowEstatesSkillDlg);                            display function
!#VA(skillArea:x) (mouseAction:x);
;   x1 = skill area (= 1 if icon, = 2 if name, = 3 if expertise clicked)
;   x2 = click type (= 12 left click, = 14 right click)

!!CM:R0;

!!VR(msgType:y):S(mouseAction) -10;                      if left-click  then init y16:=2 (OK/Cancel buttons)
!!HE(CURRENT_HERO):N?(hero:y);
!!IF:W(hero);                              set w var reference to current hero
!!HE(hero):S(SKILL_ESTATES)/?(skillLvl:y) E?(heroExp:y)/?(heroLvl:y)/1 X?(specType:y)/?(specSkill:y)/d/d/d/d/d; get Estates expertise (y1), hero experience (y2) and level (y3), skill specialty (y20=0 and y19=13 is Estates)
!!FU&(skillLvl)<=(SKILL_NOT_LEARNED):E;

!!VRw47&w47=0/(heroLvl)<10:S1 R5;               init w47 with random 1..6 for lvl 1..9 and no init
!!VRw47&w47<8/(heroLvl)>=10:S8;                 init w47 with cycling (no lvl 10 msg displayed then)

!!VR(stringNum:y):S164015 +i^timerWeekDay^;
!!VRz-3:Sz(stringNum);

!!HE(CURRENT_HERO):O?(owner:y);

!!if|-999/(owner)<>i^timerOwner^;
  !!VR(msgType)&(mouseAction)=(MOUSE_LMB_PRESSED):S(MSG_TYPE_MES);            lvl 1..9 left-click has OK button only
  !!FU(WOG_191_SetUpGeneralResourcesText):P(heroLvl)/?z-1; [Set up z-1]

!!el;
  !!if&w47<8;
    !!VR(msgType)&(mouseAction)=(MOUSE_LMB_PRESSED):S(MSG_TYPE_MES);            lvl 1..9 left-click has OK button only
    !!FU(WOG_191_SetUpGeneralResourcesText):P(heroLvl)/?z-1; [Set up z-1]

  !!el&w47=8;
    ; LMB
    !!if&(mouseAction)=(MOUSE_LMB_PRESSED);

      !!if&(skillLvl)<(SKILL_EXPERT);
        !!VR(msgType):S(MSG_TYPE_MES);           lvl 10+ cycling left-click Bas/Adv Estates OK button only
        !!VRz-1:Sz164026;     lvl 10+ cycling left-click Bas/Adv Estates
      !!el;
        !!VRz-1:Sz164027;     lvl 10+ cycling left-click Expert Estates
      !!en;
    ; RMB
    !!el;
      !!VRz-1:Sz164028;          lvl 10+ cycling right-click
    !!en;

  !!el&w47>8/w47<=14;
    !!VRz-1&(mouseAction)=(MOUSE_LMB_PRESSED):Sz164029;   lvl 10+ chosen left-click
    !!VRz-1&(mouseAction)=(MOUSE_RMB_PRESSED):Sz164030;   lvl 10+ chosen right-click

  ; lvl 10+ and Mithril chosen
  !!el&w47>14;
    !!FU(WOG_Hero_GetLuckLevel):P(CURRENT_HERO)/0/?(luckBonus:y);             check current luck of current hero
    !!VR(chance:y):S(luckBonus) *10;                      set daily chance

    !!if&(chance)>100;
      !!VR(chance):S100;                  [set daily chance 100% max if luck 10+]
    !!el&(chance)=0;
      !!VR(chance):S10;                   [set daily chance 10% if zero luck]
    !!el&(chance)<0;
      !!VR(chance):S0;                    [set daily chance 0% if negative luck]
    !!en;

    !!VRv2:S(chance);                     [legacy]
    !!VRv3:S(luckBonus);
    !!VRz-1&(mouseAction)=(MOUSE_LMB_PRESSED):Sz164031;         lvl 10+ Mithril chosen left-click
    !!VRz-1&(mouseAction)=(MOUSE_RMB_PRESSED):Sz164032;         lvl 10+ Mithril chosen right-click
  !!en;
!!en;

; calculate correct resource pics
!!VR(pic:y):S(PIC_TYPE_SEC_SKILL);                           set first pic as skill pic
!!VR(picSub:y):S41 +(skillLvl);                       calculate correct Estates pic (according to expertise)

!!VR(resource:y)&w47<8:Sw47;                    set resource display for lvl 1..9
!!VR(resource)&w47=8:Si^timerWeekDay^;       if cycling (=8), or unlucky Mithril (=16), set pic to weekday resource
!!VR(resource)&w47>8/w47<15:Sw47 -8;          set resource display for lvl 10+ chosen

!!if&w47=15;
  !!if&i^wog_191_dailyResPlusOne_%(hero)^;
    !!VR(resource):Si^wog_191_dailyResPlusOne_%(hero)^ -1; [Show resource got today]
  !!el;
    !!VR(resource):S(NO_PIC_TYPE);
  !!en;
!!en;

!!if&(resource)=1;
  !!VR(pic):S(RES_WOOD);                      if Wood/Ore then set first pic to Wood instead of Estates
  !!VR(picSub):S1;                      .. set Wood amount
  !!VR(resource):S(RES_ORE);                      .. set Ore  
!!en;

!!VR(resource)&(resource)=2/(picSub)>1:S(RES_MERCURY);                set Mercury resource
!!VR(resource)&(resource)=(RES_MITHRIL)/i^wog_36_enabled^<>(TRUE):S(RES_GOLD);              set gold resource instead of Mithril if Mithril script disabled (needed for weekday=sunday)
!!VR(resourceNum:y):S1;                            resource amount
!!VR(resourceNum)&(resource)=(RES_GOLD):S350;                    gold amount 350 instead of 1
!!VR(resourceNum)&w47=15/i^wog_191_dailyResPlusOne_%(hero)^=0:S(NO_PIC_TYPE);

!!VRi^wog_estates_ignore_native_calculation^:S(TRUE);
!!HE(CURRENT_HERO):Z?(hero:y);
!!SN:E5129728/(CALLCONV_THISCALL)/(hero); Hero::GetEstatesPower;  
!!VR(baseBonus:y):Sv1;
!!VRi^wog_estates_ignore_native_calculation^:S(FALSE);

; calculate correct additional amount of gold text (dep on hero experience and Estates Expertise) [%gold, %x and %y]
!!VR(goldBonus:y):S(baseBonus);

; Add up Estates I bonus
!!VRz-4:S^^;

!!if&i^wog_203_enabled^;
  !!FU(WOG_203_Hero_GetEstatesIBonus):P(CURRENT_HERO)/(skillLvl)/?(estatesIBonus:y);
  !!VR(goldBonus):+(estatesIBonus);                   total if Estates I also active
  !!VRz-4:S^ + %(estatesIBonus) (%T(wog.191.estates)I)^;              if Estates I active
!!en;
; Add up Estates II bonus
!!FU(WOG_191_Hero_GetEstatesIIBonus):P(CURRENT_HERO)/(skillLvl)/?(estatesIIBonus:y);
!!VR(goldBonus):+(estatesIIBonus);

; finally display msgbox (incl z var, pics and button state from above)
!!VRz-4:+^ + %(estatesIIBonus) (%T(wog.191.estates)II)^;
!!VR(skillLvlMinusOne:y):S(skillLvl) -1;
!!FU(GetTextFileString):P^skilllev^/(skillLvlMinusOne)/?z-2;
!!SN:T^wog.191.dlg^/?z2/^level^/z-2/^gold^/(goldBonus)/^base^/(baseBonus)/^bonus^/z-4/^end^/z-1;
!!IF:Q1/(pic)/(picSub)/(resource)/(resourceNum)/(msgType)/z2; main display

!!if&-1/(skillLvl)>=(SKILL_EXPERT)/(msgType)=(MSG_TYPE_QUESTION);
  !!VR(lastRes:y):S(RES_LAST_SOD);
  !!VR(lastRes)&i^wog_36_enabled^:S(RES_LAST_WOG);
  !!FU(NewIntArray):P?(resPicsList:y);
  
  !!re i/(PIC_TYPE_RES_MERCURY)/(lastRes); [Wood and Ores are merged into one option]
    ; Swap the place of Mercury and Wood/Ores
    !!VR(resType:y):Si;

    ; Randomly pick one picture for Wood/Ores
    !!if&i=(PIC_TYPE_RES_MERCURY);
      !#VA(normalResList[2]:y);

      !!VR(normalResList):C(PIC_TYPE_RES_WOOD)/(PIC_TYPE_RES_ORE);
      !!VR(random:y):T0/0/1;
      !!VR(resType):S(normalResList[random]);

    !!el&i=(PIC_TYPE_RES_ORE);
      !!VR(resType):S(PIC_TYPE_RES_MERCURY);
    !!en;

    ; Declare the number of resources depending on resoruces type
    !!if&(resType)=(PIC_TYPE_RES_GOLD);
      !!VR(resNum:y):S350;
    !!el;
      !!VR(resNum):S1;
    !!en;

    !!FU(Array_Push):P(resPicsList)/(resType)/(resNum);
  !!en;

  ; Show the dlg
  !!FU(PrepareMultiPicDialog):P(resPicsList);
  !!IF:N(MSG_TYPE_CHOOSE_PIC_OR_CANCEL)/z164038/?(choice:y);

  !!if&(choice)>-1;
    !!VRw47:S(choice) +9;
  !!el;
    !!VRw47:S8;            set w47=8 (cycling) if rejected
  !!en;
!!en;

lvl 10+ and cycling

#1: flag
#2: type pic 1    (=20 for secondary skill)
#3: subtype pic 1 (=skill incl expertise, here =41+EstatesExpertise)
#4: type pic 2    (=1..7 for resource, -1 for none)
#5: subtype pic 2 (=amount resource, 350 if gold (resource=6), else 1)
#6: type message  (=1 OK button, =2 OK/Cancel buttons, =4 no button)

!?FU(WOG_191_SetUpGeneralResourcesText);
!#VA(heroLvl:x) (str:x);

!!if&(heroLvl)<=1;
  !!VR(str):Zz164023;       lvl 1 text
!!el&(heroLvl)>1/(heroLvl)<=6;
  !!VRv2:S(heroLvl);                  [Legacy]
  !!VR(str):Zz164024;  lvl 2..6 text
!!el;
  !!VR(str):Zz164025; lvl 7..9 text
!!en;



******************************************************************************************

** FIRST AID ENHANCED (2004 September 19)                     (for WoG v3.58)
** by Tobyn
**
** This script greatly enhances First Aid skill and hero specialty.
** - First Aid skill summons and gives control over additional First Aid
**   Tents (# of tents = hero level).
**   The one warmachine Tent and Hierophant Commander Tents are added.
** - Casts a Cure spell each healing, based on First Aid expertise (Expert
**   First Aid will give Mass Cure) and spellpower equal to number of tents.
**   Tent Healing Cursor upon two-hex-creatures gives Cure only if the left
**   hex (position) is targetted, the right hex only gives standard healing.
** - First Aid Specialty gives 2 Tents per hero level and temporary knowledge
**   of three spells during that combat (Cure, Animate Dead and Resurrection)
**   First Aid Specialty will also restore First Aid Tent Warmachine *if*
**   hero had one before battle began, even if it was destroyed in battle.
** - If Enhanced Warmachines II is eanbled, the additional tents would be
**   reduced to 2. One for learning First Aid and one for First Aid specialty.
**
** uses vars v2301..23
** ONLY ACTIVE if i^wog_190_enabled^ (wogify option 190)


  INIT SKILL DESCRIPTION moved to script75.erm (skill descriptions)

  BATTLE AFFAIRS BELOW

  v2301=hero level, v2302=spellpower, v2303=1 if specialty, v2304=First Aid expertise,
  v2305=1 if Tent warmachine present, v2306 amount of warmachine/Hierophant Tents
  v2307=Cure, v2308=Resurrection and v2309=Animate Dead (=1 each if known by hero)
  v2311..v2319 same for defender (if present)


  BEFORE BATTLE

!?FU(OnBeforeBattleUniversal)&i^wog_190_enabled^; [start combat trigger for both sides (if script active)]
!!VRv2301:C0/0/0/0/0/0/0/0/0/0/0;       [init v2301..11]
!!VRv2312:C0/0/0/0/0/0/0/0/0/0/0/0;     [init v2312..23]
!!HEi^battle_hero_0^:Ed/?v2301/1 S(SKILL_FIRST_AID)/?v2304 A2/6/?v2305/d M37/?v2307 M38/?v2308 M39/?v2309;
!!HEi^battle_hero_1^&i^battle_hero_1^>(NO_HERO):Ed/?v2311/1 S(SKILL_FIRST_AID)/?v2314 A2/6/?v2315/d M37/?v2317 M38/?v2318 M39/?v2319;

; Compatibility with Enhanced Warmachines II, reduce the additional tents to 1 ~ 2
!!if&i^wog_55_enabled^;
  !!VRv2301:S1;
  !!VRv2311&i^battle_hero_1^>(NO_HERO):S1;
; Tents = 1/4 hero level + 1 if Enhanced Warmachines II is disabled
!!el;
  !!VRv2301::4 +1;
  !!VRv2311&i^battle_hero_1^>(NO_HERO)::4 +1;
!!en;

  First Aid Specialty
!!HEi^battle_hero_0^:X?y-1/?y-2/d/d/d/d/d;                     [get Attacker skill specialty]
!!VRv2303&y-1=0/y-2=27:S1;                                     [set indicator if First Aid spec]
!!HEi^battle_hero_0^&v2303=1:M37/1;                            [hero temp gets Cure spell during battle if specialist (even w/o First Aid skill)]
!!HEi^battle_hero_0^&v2303=1/v2304>1:M38/1;                    [hero temp gets Animate Dead if Advanced or Expert specialist]
!!HEi^battle_hero_0^&v2303=1/v2304>2:M39/1;                    [hero temp gets Resurrection if Expert specialist]
!!VRv2301&v2303=1:*2;                                          [specialty gives 2 Tents per hero level]
!!HEi^battle_hero_1^&i^battle_hero_1^>-1:X?y-3/?y-4/d/d/d/d/d; [get Defender skill specialty]
!!VRv2313&i^battle_hero_1^>-1/y-3=0/y-4=27:S1;                 [set indicator if First Aid spec]
!!HEi^battle_hero_1^&v2313=1:M37/1;                            [temp Cure spell during battle]
!!HEi^battle_hero_1^&v2313=1/v2314>1:M38/1;                    [temp Animate Dead if Advanced or Expert]
!!HEi^battle_hero_1^&v2313=1/v2314>2:M39/1;                    [temp Resurrection if Expert]
!!VRv2311&v2313=1:*2;                                          [specialty gives 2 Tents per hero level]


  IN BATTLE (summon Tents and apply Cure spell)

!?FU(OnSetupBattlefield)&i^wog_190_enabled^/i^wog_isCBBattle^=(FALSE); [start battlefield trigger (if script active)]

!!if&v2304>(SKILL_NOT_LEARNED);
  !!BU:E153/?(tentStack:y);                     [check if attacker already has tents]

  !!if&(tentStack:y)>(NO_STACK);
    !!BM(tentStack:y):Ndv2301 Bdv2301;                  [add Tents for attacker]
  !!el;
    !!BU:S(MON_FIRST_AID_TENT)/v2301/153/(BATTLE_LEFT)/-1/0; [summons Tents for attacker]
  !!en;
!!en;

!!if&v2314>(SKILL_NOT_LEARNED);
  !!BU:E168/?(tentStack:y);                     [check if defender already has tents]

  !!if&(tentStack:y)>(NO_STACK);
    !!BM(tentStack:y):Ndv2311 Bdv2311;                  [add Tents for defender]
  !!el;
    !!BU:S(MON_FIRST_AID_TENT)/v2311/168/(BATTLE_RIGHT)/-1/0; [summons Tents for defender]
  !!en;
!!en;

!?FU(OnBeforeBattleAction)&i^wog_190_enabled^; [battleground action (useable by both sides) (if script active)]
!!BG:A?(action:y);                      [get current action (wait for Tent Healing)]

!!if&(action)=(BATTLE_ACTION_TENT_HEAL);
  !!BG:N?(tentStack:y) D?(healPos:y) Q?(side:y); [get Tent number, destination position, owner]

  !!BU:E(healPos)/?(stack:y);
  !!if&(stack)>=(BATTLE_STACK_FIRST);
    !!BM(stack):P?(stackPos:y);
    !!BM(tentStack):N?(tents:y);          [get current amount of Tents]
    !!BM(tentStack)&(side)=(BATTLE_LEFT)/v2304>(SKILL_NOT_LEARNED):C(SPELL_CURE)/(stackPos)/v2304/(tents)/1; [cast Cure on destination (left side)]
    !!BM(tentStack)&(side)=(BATTLE_RIGHT)/v2314>(SKILL_NOT_LEARNED):C(SPELL_CURE)/(stackPos)/v2314/(tents)/1; [cast Cure on destination (right side)]

  !!en;

!!en;


  AFTER BATTLE (restore values given by First Aid Specialty)

!?FU(OnAfterBattleAction)&i^wog_190_enabled^; [post-action trigger, if script active]
!!BU:C?(battleEnded:y);                 [check if combat has ended this turn]
!!FU&(battleEnded)<>(TRUE):E;           [exit if it hasn't]

  attacker
!!HEi^battle_hero_0^&v2303=1/v2305>0:A1/(ART_FIRST_AID_TENT)/15; [restore Tent if given and hero specialty]
!!HEi^battle_hero_0^:M37/v2307 M38/v2308 M39/v2309; [remove Cure, Res, AnDead spells if only given by Specialty]
  defender
!!HEi^battle_hero_1^&v2313=1/v2315>0:A1/(ART_FIRST_AID_TENT)/15; [restore Tent if given and hero specialty]
!!HEi^battle_hero_1^&i^battle_hero_1^>-1:M37/v2317 M38/v2318 M39/v2319; [remove Cure, Res, AnDead spells if only given by Specialty]

******************************************************************************************

** WARFARE (2004 September 19)                                (for WoG v3.58)
** by Tobyn
**
** This script combines the three war machine skills Artillery, Ballistics
** and First Aid and treats them as one skill. This new Warfare "skill"
** gives you control over all three War Machines and standard SoD abilities
** from all three skills.
**
** First Aid Tents get 750 HPs (only if no other First Aid enhancements active).
**
** Whenever a hero has one or more of the skills and a battle starts,
** the hero will get all three skills at the highest expertise available.
** Similar if clicked on any warfare skill in hero screen, but:
** - if clicked on icon of any Warfare skill, you get standard skill description
** - if clicked on text (name or expertise), you get another msgbox instead
**   (left-click lets you choose, right-click cycles the displayed Warfare skill)
**
** Hero might temporarily have diverging expertises in the three Warfare
** skills while on adventure map (e.g. via Witch Huts or through other ERM),
** but this and display will adjust with the next click, levelup or battle.
**
** NOTE:
** - side effect with Arstahd's Enhanced Commander Artifacts (give hero skills)
**   As soon as an artifact with one of the three skills is obtained, player may
**   get instant Expert Warfare with just a few mouse clicks and without further
**   need for the Artifact thereafter
**   (by toggling the Warfare skills while repeatedly equipping the artifact).
**   Three free Expert skills for just temporarily having one artifact equipped. WOW!
**   And you can always give it to another hero or to a commander afterwards...
**
** uses strings z237..239 for skill names
** ONLY ACTIVE if i^wog_193_enabled^=1 (wogify option 193)
!?FU(WOG_Hero_SSkillSet);

  !!UN:Cx1/(STRUCT_HOOK_CONTEXT_EBP)/4/?(ebp:y) C(ebp)/8/4/?(skillId:y);
  !!if|(skillId)=(SKILL_BALLISTICS)/(skillId)=(SKILL_ARTILLERY)/(skillId)=(SKILL_FIRST_AID);
    !!UN:Cx1/(STRUCT_HOOK_CONTEXT_ECX)/4/?(hero:y) C(hero)/26/4/?(heroId:y) C(ebp)/12/4/?(value:y);
    !!FU(WOG_193_GetWarfareMaxSkillLvl):P(heroId)/?(currentValue:y);
    !!IF:W(heroId);
    !!VRw48&w48=0:S(skillId);
    !!if&(currentValue);
      !!SN:X?t/0;
      !!UN:Cx1/(STRUCT_HOOK_CONTEXT_RET)/4/5121422;
    !!el;
      !!FU(WOG_193_SetWarfareMaxSkillLvl):P(heroId)/(value);
      !!FU(WOG_193_UpdateWarfareLevel):P(heroId)/w48;
    !!en;
  !!en;

!?FU(WOG_Hero_SSkillAdd);
  !!UN:Cx1/(STRUCT_HOOK_CONTEXT_EBP)/4/?(ebp:y) C(ebp)/8/4/?(skillId:y);
  !!if|(skillId)=(SKILL_BALLISTICS)/(skillId)=(SKILL_ARTILLERY)/(skillId)=(SKILL_FIRST_AID);

    !!UN:Cx1/(STRUCT_HOOK_CONTEXT_EAX)/1/?(eax:y); C(edx)/4/?(value:y);
    !!if&(eax);
      !!UN:Cx1/(STRUCT_HOOK_CONTEXT_ECX)/4/?(hero:y) C(hero)/26/4/?(heroId:y)  C(ebp)/12/4/?(value:y);
      !!VR(value):+(eax) F(SKILL_NOT_LEARNED)/(SKILL_EXPERT);
      !!FU(WOG_193_SetWarfareMaxSkillLvl):P(heroId)/(value);

      ;004E254F   lea     edx, [esi+ecx+0C9h];
      !!UN:Cx1/(STRUCT_HOOK_CONTEXT_ESI)/4/?(esi:y);
      !!VR(edxNativeValue:y):S(esi) +(hero) +201;  restore ptr
      !!UN:Cx1/(STRUCT_HOOK_CONTEXT_EDX)/4/(edxNativeValue);

      !!SN:X?t/0;
      !!UN:Cx1/(STRUCT_HOOK_CONTEXT_RET)/4/5121430;
    !!en;
  !!en;

!?FU(WOG_193_SetSkillToShow);
!#VA(heroId:x) (skillId:x);
!#VA(skills[3]:y);
!!VR(skills[0]):S(skillId);
!!FU(WOG_193_GetExludedSkills):P(skills[0])/?(skills[1])/?(skills[2]);
!!HE(heroId):Z?(hero:y);
!!VR(heroSkillsToShowPtr:y):S(hero) +229;
!!re i/1/2;
  !!UN:C(heroSkillsToShowPtr)/(skills[i])/1/?(position:y);
  !!if&(position);
    !!UN:C(heroSkillsToShowPtr)/(skills[0])/1/(position);
  !!en;
  !!UN:C(heroSkillsToShowPtr)/(skills[i])/1/0;
!!en;
*!IF:M^WOG_193_SetSkillToShow^;

!?FU(WOG_ERM_Hero_BeforeSkillAffection);
!!UN:P904/(TRUE);                       [Archer30: Temp solution for HE:S unknown error when setting a skill to NOT_LEARNED]

!!if&i^wog_193_HE_S_do_not_affect^=(FALSE)/i^wog_193_HE_S_Affection^=(NULL);
  !!UN:Cx1/(STRUCT_HOOK_CONTEXT_EBP)/4/?(ebp:y) C(ebp)/-84/4/?(skillId:y);

  !!if|(skillId)=(SKILL_BALLISTICS)/(skillId)=(SKILL_ARTILLERY)/(skillId)=(SKILL_FIRST_AID);
    !!VRi^wog_193_HE_S_Affection^:S(skillId);
    !!UN:C(ebp)/-896/4/?(hero:y) C(hero)/26/4/?(heroId:y);
    !!FU(WOG_193_SetSkillToShow):P(heroId)/(skillId);
    !!FU(WOG_193_GetWarfareSkillLvl):P(heroId:y)/(skillId)/?i^skillValue^;?(valueA:y);
  !!en;
!!en;
*!IF:M^WOG_ERM_Hero_BeforeSkillAffection^;

!?FU(WOG_ERM_Hero_AfterSkillAffection);
!!UN:P904/(FALSE);                      [Archer30: Temp solution for HE:S unknown error when setting a skill to NOT_LEARNED]

!!if&i^wog_193_HE_S_Affection^;
  !!VR(skillId:y):Si^wog_193_HE_S_Affection^;
  !!VRi^wog_193_HE_S_Affection^:S0;

  !!UN:Cx1/(STRUCT_HOOK_CONTEXT_EBP)/4/?(ebp:y) C(ebp)/-896/4/?(hero:y) C(hero)/26/4/?(heroId:y);
  !!FU(WOG_193_GetWarfareSkillLvl):P(heroId:y)/(skillId)/?(newValue:y);
  !!IF:W(heroId);

  !!if&(newValue)<>i^skillValue^;
    !!VRw48&w48=0:S(skillId);
    !!FU(WOG_193_SetWarfareMaxSkillLvl):P(heroId)/(newValue);(SKILL_NOT_LEARNED);
    !!FU(WOG_193_UpdateWarfareLevel):P(heroId)/w48;(skillId);
  !!el&w48;
    !!FU(WOG_193_SetSkillToShow):P(heroId)/w48;(skillId);
  !!en;
!!en;
*!IF:M^WOG_ERM_Hero_AfterSkillAffection^;


!?FU(OnHeroGainLevel)&i^wog_193_enabled^=1;
*!IF:M^OnHeroGainLevel^;

  !!HE(CURRENT_HERO):N?(heroId:y);
  !!FU(WOG_193_GetWarfareMaxSkillLvl):P(heroId)/?(value:y);
  !#VA(skills[3]:y);

  !!VR(skills[0]):C(SKILL_BALLISTICS)/(SKILL_ARTILLERY)/(SKILL_FIRST_AID);
  !!if&(value);
    !!IF:W(heroId:y);
    !!VR(skills[0]):Sw48;
  !!el;
    !!VRr:R0/0/2;
    !!VR(skills[0]):S(skills[r]);
  !!en;
  !!FU(WOG_193_GetExludedSkills):P(skills[0])/?(skills[1])/?(skills[2]);

  !!re i/0/2;
    !!FU(WOG_GameMgr_Skill_isBanned):P(skills[i])/?i^wog_193_skill_to_ban_state_%i^;
    !!VRi^wog_193_skill_to_ban_id_%i^:S(skills[i]);
  !!en;

  !!UN:C(GAME_MANAGER)/(UNC_INT)/?(gameMgr:y);
  !!VR(skillBanPtr:y):S(gameMgr) +321112;
  !!re i/1/2;(end_value);
    !!UN:C(skillBanPtr)/(skills[i])/(UNC_INT8)/(TRUE);[ban skill for lvl up]
  !!en;

!?FU(OnAfterHeroGainLevel)&i^wog_193_enabled^=1;
  !!UN:C(GAME_MANAGER)/(UNC_INT)/?(gameMgr:y);
  !!VR(skillBanPtr:y):S(gameMgr) +321112;
  !!re i/0/2;(end_value);
    !!UN:C(skillBanPtr)/i^wog_193_skill_to_ban_id_%i^/(UNC_INT8)/i^wog_193_skill_to_ban_state_%i^;
    !!SN:Wi^wog_193_skill_to_ban_id_%i^ Wi^wog_193_skill_to_ban_state_%i^;
  !!en;


5 d1
6 -?get

8 - set


!?FU(OnAfterErmInited)&i^wog_193_enabled^=1;      triggers for first active color on day 1 only (if script active)
;                                      (will trigger after script03.erm skill enhancement)
!!UN:P(WOG_OPT_ENHANCED_WAR_MACHINES_I)/?y-1;                         check if War Machines I is active (Overlord, script54, war machine levels)
!!UN:P(WOG_OPT_ENHANCED_WAR_MACHINES_II)/?y-2;                         check if War Machines II is active (Arstahd, script55, Tent mid-battle Resurrection)
!!UN:P(WOG_OPT_FIRST_AID_I)/?y-3;                        check if First Aid I is active (Arstahd, script48, Tent post-battle Resurrection)
!!UN:P(WOG_OPT_FIRST_AID_II)/?y-4;                        check if First Aid II is active (Tobyn, script64 see above, Tent Cure spell)
!!UN:P(WOG_OPT_ARTILLERY)/?y-5;                        check if Artillery I is active (Arstahd, script48, pre-battle damage)
!!UN:P(WOG_OPT_ENHANCED_WAR_MACHINES_III)/?y-6;

*!MA&y-1=0/y-2=0/y-3=0/y-4=0/y-6=0:P147/750; removed by angry @daemon_n all First Aid Tents will have 750 HPs (if neither First Aid skill nor the Tent war machine itself are enhanced)
!!VR(balName:z):Sz164039;
!!VR(balName)|y-1=1/y-2=1:S^{%(balName)}^;
!!VR(artName:z):Sz164040;
!!VR(artName)&y-5=1:S^{%(artName)}^;
!!VR(faName:z):Sz164041;
!!VR(faName)|y-1/y-3=1/y-4=1:S^{%(faName)}^;

!!VRz237:Sz164039;                     if no warfare relevant skills were enhanced
!!VRz238:Sz164040;                      .
!!VRz239:Sz164041; 


                     .
!!VRz237|y-1=1/y-2=1:Sz164042;         if Ballistics enhanced by script 54 or 55
!!VRz238|y-5=1:Sz164043;               if Artillery enhanced by script 48
!!VRz239|y-3=1/y-4=1:Sz164044;         if First Aid enhanced by script 48 or 64



!!SN:H^secskill^/(SKILL_BALLISTICS)/0/(balName) H^secskill^/(SKILL_ARTILLERY)/0/(artName) H^secskill^/(SKILL_FIRST_AID)/0/(faName);
*!UN:G0/10/0/237 G0/20/0/238 G0/27/0/239;  set skill names to Warfare
*!IF:M^%(balName)^;

  MANUALLY SET WARFARE MAIN SKILL


!?FU(WOG_44_Msg_SkillView);                            Warfare skill display and determination (x1=skill area, x2=click type, x3=skill)
!#VA(skillArea:x) (mouseAction:x) (skill:x);
!#VA(usedY[8]:y);
!!IF:W(CURRENT_HERO);                  set w var reference to current hero


!!if&(mouseAction)=(MOUSE_RMB_PRESSED);
  !!VR(msgType:y):S(MSG_TYPE_POPUP);
!!el;
  !!HE(CURRENT_HERO):O?o;
  !!OW:C?(currPlayer:y)/?(clickedPlayer:y);
  !!if&(clickedPlayer)=o;
    !!VR(msgType:y):S(MSG_TYPE_CHOOSE_PIC_OR_CANCEL);

  !!el;
    !!FU:E;
  !!en;
!!en;

!!VRy5:S0;                             init y5

*!FU(WOG_193_UpdateWarfareLevel):P-1/(skill)/y5;                    determine and set Warfare expertise (highest of all three skills) on current hero (-1)
!!HE-1:S(skill)/?(skillLvl:y);                        get Warfare expertise

!#VA(skills[3]:y);
!#VA(pics[3]:y);
!!VR(skills[0]):C(SKILL_BALLISTICS)/(SKILL_ARTILLERY)/(SKILL_FIRST_AID);

!!re i/0/(skills[SIZE])/1/-1;
  !!VR(pics[i]):S(skills[i]) *3 +2 +(skillLvl);
!!en;

!!UN:P75/?(wogOption:y); [check if Short Skill descriptions (script75.erm, Hermann the Weird) is enabled]

!!if&(wogOption);
  !!VRz1:Sz164045;       [msgbox text if short skill description (script75) active]
!!el;
  !!VRz1:Sz164046;       [if standard skill description (script75 inactive)]
!!en;

*!if&(skillArea)>1;
  !!FU(NewIntArray):P6/(PIC_TYPE_SEC_SKILL)/?(skillPicsArr:y);
  !!re i/0/(pics[SIZE])/1/-1;
    !!VR(picId:y):Si Sd<<1 +1;
    !!SN:M(skillPicsArr)/(picId)/(pics[i]);
  !!en;
  !!FU(PrepareMultiPicDialog):P(skillPicsArr);
  !!IF:N(msgType:y)/z1/?(answer:y);
  *!IF:M^%(answer)^;
  !!if&(answer)<>(DLG_RESULT_CANCEL);
    !!VRw48:S(skills[answer]);
    !!FU(WOG_193_UpdateWarfareLevel):P-1/(skills[answer]);              determine and set Warfare expertise (highest of all three skills) on current hero (-1)
    !!SN:D;                            redraw hero screen
  !!en;

*!en;

  SET WARFARE MAIN SKILL AND EXPERTISE
!?FU(WOG_193_GetWarfareSkillLvl);
!#VA(heroId:x) (skillId:x) (value:x);
!!HE(heroId):Z?(hero:y);
!!VR(heroSkillsValuesPtr:y):S(hero) +201;
!!UN:C(heroSkillsValuesPtr)/(skillId)/1/?(value);


!?FU(WOG_193_SetWarfareMaxSkillLvl);
!#VA(heroId:x) (value:x);
!!HE(heroId):Z?(hero:y);
!!VR(heroSkillsValuesPtr:y):S(hero) +201;
!!UN:C(heroSkillsValuesPtr)/(SKILL_BALLISTICS)/1/(value);
!!UN:C(heroSkillsValuesPtr)/(SKILL_FIRST_AID)/1/(value);
!!UN:C(heroSkillsValuesPtr)/(SKILL_ARTILLERY)/1/(value);
; Archer: Do we need to update HE:S (totoal skill count) value here? Maybe missing this is the reason of HE:S unknown error?

  GET WARFARE MAIN SKILL AND EXPERTISE
!?FU(WOG_193_GetWarfareMaxSkillLvl);
!#VA(heroId:x) (result:x) (ssNumber:x);
!#VA(levels[3]:y);

!!VR(result):S0;
!!VR(ssNumber):S0;
!!HE(heroId):Z?(hero:y);
!!VR(heroSkillsValuesPtr:y):S(hero) +201;
!!UN:C(heroSkillsValuesPtr)/(SKILL_BALLISTICS)/1/?(levels[0]);
!!UN:C(heroSkillsValuesPtr)/(SKILL_FIRST_AID)/1/?(levels[1]);
!!UN:C(heroSkillsValuesPtr)/(SKILL_ARTILLERY)/1/?(levels[2]);
!!re i/0/(levels[SIZE])/1/-1;
  !!if&(levels[i]);
    !!VR(ssNumber):+1;
    !!if&(levels[i])>(result);
      !!VR(result):S(levels[i]);
    !!en;
  !!en;
!!en;


!?FU(WOG_193_GetExludedSkills);
!#VA(skills[3]:x);
!!if&(skills[0])=(SKILL_FIRST_AID);
  !!VR(skills[1]):C(SKILL_BALLISTICS)/(SKILL_ARTILLERY);
!!el&(skills[0])=(SKILL_BALLISTICS);
  !!VR(skills[1]):C(SKILL_ARTILLERY)/(SKILL_FIRST_AID);
!!el&(skills[0])=(SKILL_ARTILLERY);
  !!VR(skills[1]):C(SKILL_BALLISTICS)/(SKILL_FIRST_AID);
!!en;
!?FU(WOG_193_UpdateWarfareLevel);                  set Warfare main skill and expertise (x1=hero, x2= w48 or clicked Warfare skill, x3=if cycling)
!#VA(heroId:x) (skillToSet:x);
!#VA(skills[3]:y);
!#VA(levels[3]:y);
!!FU(WOG_193_GetWarfareMaxSkillLvl):P(heroId:x)/?(max:y);
*!FU&(max:y)=0:E;

!!FU(WOG_193_SetWarfareMaxSkillLvl):P(heroId:x)/(max:y);

!!VR(skills[0]):S(skillToSet);
!!FU(WOG_193_GetExludedSkills):P(skills[0])/?(skills[1])/?(skills[2]);

!!HE(heroId):Z?(hero:y);

!!IF:W(heroId);
!!VR(heroSkillsToShowPtr:y):S(hero) +229;
*!FU(NewIntArray):P?(skillsToShow:y);

!!VR(counter:y):S0;

!!if&(max);
  !!re i/1/2;
    !!UN:C(heroSkillsToShowPtr)/(skills[i])/1/?(position:y);
    !!if&(position);
      !!UN:C(heroSkillsToShowPtr)/(skills[0])/1/(position);
      !!br;
    !!en;
  !!en;

!!el;
  !!VRw48:S0;
  !!UN:C(heroSkillsToShowPtr)/(skills[0])/1/0;
!!en;
!!UN:C(heroSkillsToShowPtr)/(skills[1])/1/0 C(heroSkillsToShowPtr)/(skills[2])/1/0;

*!FU:E;
!!UN:C7620583/1/?(maxToShow:y);                    // y6 - максимальное количество втор.навыков отображаемых в окне героя
!!VR(meetNoSkill:y):S(FALSE);


!!re i/1/(maxToShow:y);(SEC_SKILL_LAST);
  !!UN:C(heroSkillsToShowPtr)/i/1/?(skillSlotPosition:y);
  !!HE(heroId):Si/?(skillId:y)/1;
  !!if&(skillId:y)=(NO_SKILL);
    *!VRi:+1;
    !!re j/i/(maxToShow);
      !!HE(heroId):Sj/?(skillId:y)/1;
      !!if&(skillId)<>(NO_SKILL);
        !!VR(meetNoSkill:y):Sj -1;
        *!IF:M^%(meetNoSkill)^;

        !!br;
      !!en;
    !!en;

    !!if&(meetNoSkill);
      !!FU(NewIntArray):P?(skillsToShowArr:y);
      !!re j/(meetNoSkill)/(maxToShow);
        !!HE(heroId):Sj/?(skillId:y)/1;
        !!if&(skillId)<>(NO_SKILL);
          !!FU(Array_Push):P(skillsToShowArr)/(skillId);
        !!en;
      !!en;
      !!FU(Array_Push):P(skillsToShowArr);/(skills[1])/(skills[2]);
      !!SN:M(skillsToShowArr)/?(size:y);
      *!IF:M^%(meetNoSkill)^;
      *!HE
      !!re j/(meetNoSkill)/(maxToShow);
        !!VR(ind:y):Sj -(meetNoSkill);
        !!if&(ind:y)<(size);
          !!SN:M(skillsToShowArr)/(ind)/?(skillId);
          !!HE(heroId):Sj/(skillId)/1;
          !!VRf:S0;
          !!VR(heroSkillsValuesPtr:y):S(hero) +201;+(skillId);

          !!re i/0/(SEC_SKILL_LAST);
            !!UN:C(heroSkillsValuesPtr)/i/1/?(learned:y);
            !!VRf&(learned):+1;
          !!en;
          !!VRf:-2;
          !!HE(heroId):Sf;
          *!VR(skillId:y):S(NO_SKILL);
        !!en;
      !!en;
      *!UN:C(heroSkillsToShowPtr)/(skills[1])/1/0;
      *!UN:C(heroSkillsToShowPtr)/(skills[2])/1/0;
    !!en;
    !!br;
  !!en;
  *!IF:L^%i %(skillId:y)^;
!!en;

*!UN:C(hero)/257/4/?(skillss:y);
  *!IF&x1=(HERO_EDRIC):M^%(skillss) %(skills[1]) %(skills[2]) %w48^;

  TRIGGERS TO SET CORRECT EXPERTISE FOR THE OTHER TWO WARFARE SKILLS

!?FU(OnAfterErmInstructions)&i^wog_193_enabled^=1;

!!re i/0/(HERO_LAST_WOG);
  !!FU(WOG_193_GetWarfareMaxSkillLvl):Pi/?(level:y)/?(ssNumber:y);

  !!IF:Wi;                                                                        [set w var reference to current hero]
  !!if&(level:y);
    !!VRw48:S(SKILL_ARTILLERY);

    !!if&(ssNumber)>1;                                                            [if hero has several wf ss from start we need handle that]
      !!VRi^wog_193_HE_S_do_not_affect^:S(TRUE); 
      !!HEi:S(SKILL_BALLISTICS)/0 S(SKILL_FIRST_AID)/0 S(SKILL_ARTILLERY)/(level);
      !!VRi^wog_193_HE_S_do_not_affect^:S(FALSE); 
    !!en;

    !!FU(WOG_193_UpdateWarfareLevel):Pi/w48;                                      [update Warfare skill levels and displayed skill]

  !!el;
    !!VRw48:S0;
  !!en;

!!en;



************************************************************************************

** CONFLUX RAMPART MONSTER CHANGE (2004 September 19)         (for WoG v3.58)
** by Tobyn
** Rewritten by Archer30
**
** Rampart gives one Faerie Dragon instead of two Green Dragons per week
** Rampart gives one Diamond Dragon instead of two Gold Dragons per week
** Conflux gives 3 Firebirds/Phoenix instead of 4 per week (if Neutral Town script67 inactive)
**
** NOTE: Faerie Dragon resource will be *displayed* as Crystal, but it *is* Gems. [not anymore]
** Can't display different resources for upg and std in same hire dialogue box.
**
** BTW: how to change building cost without using \data\building.txt file?
**
** USES functions FU2334, var (v2324..2327), (flag 1)
** ONLY ACTIVE if i^wog_188_enabled^=1 or i^wog_189_enabled^=1 (wogify options 188 and 189)

!?FU(OnAfterErmInstructions)&i^wog_188_enabled^;
; Replace Green->FaerieDrag, Gold->DiaDrag
!!UN:T(TOWN_RAMPART)/(MON_MAX_LEVEL)/0/(MON_FAERIE_DRAGON) T(TOWN_RAMPART)/(MON_MAX_LEVEL)/1/(MON_DIAMOND_DRAGON);

; FaerieDrag neutral->Rampart
!!MA:O(MON_FAERIE_DRAGON)/(TOWN_RAMPART);

; GreenDrag still upgrades to GoldDrag at Hill Fort
!!MA:U(MON_GREEN_DRAGON)/(MON_GOLD_DRAGON);

; Faerie Dragons no longer cost Gems
!!MA:C(MON_FAERIE_DRAGON)/(RES_GEMS)/0;

; Adjust prices according to whether Enhanced Monsters is enabled
!!if&i^wog_50_enabled^;
  !!MA:C(MON_FAERIE_DRAGON)/(RES_CRYSTAL)/8;
!!el;
  !!MA:C(MON_FAERIE_DRAGON)/(RES_GOLD)/12000 C(MON_FAERIE_DRAGON)/(RES_CRYSTAL)/5;
  !!MA:C(MON_DIAMOND_DRAGON)/(RES_GOLD)/12000 C(MON_DIAMOND_DRAGON)/(RES_CRYSTAL)/5;

  ; Exchange Diamond Dragon and Faerie Dragon in hill forts if Enhanced Monster is not enabled
  !!MA:U(MON_DIAMOND_DRAGON)/(MON_FAERIE_DRAGON);
!!en;

; Exchange Diamond Dragon and Faerie Dragon in town if Upgraded Dragon Cliff is built
!?FU(OnDetermineMonInfoDlgUpgrade)&i^wog_188_enabled^/i^wog_50_enabled^<>(TRUE);
!#VA(monType:x) (upgType:x) (town:x) (hero:x);

!!if&(monType)=(MON_DIAMOND_DRAGON)/(upgType)=(NO_MON)/(town)>(NO_TOWN);
  !!CA0/(town):T?(townType:y);

  !!if&(townType)=(TOWN_RAMPART);
    !!CA0/(town):B3/43;
    !!VR(upgType)&1:S(MON_FAERIE_DRAGON);
  !!en;
!!en;

!?FU(OnEveryDay)&i^timerWeekday^=1/i^timerOnce^; 
; Loop though all the towns and give one extra Phoenix to towns with Castle Built
!!VR(x:y):S-1;

!!re i;
  !!UN:U(OBJ_TOWN)/(ANY_OBJ)/-1/(x)/(y:y)/(z:y);
  !!br&(x)<0;

  ; Check the town type and if Castle is built, reduce one if castle is built
  !!CA(x)/(y)/(z):T?(townType:y) B3/9;

  !!if&1;
    !!CA(x)/(y)/(z):B3/36;

    !!if&1;
      !!CA(x)/(y)/(z):B3/43;

      !!if&-1;
        !!if&(townType)=(TOWN_CONFLUX)/i^wog_189_enabled^;
          !!CA(x)/(y)/(z):M1/6/d-1/d;
        !!el&(townType)=(TOWN_RAMPART)/i^wog_188_enabled^;
          !!CA(x)/(y)/(z):M1/6/d-1/d;
        !!en;
      !!el;
        !!if&(townType)=(TOWN_CONFLUX)/i^wog_189_enabled^;
          !!CA(x)/(y)/(z):M1/6/d/d-1;
        !!el&(townType)=(TOWN_RAMPART)/i^wog_188_enabled^;
          !!CA(x)/(y)/(z):M1/6/d/d-1;
        !!en;
      !!en;
    !!en;
  !!en;
!!en;

**================ END OF SCRIPT ==================**
