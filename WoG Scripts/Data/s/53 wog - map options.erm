ZVSE2

**  Map Options Script Version 2.4 created by Timothy E. Pulver
**  Requires WoG version 3.58f or later using ERM version 2.7 or later.
**  WoGify Name: script25.erm

**  Updated: October 30, 2004
**  Updated: Jun 2023 by Archer30

** Custom primary skill control for Choose Commander Class enabled by Hermann the Weird

** This script sets up various map options according to what's been
** chosen in the WoGify Options by the player.

** Current Map Options are:
**  1. Remove all Forts [moved to a new script]
**  2. Remove Forts only for Human Players (option 1 must also be selected) [moved to a new script]
**  3. Remove all Cartographers (replaces them with Covers of Darkness) [moved to a new script]
**  4. Spell Banning (Movement Spells)
**  5. Artifact Banning (Selected)
**  6. Town Renaming [moved to a new script]
**  7. Check current hero's available Movement Points
**  8. Universal Creature Upgrades (added in 1.3) [moved to a new script]
**  9. Buy All Creatures button (added in 1.2)
** 10. Extended Creature Upgrades (added in 1.3)
** 11. Hero Renaming (added in 1.3) [moved to a new script]
** 12. Display Hidden Secondary Skills (added in 1.3)
** 13. Display hero's available Spell Points (added in 1.4)
** 14. Rewriteable signs, plus display sign text when right-clicked if already visited (added in 1.4)
** 15. Message Disabling (added in 1.5)
** 16. Choose Commander Class (added in 1.6) [moved to a new script]
** 17. Enable Extension Heroes (added in 1.7)
** 18. Disable Autosave option (added in 1.8) [removed]
** 19. Select Neutral Town Types (added in 1.9)
** 20. Build Twice a Day in Towns (added in 2.0)
** 21. Quick Combat option for every battle (added in 2.1)
** 22. Warlord's Banner: Quick Select (added in 2.1) [moved to a new script]
** 23. Hero and Town List Reordering (added in 2.2) [moved to a new script]
** 24. Check for Banned/Disabled Spells (added in 2.4)

** More map options may be added later.

-------------------------------------------------------------------------------

Variables used: v2-v5, z1-z4, v3304-v3308, v3334-v3336, v3406-v3407
ERM Numbers used: 25, 131, 144-148, 150-164, 166-169, 173-183, 185-187, 221-223
Flags used: 1, 3
Functions used: FU10800-FU10815  (FU10799, FU10807 and FU10808 no longer used and are available)
Dialogue Box numbers used: 17

********************************************************************************
   Ban Spells from appearing in Mage Guilds and Pyramids
********************************************************************************

!?FU10802;

!!UN:P152/?y1; [Summon Boat: y1=1 if banned]
!!UN&y1=1:J0/0/1; [Disable Summon Boat]

!!UN:P153/?y2; [Water Walk: y2=1 if banned]
!!UN&y2=1:J0/7/1; [Disable Water Walk]

!!UN:P154/?y3; [Town Portal: y3=1 if banned]
!!UN&y3=1:J0/9/1; [Disable Town Portal]

!!UN:P155/?y4; [Dimension Door: y4=1 if banned]
!!UN&y4=1:J0/8/1; [Disable Dimension Door]

!!UN:P156/?y5; [Fly: y5=1 if banned]
!!UN&y5=1:J0/6/1; [Disable Fly]

!!UN:P221/?y6; [Scuttle Boat: y6=1 if banned]
!!UN&y6=1:J0/1/1; [Disable Scuttle Boat]

!!UN:P222/?y7; [Visions: y7=1 if banned]
!!UN&y7=1:J0/2/1; [Disable Visions]

!!UN:P223/?y8; [Armageddon: y8=1 if banned]
!!UN&y8=1:J0/26/1; [Disable Armageddon]

!!UN:P246/?y9; [View Air: y9=1 if banned]
!!UN&y9=1:J0/5/1; [Disable View Air]

!!UN:P247/?y10; [View Earth: y10=1 if banned]
!!UN&y10=1:J0/3/1; [Disable View Earth]

!!UN:P249/?y11; [Disguise: y11=1 if banned]
!!UN&y11=1:J0/4/1; [Disable Disguise]

-------------------------------------------------------------------------------

 [Prevent Heroes gaining Banned Spells from a Conflux Mage Guild in case Grail is built]
 [Note: there is no check to see if the hero already had the spell]
!?FU(WOG_CreateERMHook);
!!UN:P146/?(isBanEnabled:y); [Check if Ban from Mage Guilds option is selected]
!!SN&(isBanEnabled:y):Ex1/1/6022493/(WOG_OnConfluxGrailGiveSpells);

!?FU(WOG_OnConfluxGrailGiveSpells);
!!UN:Cx1/(STRUCT_HOOK_CONTEXT_ESI)/4/?(spellId:y);
!!VR(spellId)::(SIZEOF_SPELL_STRUCT);
!!FU(WOG_CHECK_SPELL_BAN):P(spellId)/?(banned:y);
!!VR(banned:y):&1;
!!VR(banned)&(spellId)=(SPELL_TITANS_LIGHTNING_BOLT):S(TRUE);

!!if&(banned);
  !!SN:X?t/0;
  !!UN:Cx1/(STRUCT_HOOK_CONTEXT_RET)/4/6022501;
!!en;

-------------------------------------------------------------------------------

 [Ban spells from appearing at Spell Shrines]
!?FU10803;

!!UN:U88/-1/?y1; [Check how many level 1 spell shrines are on map: store in y1]
!!VRv2:S-1; [Initialize v2 to -1 to work with new faster UN:U syntax]
!!DO10804/1/y1/1&y1>0:P88/1; [Loop through level 1 spell shrines]

!!UN:U89/-1/?y2; [Check how many level 2 spell shrines are on map: store in y2]
!!VRv2:S-1; [Initialize v2 to -1 to work with new faster UN:U syntax]
!!DO10804/1/y2/1&y2>0:P89/2; [Loop through L2 shrines]

-------------------------------------------------------------------------------

 [Loop through Spell Shrines]
 [Set a random spell that isn't banned or disabled]
 [x1=object type of shrine, x2=level of shrine]
!?FU10804;

!!UN:Ux1/-1/-1/2; [Store coordinates of next Shrine in v2/v3/v4]
!!SRv2/v3/v4:S?y1; [Read spell at shrine: y1]
!!FU|y1<0/y1>69:E; [Exit if invalid spell]

!!FU(WOG_CHECK_SPELL_BAN):Py1/?y30; [Check if spell is banned or disabled: y30>0 if yes]

!!if&y30>0;
  !!FU(WOG_GENERATE_SPELL):Px2/x2/0/0/1/0; [Random non-banned level x2 spell: y-99]

  !!if&y-99<>(NO_SPELL);
    !!SRv2/v3/v4:Sy-99; [Set a random spell (y-99) that isn't banned or disabled]
  !!el;
    !!SRv2/v3/v4:S(SPELL_MAGIC_ARROW); [Set a random spell (y-99) that isn't banned or disabled]
  !!en;
!!en;


-------------------------------------------------------------------------------

 [Ban spells from being taught by Scholars]
!?FU10805;

!!UN:U81/-1/?y1; [Check how many Scholars are on the map: store in y1]
!!VRv2:S-1; [Initialize v2 to -1 to work with new faster UN:U syntax]
!!DO10806/1/y1/1&y1>0:P; [Loop through Scholars]

-------------------------------------------------------------------------------

 [Loop through Scholars and substitute a non-banned spell of the same level]
 [to replace any banned spell, or if none available, a secondary skill intead]
!?FU10806;

!!UN:U81/-1/-1/2; [Store coordinates of next Scholar in v2/v3/v4]
!!SCv2/v3/v4:T?y1 L?y2; [Get type of Scholar (y1) and spell taught (y2), if any]
!!VRy2:-1024; [Subtract 1024 to get spell number]
!!VRy3:S0;    [Clear y3]

!!if&y1=2;
  !!FU(WOG_CHECK_SPELL_BAN):Py2/?y30;

  !!if|y30=1/y30=3;                     [Replace spell if the spell is banned in wog options]
    !!FU7779:Py2;                       [Check level of banned spell: y-96]

    !!FU(WOG_GENERATE_SPELL):Py-96/y-96/0/0/1/1/y2; [Generate new non-banned spell of same level: y-99]

    !!if&y-99<>(NO_SPELL);
      !!VRy5:Sy-99 |1024;                  [Add new non-banned spell of same level: y5]
      !!SCv2/v3/v4&y-99>=0:T2 Ly5;    [Give Scholar new Spell unless all are banned (y5)]
    !!el;
      [If all spells of same level banned (y-99=-1), give a skill instead]
      !!VRy4:S0 R27; [Random # from 1 to 27 for Secondary Skill replacement (y4)]
      !!SCv2/v3/v4:T1 Sy4; [Give Scholar Secondary Skill (y4)]
    !!en;
  !!en;
!!en;


-------------------------------------------------------------------------------

 [Ban spells from being found on Spell Scrolls]
!?FU10809;

!!UN:U93/-1/?y1; [Check how many Spell Scrolls are on the map: store in y1]
!!VRv2:S-1; [Initialize v2 to -1 to work with new faster UN:U syntax]
!!DO10810/1/y1/1&y1>0:P; [Loop through Spell Scrolls]

-------------------------------------------------------------------------------

 [Loop through Spell Scrolls and substitute a new non-banned spell]
!?FU10810;
!!UN:U93/-1/-1/2; [Store coordinates of next Spell Scroll in v2/v3/v4]
!!ARv2/v3/v4:V?y1; [Store spell number in y1]
!!FU|y1<0/y1>69:E; [Exit if invalid spell]
!!FU(WOG_CHECK_SPELL_BAN):Py1/?y30; [Check if spell is banned: y30>0 if yes]

!!if&y30>0;
  !!FU7779:Py1; [Check level of spell on spell scroll: y-96]
  !!FU(WOG_GENERATE_SPELL):Py-96/y-96/0/0/1/1/y1; [Generate new non-banned spell of same level: y-99]
  !!if&y-99<>(NO_SPELL);
    !!OBv2/v3/v4:Cy-99; [Give Spell Scroll new spell (y3)]
  !!el;
    !!OBv2/v3/v4:C(SPELL_MAGIC_ARROW); [Give Spell Scroll new spell (y3)]
  !!en;
!!en;

-------------------------------------------------------------------------------

 [Ban spells from Heroes' starting spells]
!?FU10811;
!#VA(usedY[12]:y);
!!UN:P37/?y1; [Check if Rebalanced Factions script is active: y1=1 if active]
!!UN:P152/?y2; [Check if Summon Boat is banned: y2=1 if banned]
!!UN:P153/?y3; [Check if Water Walk is banned: y3=1 if banned]
!!UN:P154/?y4; [Check if Town Portal is banned: y4=1 if banned]
!!UN:P155/?y5; [Check if Dimension Door is banned: y5=1 if banned]
!!UN:P156/?y6; [Check if Fly is banned: y6=1 if banned]
!!UN:P221/?y7; [Check if Scuttle Boat is banned: y7=1 if banned]
!!UN:P222/?y8; [Check if Visions is banned: y8=1 if banned]
!!UN:P223/?y9; [Check if Armageddon is banned: y9=1 if banned]
!!UN:P246/?y10; [Check if View Air is banned: y10=1 if banned]
!!UN:P247/?y11; [Check if View Earth is banned: y11=1 if banned]
!!UN:P249/?y12; [Check if Disguise is banned: y11=1 if banned]
!!VR(exit:y):S(TRUE);

!!re i/2/12;
  !!if&yi<>(FALSE);
    !!VR(exit):S(FALSE);
  !!en;
!!en;

!!if&(exit)=(FALSE);
  !!FU(NewIntArray):P?(bannedSpells:y);
  !!FU(Array_Push):P(bannedSpells)/(SPELL_SUMMON_BOAT)/(SPELL_WATER_WALK)/(SPELL_TOWN_PORTAL)/(SPELL_DIMENSION_DOOR)/(SPELL_FLY)/(SPELL_SCUTTLE_BOAT);
  !!FU(Array_Push):P(bannedSpells)/(SPELL_VISIONS)/(SPELL_ARMAGEDDON)/(SPELL_VIEW_AIR)/(SPELL_VIEW_EARTH)/(SPELL_DISGUISE);

  !!FU(NewIntArray):P?(replacingSpells:y);
  !!FU(Array_Push):P(replacingSpells)/(SPELL_CURE)/(SPELL_WATER_ELEMENTAL)/(SPELL_RESURRECTION)/(SPELL_AIR_ELEMENTAL)/(SPELL_AIR_ELEMENTAL)/(SPELL_WEAKNESS);
  !!FU(Array_Push):P(replacingSpells)/(SPELL_BLIND)/(SPELL_INFERNO)/(SPELL_HASTE)/(SPELL_VIEW_EARTH)/(SPELL_DISRUPTING_RAY);

  !!re (hero:y)/0/(HERO_LAST_WOG);

      !!re j/0/10;
        !!SN:M(bannedSpells)/j/?(bSpell:y);
        !!VR(optId:y):Sj +2;
        !!HE(hero):M(bSpell)/?(learned:y);

        !!if&(learned)/y(optId);
          !!SN:M(replacingSpells)/j/?(rSpell:y);

          !!HE(hero):M(bSpell)/(FALSE) M(rSpell)/(TRUE);
        !!en;
      !!en;
  !!en;
!!en;

!!if&y1=(TRUE);
  !!HE(HERO_GEM):M(SPELL_CURE)/(FALSE);
!!en;

*!re i/0/(end_value);
  
*!en;
!!FU:E;
*!DO10812/0/155/1|y2=1/y3=1/y4=1/y5=1/y6=1/y7=1/y8=1/y9=1/y10=1/y11=1/y12=1:Py1/y2/y3/y4/y5/y6/y7/y8/y9/y10/y11/y12; [Loop through all Heroes if anything banned]

-------------------------------------------------------------------------------

-----------------------------------

 [Ban spells from appearing various places]

!#UN:P146/?v1; [Check if Ban from Mage Guilds option is selected]
!#FU10802&v1=1:P; [Call function to ban selected spells]

!#UN:P151/?v1; [Check if Ban from Heroes starting spells is selected]
!#FU10811&v1=1:P; [Call function to ban selected spells]

; Execute these later in order to work with the latest map conditions
!?FU(OnAfterErmInited);
!!UN:P148/?v1; [Check if Ban from Scholars option is selected]
!!FU10805&v1=1:P; [Call function to ban selected spells]

!!UN:P150/?v1; [Check if Ban from Spell Scrolls option is selected]
!!FU10809&v1=1:P; [Call function to ban selected spells]

!?PI;
!!UN:P147/?v1; [Check if Ban from Spell Shrines option is selected]
!!FU10803&v1=1:P; [Call function to ban selected spells]

; UN:J value would be reset after loading game!
!?FU(OnAfterLoadGame);
!!UN:P146/?v1; [Check if Ban from Mage Guilds option is selected]
!!FU10802&v1=1:P; [Call function to ban selected spells]

-------------------------------------------------------------------------------

 [Pandora's Box trigger - for selected spell banning]

!?OB6;

 [Check if spell banning for Pandora's Box is enabled]
!!UN:P150/?y-1;

!!if&y-1<>0;

   !!LE998:S?(spells:y); [Number of spells in Pandora's Box: y-2]

   !!if&(spells)>0;
     !!re i/0/(spells)/1/-1;
       !!LE998:Si/?(spell:y);                [Check each spell given by Pandora's Box: y1]

       !!FU(WOG_CHECK_SPELL_BAN):P(spell)/?(result:y);                [Check if spell is banned: =1 or 3 if banned]

       !!if|(result)=1/(result)=3;
         !!LE998:Si/-1;            [If banned, remove spell from box]
       !!en;
     !!en;
   !!en;
!!en;
 [Call Function 10814 if banning is enabled]

*?HL(ANY_HERO);
*!HL:Sd/(SKILL_NECROMANCY)/(SKILL_DIPLOMACY);
-------------------------------------------------------------------------------

-------------------------------------------------------------------------------

 [End of Spell Banning]


********************************************************************************
   Artifact Banning
********************************************************************************

-------------------------------------------------------------------------------

 [Disable Combination Artifact parts so Combo Artifacts can't be assembled]
!?FU10816;
!!UN:Ax16/5/-1; [Remove Combination part number]

-------------------------------------------------------------------------------

 [Disable Artifacts]

!#UN:P157/?v1; [Boots of Levitation]
!#UN&v1=1:A90/1;

!#UN:P158/?v1; [Angel Wings]
!#UN&v1=1:A72/1;

!#UN:P159/?v1; [Tome of Air Magic]
!#UN&v1=1:A87/1;

!#UN:P160/?v1; [Tome of Earth Magic]
!#UN&v1=1:A89/1;

!#UN:P161/?v1; [Tome of Fire Magic]
!#UN&v1=1:A86/1;

!#UN:P162/?v1; [Tome of Water Magic]
!#UN&v1=1:A88/1;

!#UN:P163/?v1; [Spellbinder's Hat]
!#UN&v1=1:A124/1;

!#UN:P164/?v1; [Sea Captain's Hat]
!#UN&v1=1:A123/1;

!#UN:P166/?v1; [Recanter's Cloak]
!#UN&v1=1:A83/1;

!#UN:P167/?v1; [Orb of Inhibition]
!#UN&v1=1:A126/1;

!#UN:P168/?v1; [Orb of Vulnerability]
!#UN&v1=1:A93/1;

!#UN:P172/?v1; [Necklace of Ocean Guidance]
!#UN&v1=1:A71/1;

!#UN:P175/?v1; [Shackles of War]
!#UN&v1=1:A125/1;

!#UN:P176/?v1; [Magic Wand]
!#UN&v1=1:A141/1;

!#UN:P226/?v1; [Gold Tower Arrow]
!#UN&v1=1:A142/1;

!#UN:P227/?v1; [Monster's Power]
!#UN&v1=1:A143/1;

; Set Ban Commander Artifacts as Enabled if Commander is disabled
!#UN:P(WOG_OPT_DISABLE_COMMANDERS)/?y30;
!#UN&y30:P238/(TRUE);

!#UN:P238/?v1; [Commander Artifacts: Note: enables artifacts if not disabled]
!#UN&v1=1:A146/v1; (Axe of Smashing)
!#UN&v1=1:A147/v1; (Mithril Mail)
!#UN&v1=1:A148/v1; (Sword of Sharpness)
!#UN&v1=1:A149/v1; (Helm of Immortality)
!#UN&v1=1:A150/v1; (Pendant of Sorcery)
!#UN&v1=1:A151/v1; (Boots of Haste)
!#UN&v1=1:A152/v1; (Bow of Seeking)
!#UN&v1=1:A153/v1; (Dragon Eye Ring)
!#UN&v1=1:A154/v1; (Hardened Shield)
!#UN&v1=1:A155/v1; (Slava's Ring of Power)

!#UN:P177/?v1; [Slava's Ring of Power]
!#UN&v1=1:A155/1;

// Enable Vial of Dragon Blood and Armageddon's Blade for random maps - not directly spawning on the maps though

!?FU(WOG_234_BanArtifacts);
!!FU(WOG_CheckRandomMap):P?(isRandMap:y);         [Check random map]

!!UN:P197/?(vialBanned:y); [Vial of Dragon Blood]
!!if&(vialBanned);
  !!UN:A(ART_VIAL_OF_DRAGON_BLOOD)/1;
!!el&(isRandMap);
  !!UN:A(ART_VIAL_OF_DRAGON_BLOOD)/0;
!!en;

!!UN:P224/?(bladeBanned:y); [Armageddon's Blade]
!!if&(bladeBanned);
  !!UN:A(ART_ARMAGEDDONS_BLADE)/1;
!!el&(isRandMap);
  !!UN:A(ART_ARMAGEDDONS_BLADE)/0;
!!en;

!!UN:P234/?v1; [Warlord's Banner]
!!UN:A156/v1; [Note: enables artifact if not disabled]

!!UN:P236/?v1; [Crimson Shield of Retribution]
!!UN:A157/v1; [Note: enables artifact if not disabled]

!!UN:P237/?v1; [Barbarian Lord's Axe of Ferocity]
!!UN:A158/1; [Note: disables artifact (like other combos) even if not disabled]

!#FU(WOG_234_BanArtifacts):P;

!#UN:P241/?v1; [Dragonheart]
!#UN&v1=1:A159/1;

!#UN:P243/?v1; [Gate Key]
!#UN&v1=1:A160/1;

!#UN:P178/?v1; [Assembling of Combination Artifacts]
!#DO10816/7/128/1&v1=1:P;

-------------------------------------------------------------------------------

 [End of Artifact Banning]



********************************************************************************
   Display Hero Movement And Hero's Spell Points
********************************************************************************

!?FU(OnAdventureMapRightMouseClick)&i^mouse_item^>=20/i^mouse_item^<=29;
!!UN:P25/?y-1 P179/?y2; [See if script is enabled: y-1]

!!if|y1/y2;
  
  !!VR(slot:y):Si^mouse_item^ -20;
  !!VR(isManaClick:y):S(slot) :5 B; returns 0/1 
  !!VR(slot)&(isManaClick):-5;
  !!VR(optionId:y):S154 *(isManaClick) +25;
  !!OW:O-1/(slot:y)/?(heroId:y); [Hero number: v5]
  !!HE(heroId:y):W?(movement:y)/1 B0/?(heroName:z) I?(spellPoints:y)/1 R7/?s; [Store movement points: v3 and hero's name: z1]
  !!VR(checkBit:y):S(isManaClick) X1 +1;
  !!VRs:&(checkBit) B;                                          [check for stables]
  !!SN:T^wog.%(optionId).visited%s^/?(visited:z);
  !!if&(isManaClick:y);
    !!VR(picType:y):S(PIC_TYPE_SPELL_POINTS);
    !!VR(picSubtype:y):S(spellPoints);
  !!el;
    !!SN:T^wog.25.artName^/?(newArtName:z)/^movement^/(movement:y) H^art^/(ART_BOOTS_OF_SPEED)/0/?(artName:z) H^art^/(ART_BOOTS_OF_SPEED)/0/(newArtName:z);
    !!VR(picType:y):S(PIC_TYPE_ART);
    !!VR(picSubtype:y):S(ART_BOOTS_OF_SPEED);
  !!en;
   
  !!SN:T^wog.%(optionId).msg^/?(msg:z)/^heroName^/(heroName)/^visited^/(visited);
  !!IF:Q1/(picType)/(picSubtype)/(MSG_TYPE_POPUP)/(msg);
  !!SN&(isManaClick:y)=(FALSE):H^art^/(ART_BOOTS_OF_SPEED)/0/(artName:z);[Restore Boots of Speed text]
  !!CM:R0;                                                               [Disable standard right-click operation]
!!en;



********************************************************************************
   Buy All Creatures Button
********************************************************************************

 Functions: FU10920-FU10931
 Temporary Variables: v600-v633, v640-v646, z1-z3
 Temporary Flags: 2-4

 [Left or right-click on castle icon beneath town name (CM:I#159)]

 [Mouse click in Town Screen is Trigger]
!?CM1&999/i^mouse_item^=159/i^mouse_action^=(MOUSE_LMB_PRESSED);

!!CA-1:U?y-3 O?y-9; [Town number: y-3, Town owner: y-9]
!!if&y-9=i^timerOwner^;
  !!FU10920:P; [Call main Buy All function if current player owns town (e.g., not an allied town)]
  !!CM:R0; [Disable standard mouse click function]
!!en;

-------------------------------------------------------------------------------

 [Hint Text trigger: Display new hint text for Buy All Button]
!?MM1&999;
!!UN:P180/?y-1; [Check if script is enabled: y-1]
!!FU&y-1<>1:E; [Exit if script isn't enabled]

!!CM:I?y-1; [Mouse location: y-1 (159=castle icon)]
!!VRz-1:Sz125007;
!!CM&y-1=159:Mz-1; [Display hint text]

-------------------------------------------------------------------------------

 [Adventure Map: Control-Left-click is Trigger]
!?FU(OnAdventureMapLeftMouseClick)&i^mouse_item^>=32/i^mouse_item^<=36/i^key_ctrl^/i^mouse_action^=(MOUSE_LMB_PRESSED)/999;
!!UN:P180/?y-1; [Check if script is enabled: y-1]
!!FU&y-1<>1:E; [Exit if script isn't enabled]

!!VRy-2:Si^mouse_item^ -32; [Town list number (0-4): y-2]
!!OW:N-1/y-2/?y-3; [Town number: y-3]

!!VRz1:S^^;
!!CA0/y-3&y-3>=0:N?z1; [Name of town right-clicked: z1]

 [Call Main "Buy All" Function]
!!VRy-4:S1; ["Buy All" called from Adventure Map: y-4=1]
!!FU10920:P; [y-3 holds town number]

!!CM:R0; [Disable standard right-click function]

-------------------------------------------------------------------------------

 [Main "Buy All" Function]
!?FU10920;

!!VRz1:S^^; [Initialize z1 (list of troops purchased) to null]
!!VRv633:S0; [Initialize v633 (any troops bought?) to 0]
!!IF:V3/0 V4/0; [Initialize Flag 3 (Any troops available to buy?) and 4 (Any army slots available?) to FALSE]
!!VRv624:C0/0/0/0/0/0/0/0; [Set total resource cost variables v624-v631 to 0]

!!CA0/y-3:H0/?v600; [Check if town has a garrison hero: v600=hero # or -1 if no hero]
!!CA0/y-3:P?y-6/?y-7/?y-8; [Town Location: y-6/y-7/y-8]

!!DO10921/0/6/1:P; [Store troops from garrison/garrison hero in v601-v614]
!!DO10922/0/7/1:P; [Store player's resources in v615-v622]
!!DO10923/0/5/1:P; [Consolodate troops stacks of same type in virtual variable slots]
!!DO10924/0/6/1:P; [Determine troops to be bought: v633>0 if any bought]
!!FU10925&v633>0:P; [Display list of new troops and ask if player wishes to purchase them]
*                   [If yes, deduct gold and resources, v633>0 if yes]
!!DO10926/0/6/1&v633>0:P; [If bought, add troops to garrison/garrison hero]
!!UN&y-4=0/v633>0:R4; [Redraw town screen]
!!UN&y-4=1/v633>0:R1; [Redraw adventure screen]

 [If no troops can be bought, display appropriate explanation message]
!!CA0/y-3:N?z3; [Name of town: z3]
!!IF&-3:M1/z125008;
!!IF&3/-4:M1/z125009;
!!IF&3/4/v633=0:M1/z125010;

-------------------------------------------------------------------------------

 [Store troops from garrison/garrison hero in v601-v614]
 [Store troops' stack experience in y-11..y-17]
 [Store number of troops' Warlord Banners in y-21..y-27]
 [Store Warlord Banner options in y-31..y-37]
!?FU10921;

!!VRy1:S601 +x16; [v variable index to store troop types: y1]
!!VRy2:S608 +x16; [v variable index to store troop numbers: y2]

!!VRy3:S-11 -x16; [y- variable index to store troop's stack experience: y3]
!!VRy4:S-21 -x16; [y- variable index to store troop's number of Warlord's Banners: y4]
!!VRy5:S-31 -x16; [y- variable index to store troop's Warlord Banner Options: y5]

!!VRy6:S0; [Initialize banners variable to 0: y6]
!!HEv600&v600>=0:C0/x16/?vy1/?vy2/?yy3; [Store troops from garrison hero's slots]
!!EXy-6/y-7/y-8/x16/1&v600>0:R?y6/156/?yy5/?yy4; [Store number of Warlord's Banners and Option from garrison hero stack]
!!CA0/y-3&v600<0:M2/x16/?vy1/?vy2; [If no hero, store troops from garrison slots]
!!EXy-6/y-7/y-8/x16/2&v600<0:E?yy3; [If no hero, store stack experience from garrison slots]
!!EXy-6/y-7/y-8/x16/2&v600<0:R?y6/156/?yy5/?yy4; [If no hero, store number of Warlord's Banners and Option from garrison stack]

!!VRyy3:*vy2; [Calculate and store total experience for the stack: yy3]
!!VRyy4&y6=1:+1; [Calculate and store total banners for the stack: yy4]

-------------------------------------------------------------------------------

 [Store player's resources in v615-v622]
!?FU10922:P;

!!VRy1:S615 +x16; [v variable index to store resource amount: y1]
!!OW:R-1/x16/?vy1; [Store resource amount for each resource type]

-------------------------------------------------------------------------------

 [Consolodate troops stacks of same type in virtual variable slots]
!?FU10923:P;

!!VRy1:Sx16 +1; [Set y1 to outer loop +1]
!!VRy2:S601 +x16; [v variable index of stored troop types: y2]
!!VRy3:S608 +x16; [v variable index of stored troop numbers: y3]
!!VRy4:S-11 -x16; [y- variable index to store troop's stack experience: y4]
!!VRy5:S-21 -x16; [y- variable index to store troop's number of Warlord's Banners: y5]
!!VRy6:S-31 -x16; [y- variable index to store troop's Warlord's Banner Options: y6]

!!DO10927/y1/6/1:Py2/y3/y4/y5/y6; [Inner loop]

-------------------------------------------------------------------------------

 [Inner consolodation loop]
!?FU10927;
 [x1=outer loop troop type index, x2=outer loop troop numbers index]
 [x3=outer loop stack experience index, x4=outer loop warlord's banner index]
 [x5=outer loop warlord's banner option index]

!!VRy1:Svx1; [Outer loop troop type: y1]
!!VRy2:Svx2; [Outer loop troop number: y2]

!!VRy3:S601 +x16; [v variable index of stored troop types: y3]
!!VRy4:S608 +x16; [v variable index of stored troop numbers: y4]

!!VRy5:Svy3; [Inner loop troop type: y5]
!!VRy6:Svy4; [Inner loop troop number: y6]

!!VRy7:Syx3; [Outer loop troop's stack experience: y7]
!!VRy8:Syx4; [Outer loop troop's number of Warlord's Banners: y8]
!!VRy13:Syx5; [Outer loop troop's Warlord's Banner Option: y13]

!!VRy9:S-11 -x16; [Inner loop y- index of stored troop's stack experience: y9]
!!VRy10:S-21 -x16; [Inner loop y- index of stored troop's number of Warlord's Banners: y10]
!!VRy14:S-31 -x16; [Inner loop y- index of stored troop's Warlord's Banner Option: y14]

!!VRy11:Syy9; [Inner loop troop's stack experience: y11]
!!VRy12:Syy10; [Inner loop troop's number of Warlord's Banners: y12]
!!VRy15:Syy14; [Inner loop troop's Warlord's Banner Option: y15]

 [If troop types are the same, add stack to the first stack]
!!VRvy3&y1=y5:S-1; [Set inner loop troop type to empty]
!!VRvy4&y1=y5:S0; [Set inner loop troop number to 0]
!!VRvx2&y1=y5:+y6; [Add inner loop troop number to outer loop troop number]

 [If troops types are the same, add stack experience to the first stack]
!!VRyy9&y1=y5:S0; [Set inner loop stack experience to 0]
!!VRyy10&y1=y5:S0; [Set inner loop number of Warlord's Banners to 0]
!!VRyy14&y1=y5/y12>0:S0; [Set inner loop Warlord's Banner Option to 0]
!!VRyx3&y1=y5:+y11; [Add inner loop stack experience to outer loop stack experience]
!!VRyx4&y1=y5:+y12; [Add inner loop number of Warlord's Banners to outer loop number of Warlord's Banners]
!!VRyx5&y1=y5/y12>0:Sy15; [Set outer loop Warlord's Banner Option to inner loop's Warlord's Banner Option]

-------------------------------------------------------------------------------

 [Add troops to garrison/garrison hero and remove purchased troops from town dwellings]
!?FU10926;

!!VRy1:S601 +x16; [v variable index of stored troop types: y1]
!!VRy2:S608 +x16; [v variable index of stored troop numbers: y2]
!!VRy7:S-11 -x16; [y- variable index for stored stack experience: y7]
!!VRy8:S-21 -x16; [y- variable index for stored number of Warlord's Banners: y8]
!!VRy11:S-31 -x16; [y- variable index for stored Warlord's Banner Options: y11]

!!VRy9:S0; [Initialize real stack experience to 0: y9]
!!VRy9&vy2>0:Syy7 :vy2; [Calculate real stack experience: y9]

!!VRyy8:-1; [Set number of extra Warlord's Banners: yy8]
!!VRy10&yy8<0:S0; [Don't give banners: y10]
!!VRy10&yy8>=0:S1; [Give banners: y10]
!!VRyy8&yy8<0:S0; [Set minimum number of extra Warlord's Banners to 0: yy8]
!!VRyy8&yy8>3:S3; [Set maximum number of extra Warlord's Banners to 3: yy8]

!!HEv600&v600>=0:C0/x16/vy1/vy2/y9/2; [Place troops into garrison hero's slots]
!!EXy-6/y-7/y-8/x16/1&v600>0:Ry10/156/yy11/yy8; [Give Warlord's Banners]
!!CA0/y-3&v600<0:M2/x16/vy1/vy2; [If no hero, place troops into garrison slots]

!!VRy3:S640 +x16; [v variable index of troops bought: y3]
!!VRy4:Svy3; [Number of troops bought: y4]
!!CA0/y-3:M1/x16/?y5/?y6; [Get number of troops in town dwellings: y5 and y6]
!!VRy5:-y4; [Remove purchased non-upgraded troops]
!!VRy6:-y4; [Remove purchased upgraded troops]
!!VRy5&y5<0:S0; [Set non-upgraded troops to 0 if it's less than 0]
!!VRy6&y6<0:S0; [Set upgraded troops to 0 if it's less than 0]
!!CA0/y-3:M1/x16/y5/y6; [Set remaining troop numbers in town dwellings]
!!UN&y-4=0:R4; [Redraw town screen]
!!UN&y-4=1:R1; [Redraw adventure screen]

!!EXy-6/y-7/y-8/x16/2&v600<0:Ey9; [If no hero, set stack experience for garrison slots]
!!EXy-6/y-7/y-8/x16/2&v600<0:Ry10/156/d/yy8; [If no hero, give Warlord's Banners to garrison stack]

-------------------------------------------------------------------------------

 [Determine troops to be bought]
!?FU10924;

!!VRy1:S6 -x16; [Troop level from 6 to 0: y1]
!!CA0/y-3:M1/y1/?y2/?y3; [Check number of troops: y2=non-upgraded, y3=upgraded]
!!CA0/y-3:T?y4; [Check TOWN TYPE: y4]
!!VRy5:S-1; [Initialize TROOP TYPE to -1]
!!UN&y3>0:Ty4/y1/1/?y5; [Check TROOP TYPE (upgraded dwelling): y5]
!!UN&y2>0/y3=0:Ty4/y1/0/?y5; [Check TROOP TYPE (non-upgraded dwelling): y5]
!!VRy6:S0; [Initialize NUMBER of troops to 0]
!!VRy6&y3>0:Sy3; [Set NUMBER of troops available (if upgraded): y6]
!!VRy6&y2>0/y3=0:Sy2; [Set NUMBER of troops available (if non-upgraded): y6]
!!IF&y6>0:V3/1; [Set Flag 3 to TRUE if any troops are available]

!!VRv623:S-1; [Initialize v623 to -1]
!!DO10928/0/6/1&y6>0:Py5; [Loop through slots to see if troop type exists]
                          [If yes, store slot number in v623]
!!DO10929/0/6/1&y6>0/v623<0:Py5; [If no match, loop again to see if an empty slot exists]
                                 [If yes, store slot number in v623]
!!IF&y6>0/v623>=0:V4/1; [Set Flag 4 to TRUE if any troops will fit into army]

 [Determine resource cost of troop and store in variables y10 to y17]
!!MA&v623>=0:Cy5/0/?y10 Cy5/1/?y11 Cy5/2/?y12 Cy5/3/?y13;
!!MA&v623>=0:Cy5/4/?y14 Cy5/5/?y15 Cy5/6/?y16 Cy5/7/?y17;

 [See how many troops player can afford: v632]
!!VRv632:S0; [Initialize v632 to 0]
!!DO10930/1/y6/1&v623>=0:Py10/y11/y12/y13/y14/y15/y16/y17;

 [If player was able to afford troops and has space, add to virtual troop slot]
!!VRy7&v623>=0/v632>0:S601 +v623; [Virtual slot troop type]
!!VRy8&v623>=0/v632>0:S608 +v623; [Virtual slot number of troops]
!!VRvy7&v623>=0/v632>0:Sy5; [Set troop type]
!!VRvy8&v623>=0/v632>0:+v632; [Add troops]

 [Keep track of troops bought for each level in variables: v640-v646]
!!VRy9:S640 +y1; [Index for troops bought variable]
!!VRvy9:Sv632; [Store number bought]

 [Build string of troops purchased: z1]
!!VRz2:S^^; [Initialize z2 to null]
!!UN&v623>=0/v632=1:N3/2/y5/0; [Name of monster (singular): z2]
!!UN&v623>=0/v632>1:N3/2/y5/1; [Name of monster (plural): z2]
!!VRz1&v623>=0/v632>0:S^%Z1
{%V632} {%Z2}^;  [Add new troop name and number to z1 string]

 [Increment troops bought variable: v633]
!!VRv633&v623>=0/v632>0:+v632;

-------------------------------------------------------------------------------

 [Loop through slots to see if troop type exists already]
 [If yes, store slot number in v623]
!?FU10928;
 [x1=troop type being checked]

!!VRy1:S601 +x16; [v variable index of stored troop type: y1]
!!VRy2:S608 +x16; [v variable index of stored troop number: y2]
!!VRy3:Svy1; [Stored troop type: y3]
!!VRy4:Svy2; [Stored troop number: y4]

!!VRv623&x1=y3/y4>0:Sx16; [Store slot number if troop types match]

!!VRx16&x1=y3/y4>0:S999; [Exit loop if troop types match]

-------------------------------------------------------------------------------

 [Loop through slots to see if empty slot exists]
 [If yes, store slot number in v623]
!?FU10929;
 [x1=troop type being checked]

!!VRy1:S601 +x16; [v variable index of stored troop type: y1]
!!VRy2:S608 +x16; [v variable index of stored troop number: y2]
!!VRy3:Svy1; [Stored troop type: y3]
!!VRy4:Svy2; [Stored troop number: y4]

!!VRv623|y3<0/y4<1:Sx16; [Store slot number if empty slot found]

!!VRx16|y3<0/y4<1:S999; [Exit loop if troop types match or empty slot found]

-------------------------------------------------------------------------------

 [See how many troops player can afford: v632]
!?FU10930;
 [x1 through x8 are the resource costs of the troop]

!!VRy1:Sv615 -x1; [Remaining wood after purchase: y1]
!!VRy2:Sv616 -x2; [Remaining mercury after purchase: y2]
!!VRy3:Sv617 -x3; [Remaining ore after purchase: y3]
!!VRy4:Sv618 -x4; [Remaining sulfur after purchase: y4]
!!VRy5:Sv619 -x5; [Remaining crystals after purchase: y5]
!!VRy6:Sv620 -x6; [Remaining gems after purchase: y6]
!!VRy7:Sv621 -x7; [Remaining gold after purchase: y7]
~~VRy8:Sv622 -x8; [Remaining mithril after purchase: y8]

!!VRy9:S1; [Initialize y9 to 1 (assume player can afford troop)]
!!VRy9|y1<0/y2<0/y3<0/y4<0/y5<0/y6<0/y7<0/y8<0:S0; [If player can't afford it, set y9 to 0]

 [If player can afford it, adjust virtual resources]
!!VRv615&y9=1:Sy1; [Set wood]
!!VRv616&y9=1:Sy2; [Set mercury]
!!VRv617&y9=1:Sy3; [Set ore]
!!VRv618&y9=1:Sy4; [Set sulfur]
!!VRv619&y9=1:Sy5; [Set crystals]
!!VRv620&y9=1:Sy6; [Set gems]
!!VRv621&y9=1:Sy7; [Set gold]
~~VRv622&y9=1:Sy8; [Set mithril]

 [If player can afford it, increment number of troops bought: v632]
!!VRv632&y9=1:+1;

 [If player can afford it, add cost to total resource costs]
!!VRv624&y9=1:+x1; [wood]
!!VRv625&y9=1:+x2; [mercury]
!!VRv626&y9=1:+x3; [ore]
!!VRv627&y9=1:+x4; [sulfur]
!!VRv628&y9=1:+x5; [crystals]
!!VRv629&y9=1:+x6; [gems]
!!VRv630&y9=1:+x7; [gold]
~~VRv631&y9=1:+x8; [mithril]

!!VRx16&y9=0:S999; [If player can't afford it, exit loop]

-------------------------------------------------------------------------------

 [Display list of new troops and ask if player wishes to purchase them]
 [If yes, deduct gold and resources]
!?FU10925;

 [Set 1st dialogue box picture]
!!VRy1:S-1; [Initialize y1 to -1 (no picture)]
!!VRy1&v624>0:S0; [wood picture]
!!VRy1&v625>0:S1; [mercury picture]
!!VRy1&v626>0:S2; [ore picture]
!!VRy1&v627>0:S3; [sulfur picture]
!!VRy1&v628>0:S4; [crystals picture]
!!VRy1&v629>0:S5; [gems picture]

!!VRy2:S624 +y1; [Index variable for 1st picture amount]

!!CA0/y-3:N?z3; [Name of town: z3]
!!VRz2:Sz125011;
!!VRz2&v630>0:Sz125012;
!!VRz2&v624>0:Sz125013;
!!VRz2&v625>0:Sz125014;
!!VRz2&v626>0:Sz125015;
!!VRz2&v627>0:Sz125016;
!!VRz2&v628>0:Sz125017;
!!VRz2&v629>0:Sz125018;
!!VRz1:S^%Z2?
%Z1^;

!!IF:Q2/6/v630/y1/vy2/2^%Z1^; [Display list of troops and ask if player wishes to purchase them]
!!VRv633&-2:S-1; [Set v633 to -1 if player answer "no" to buying troops]

!!DO10931/0/7/1&2:P; [Deduct resources if player answers "yes" to buying troops]

-------------------------------------------------------------------------------

 [Deduct resources if player answers "yes" to buying troops]
 [Player's resources are stored in v615-v622]
!?FU10931:P;

!!VRy1:S615 +x16; [v variable index of stored resource amount: y1]
!!OW:R-1/x16/vy1; [Set player's resource amount for each resource type]

-------------------------------------------------------------------------------

 [End of Buy All Creatures Button]



********************************************************************************
   Extended Creature Upgrades
********************************************************************************

 [Set extra upgrades for Hill Forts or with Universal Creature Upgrades active]

!?FU(WOG_173_SetExtraUpgrades);
!!UN:P173/?(wogOption:y); [Check if Extended Creature Upgrades is enabled]
!!FU&(wogOption)<>(TRUE):E; [Exit if script isn't enabled]

; Castle
!!MA:U(MON_ZEALOT)/(MON_WAR_ZEALOT); [Zealots to War Zealots] *Castle*
!!MA:U(MON_ARCHANGEL)/(MON_SUPREME_ARCHANGEL); [Archangels to Supreme Archangels] *Castle Level 8*

; Rampart
!!MA:U(MON_GRAND_ELF)/(MON_SYLVAN_CENTAUR); [Grand Elves to Sylvan Centaurs] *Rampart*
!!MA:U(MON_GOLD_DRAGON)/(MON_DIAMOND_DRAGON); [Gold Dragons to Diamond Dragons] *Rampart Level 8*

; Tower
!!MA:U(MON_MASTER_GREMLIN)/(MON_SANTA_GREMLIN); [Master Gremlins to Santa Gremlins] *Tower*
!!MA:U(MON_IRON_GOLEM)/(MON_GOLD_GOLEM); [Iron Golems to Gold Golems] *Tower*
!!MA:U(MON_GOLD_GOLEM)/(MON_DIAMOND_GOLEM); [Gold Golems to Diamond Golems] *Neutral*
!!MA:U(MON_TITAN)/(MON_LORD_OF_THUNDER); [Titans to Lords of Thunder] *Tower Level 8*

; Inferno
!!MA:U(MON_ARCH_DEVIL)/(MON_HELL_BARON); [Arch Devils to Antichrists] *Inferno Level 8*

; Necropolis
!!MA:U(MON_ZOMBIE)/(MON_MUMMY); [Zombies to Mummies] *Necropolis*
!!MA:U(MON_GHOST_DRAGON)/(MON_BLOOD_DRAGON); [Ghost Dragons to Blood Dragons] *Necropolis Level 8*

; Dungeon
!!MA:U(MON_BLACK_DRAGON)/(MON_DARKNESS_DRAGON); [Black Dragons to Darkness Dragons] *Dungeon Level 8*

; Stonghold
!!MA:U(MON_ANCIENT_BEHEMOTH)/(MON_GHOST_BEHEMOTH); [Ancient Behemoths to Ghost Behemoths] *Stronghold Level 8*

; Fortress
!!MA:U(MON_CHAOS_HYDRA)/(MON_HELL_HYDRA); [Chaos Hydras to Hell Hydras] *Fortress Level 8*

; Conflux
!!MA:U(MON_PHOENIX)/(MON_SACRED_PHOENIX); [Phoenixes to Sacred Phoenixes] *Conflux Level 8*

; Neutral
!!MA:U(MON_SHARPSHOOTER)/(MON_ARCTIC_SHARPSHOOTER); [Sharpshooters to Arctic Sharpshooters] *Neutral*
!!MA:U(MON_ARCTIC_SHARPSHOOTER)/(MON_LAVA_SHARPSHOOTER); [Arctic Sharpshooters to Lava Sharpshooters] *Neutral*
!!MA:U(MON_LAVA_SHARPSHOOTER)/(MON_ARCTIC_SHARPSHOOTER); [Lava Sharpshooters to Arctic Sharpshooters] *Neutral*

!!MA:U(MON_SORCERESS)/(MON_ENCHANTER); [Sorceresses to Enchanters] *Neutral*
!!MA:U(MON_ENCHANTER)/(MON_SORCERESS); [Enchanters to Sorceresses] *Neutral*

!!MA:U(MON_HELL_STEED)/(MON_NIGHTMARE); [Hell Steeds to Nightmares] *Neutral*

!#FU(WOG_173_SetExtraUpgrades):P;

 [The following can only be upgraded at Hill Forts]
 [Hill Fort is trigger]
!?OB(OBJ_HILL_FORT);
!!UN:P173/?(wogOption:y); [Check if Extended Creature Upgrades is enabled]
!!FU&(wogOption)<>(TRUE):E; [Exit if script isn't enabled]

!!MA:U(MON_STORM_ELEMENTAL)/?i^wog_173_upg_%(MON_STORM_ELEMENTAL)^ U(MON_STORM_ELEMENTAL)/(MON_AIR_MESSENGER); [Storm Elementals to Air Messengers] *Conflux*
!!MA:U(MON_MAGMA_ELEMENTAL)/?i^wog_173_upg_%(MON_MAGMA_ELEMENTAL)^ U(MON_MAGMA_ELEMENTAL)/(MON_EARTH_MESSENGER); [Magma Elementals to Earth Messengers] *Conflux*
!!MA:U(MON_ENERGY_ELEMENTAL)/?i^wog_173_upg_%(MON_ENERGY_ELEMENTAL)^ U(MON_ENERGY_ELEMENTAL)/(MON_FIRE_MESSENGER); [Energy Elementals to Fire Messengers] *Conflux*
!!MA:U(MON_ICE_ELEMENTAL)/?i^wog_173_upg_%(MON_ICE_ELEMENTAL)^ U(MON_ICE_ELEMENTAL)/(MON_WATER_MESSENGER); [Ice Elementals to Water Messengers] *Conflux*

 [Post-visit Hill Fort is trigger]
!$OB(OBJ_HILL_FORT);
!!UN:P173/?(wogOption:y); [Check if Extended Creature Upgrades is enabled]
!!FU&(wogOption)<>(TRUE):E; [Exit if script isn't enabled]

!!MA:U(MON_STORM_ELEMENTAL)/i^wog_173_upg_%(MON_STORM_ELEMENTAL)^; [Restore Storm Elemental upgrade] *Conflux*
!!MA:U(MON_MAGMA_ELEMENTAL)/i^wog_173_upg_%(MON_MAGMA_ELEMENTAL)^; [Restore Magma Elemental upgrade] *Conflux*
!!MA:U(MON_ENERGY_ELEMENTAL)/i^wog_173_upg_%(MON_ENERGY_ELEMENTAL)^; [Restore Energy Elemental upgrade] *Conflux*
!!MA:U(MON_ICE_ELEMENTAL)/i^wog_173_upg_%(MON_ICE_ELEMENTAL)^; [Restore Ice Elemental upgrade] *Conflux*

!!VRi^wog_173_upg_%(MON_STORM_ELEMENTAL)^:S0;
!!VRi^wog_173_upg_%(MON_MAGMA_ELEMENTAL)^:S0;
!!VRi^wog_173_upg_%(MON_ENERGY_ELEMENTAL)^:S0;
!!VRi^wog_173_upg_%(MON_ICE_ELEMENTAL)^:S0;

------------------------------------------------------------------------------------------------------------------

 [End of Extended Creature Upgrades]


********************************************************************************
   Display Hidden Skills
********************************************************************************

 [To view all skills (text list), Left-Click on the Experience icon]

Temporary Variables: v1-v4, z1-z3
Functions: FU14802-FU14806

 [Hero screen trigger]
!?CM2;
!!UN:P182/?y-1; [Check if script is enabled: y-1]
!!FU&y-1<>1:E; [Exit if script isn't enabled]
!!CM:I?v1 S?v2 F?v4; [Location clicked: v1 (119=Experience Icon), Type of click: v2 (12=left), Flags: v4]

!!FU|v1<>119/v2<>12/v4>4:E; [Exit if Experience icon isn't left-clicked]

!!VRv3&v4=1:S0; [Initialize v3 to 0 for skill shifting: v3]

!!DO14804/1/8/1&v4=1:P; [Shift displayed skills, part 1 (store skills)]
!!DO14805/1/v3/1&v4=1/v3>1:P; [Shift displayed skills, part 2 (remove skills)]
!!DO14806/1/v3/1&v4=1/v3>1:P; [Shift displayed skills, part 3 (redisplay skills)]
!!UN&v4=1/v3>1:R3/-1; [Redraw hero screen]

!!VRv3&v4=4:S1; [Initialize v3 to 1 for skill swapping: v3]
!!DO14803/0/27/1&v4=4:P; [Skill display swapping: hidden skills with displayed skills]
!!IF&v4=4/y-60=0:M1/z125021;
!!CM&v4>0:R0; [Cancel normal click message]

!!FU&v4>0:E; [Exit if Experience icon shift or ctrl-clicked (Hidden skill display swapping)]

 [Initialize z1, z4, v3 and y-1..y-27]
!!VRv3:S0;
!!HE-1:B0/?z3; [Hero's name: z3]
!!VRz1:Sz125022;
!!VRz4:S^^;

!!DO14802/0/27/1:P; [Loop through all skills and add hidden skills to z1 list]

 [Prepare dialogue for display of hidden skills]
!!VRy-29&v3>=9/v3<=16:S2; [Total number of skill pages: y-29]
!!VRy-29&v3>=17/v3<=24:S3; [Total number of skill pages: y-29]
!!VRy-29&v3>=25:S4; [Total number of skill pages: y-29]
!!IF&v3>=1:Ny-31/y-1/y-32/y-2/y-33/y-3/y-34/y-4/y-35/y-5/y-36/y-6/y-37/y-7/y-38/y-8;
!!VRz4&v3<=8:S^%Z1^;
!!VRz4&v3>=9:Sz125023;
!!IF&v3>=1:N^%Z4^; [Display 1-8 hidden skill pictures]
!!IF&v3>=9:Ny-39/y-9/y-40/y-10/y-41/y-11/y-42/y-12/y-43/y-13/y-44/y-14/y-45/y-15/y-46/y-16;
!!VRz4&v3>=9:Sz125024;
!!IF&v3>=9:N^%Z4^; [Display 9-16 hidden skill pictures]
!!IF&v3>=17:Ny-47/y-17/y-48/y-18/y-49/y-19/y-50/y-20/y-51/y-21/y-52/y-22/y-53/y-23/y-54/y-24;
!!VRz4&v3>=17:Sz125025;
!!IF&v3>=17:N^%Z4^; [Display 17-24 hidden skill pictures]
!!IF&v3>=25:Ny-55/y-25/y-56/y-26/y-57/y-27/y-58/y-28;
!!VRz4&v3>=25:Sz125026;
!!IF&v3>=25:N^%Z4^; [Display 25-28 hidden skill pictures]

!!IF&v3=0:M1/z125027; [If no skills hidden skills, display this string]
!!CM:R0; [Disable standard mouse click message]

------------------------------------------------------------------------------------------------------------------

 [Loop through all skills and store hidden skill picture numbers to y- variables]

!?FU14802;
!!HE-1:Sx16/?y1; [Skill Level in skill x16: y1]
!!HE-1:S?y2/x16/1; [Show slot for skill x16: y2 (0=not shown)]
!!VRv3&y1>0/y2=0:+1; [Increment v3 skill counter]
!!VRy3&y1>0/y2=0:Sv3 *-1; [Negative of skill counter: y3]
!!VRy7&y1>0/y2=0:Sy3 -30; [Negative of skill counter -30: y7]

 [Store hidden skill number in yy3 (y-1..y-28)]
!!VRy5:Sx16 +1 *-1; [-1..-28: y5]
!!VRy6:Sy5 -30; [-31..-58: y6]
!!VRyy5:S-1; [Initialize y-1..y-28 to -1]
!!VRyy6:S-1; [Initialize y-31..y-58 to -1]
!!VRy4&y1>0/y2=0:Sx16 +1 *3 +y1 -1; [Calculate skill picture number: y4]
!!VRyy3&y1>0/y2=0:Sy4; [Store hidden skill picture number]
!!VRyy7&y1>0/y2=0:S20; [Store 20 for each hidden skill]

------------------------------------------------------------------------------------------------------------------

 [Loop through all skills and allow hidden skills to be swapped with non-hidden]

!?FU14803;
!!HE-1:Sx16/?y1; [Skill Level in skill x16: y1 (0=no skill)]
!!HE-1:S?y2/x16/1; [Check display slot for skill x16: y2 (0=not shown)]
!!FU|y1=0/y2<>0/v3>8:E; [Exit if not a hidden skill or if v3>8]

!!UN:P193/?y11; [See if Warfare Option is enabled: y11=1 if yes]
!!VRy12:S0; [Initialize y12 to 0]
!!VRy19:S0; [Initialize y19 to 0]
!!VRy12|x16=10/x16=20/x16=27:S1; [Set y12 to 1 if this hidden skill is a Warfare Skill]
!!HE-1:S10/?y13; [Skill Level in Ballistics: y13 (0=no skill)]
!!HE-1:S?y14/10/1; [Check display slot for Ballistics: y14 (0=not shown)]
!!VRy19&y13>0/y14>0:S1; [Set y19 to 1 if Ballistics skill know and shown: y19]
!!HE-1:S20/?y15; [Skill Level in Artillery: y15 (0=no skill)]
!!HE-1:S?y16/20/1; [Check display slot for Artillery: y16 (0=not shown)]
!!VRy19&y15>0/y16>0:S1; [Set y19 to 1 if Artillery skill know and shown: y19]
!!HE-1:S27/?y17; [Skill Level in First Aid: y17 (0=no skill)]
!!HE-1:S?y18/27/1; [Check display slot for First Aid: y18 (0=not shown)]
!!VRy19&y17>0/y18>0:S1; [Set y19 to 1 if First Aid skill know and shown: y19]
!!VRy12|y11=0/y19=0:S0; [Reset y12 if Warfare not enabled, or no non-hidden Warfare Skill known]
!!FU&y12=1:E; [Exit if Hidden skill is a Warfare skill and another is known and shown]

!!VRy-60:S1; [Set y-60 to 1 if any hidden skill found: y-60]
!!VRy4:Sx16 +1 *3 +y1 -1; [Calculate hidden skill picture number: y4]

!!HE-1:S?y8; [Check number of displayed skills: y8]
!!VRy9|y8=0/y8=8:Sv3; [If 0 or 8 skills are displayed, used v3 for display slot: y9]
!!VRy9&y8>0/y8<8:Sy8 +1; [If more than 0 but fewer than 8 skills, use number displayed +1: y9]

!!HE-1:Sy9/?y5/1; [Skill number of skill in display slot #y9 (1..8): y5]
!!VRy6:S0; [Initialize y6 to 0]
!!HE-1&y5>=0:Sy5/?y6; [Hero's Skill Level of skill in slot v3: y6]

!!VRy7&y6>0:Sy5 +1 *3 +y6 -1; [Calculate displayed skill picture number: y7]

!!UN:N4/-1/x16; [Skill name of Hidden skill: z-1]
!!UN&y6>0:N4/-2/y5; [Skill name of Display skill: z-2]

!!IF:V2/0 V3/0; [Initialize Flags 2 and 3 to False]

!!IF&y6>0:Q2/20/y4/20/y7/2/z125028;

!!HE-1&2:Sv3/x16/1; [Set hidden skill to display slot v3]

!!IF&y6<1:Q3/20/y4/2/z125029;

!!HE-1&3:Sx16/0; [Remove hidden skill]
!!HE-1&3:Sx16/y1; [Give hidden skill]

!!FU&-2/-3:E; [If no change, exit]

!!UN:R3/-1; [Redraw hero screen]
!!VRv3&y9=v3:+1; [Increment v3 display slot counter if y9=v3: v3]

------------------------------------------------------------------------------------------------------------------

 [Loop through all displayed skills and store their number and level]

!?FU14804;
!!HE-1:Sx16/?y1/1; [Skill number of skill in display slot #x16 (1..8): y1]
!!FU&y1<0:E; [Skip if no skill there]
!!HE-1:Sy1/?y2; [Hero's Skill Level of skill in slot y1: y2]

!!VRv3:+1; [Increment v3]
!!VRy3:S70 +v3 *-1; [Index: Store skill number in y-71..y-78]
!!VRyy3:Sy1; [Store skill number: yy3]
!!VRy4:S80 +v3 *-1; [Index: Store skill level in y-81..y-88]
!!VRyy4:Sy2; [Store skill level: yy4]

------------------------------------------------------------------------------------------------------------------

 [Remove all displayed skills]

!?FU14805;
!!VRy1:S70 +x16 *-1; [Index for stored skill number in y-71..y-78: y1]
!!HE-1:Syy1/0; [Delete skill: yy1]

------------------------------------------------------------------------------------------------------------------

 [Redisplay redordered skills]

!?FU14806;
!!VRy1&x16=1:S70 +v3 *-1; [Index for last skill number: y1]
!!VRy2&x16=1:S80 +v3 *-1; [Index for last skill level: y2]

!!VRy1&x16>1:S70 +x16 -1 *-1; [Index for next skill number: y1]
!!VRy2&x16>1:S80 +x16 -1 *-1; [Index for next skill level: y2]

!!HE-1:Syy1/yy2; [Give skill to hero]

------------------------------------------------------------------------------------------------------------------

 [End of Display Hidden Skills]




********************************************************************************
   Rewritable Signs plus Right-click Display (if already visited)
********************************************************************************

Variables used: z1-z4, v1-v8
Flags used: 4
Dialogues used: DG25

 [Signs]
 [v1270 is from Passable Terrain script that places temporary signs for battles]
!$OB91&1000/v1270=0;
!!UN:P183/?y-1; [Check if script is enabled: y-1]
!!FU&y-1<>1:E; [Exit if script isn't enabled]

!!SG998:M?z1; [Current Sign Text: z1]

!!IF:Q4/z125031;

 [Enter text dialogue box for sign]
!!VRz2:S^^;
!!VRz3:Sz125032;
!!IF&4:D25/2/3/^^/^^/^^/^^/^^/^^/^^/^^/^^/^^/^^/^^/^^;
!!IF&4:F25/^^/^^/^^/^^/(TRUE); [Enable Escape Button]
!!IF&4/1000:E1/25; [Display dialogue #25: z1 keeps new text]
!!VRz1:H5; [Check if text entered: flag 5=1 if yes]

 [Set new text for sign if new text was entered]
!!SG998&4/5:Mz1;

 [Set PO:S number to show who's visited the sign]
!!OW:C?v1; [Current player: v1]
!!VRv2&v1=0:S1;   [Red]
!!VRv2&v1=1:S2;   [Blue]
!!VRv2&v1=2:S4;   [Tan]
!!VRv2&v1=3:S8;   [Green]
!!VRv2&v1=4:S16;  [Orange]
!!VRv2&v1=5:S32;  [Purple]
!!VRv2&v1=6:S64;  [Teal]
!!VRv2&v1=7:S128; [Pink]

!!PO998:S?v3; [Read PO:S number into v3]
!!VRv3:|v2; [Add player colour if it's not already there]
!!PO998:Sv3; [Write new PO:S number]

----------------------------------------------------------------------------------------------------------

 [If a sign is clicked on and it's already been]
 [visited by this player display the sign text]
!?CM0;
!!UN:P183/?y-1; [Check if script is enabled: y-1]
!!FU&y-1<>1:E; [Exit if script isn't enabled]

!!VRv1:C-1/-1/-1/-1/-1/-1; [Initialize v1 to v6 to -1]
!!CM:P?v1/?v2/?v3 S?v4; [Place clicked: v1/v2/v3, Type of click: v4]
!!OBv1/v2/v3&v1>=0:T?v5; [Object clicked: v5]
!!FU|v5<>91/v4<>14:E; [Exit if not a sign or right-click]

!!POv1/v2/v3&v5>=0:S?v6; [PO:S number: v6]
!!OW:C?v7; [Current player: v7]
!!VRv8&v7=0:S1;   [Red]
!!VRv8&v7=1:S2;   [Blue]
!!VRv8&v7=2:S4;   [Tan]
!!VRv8&v7=3:S8;   [Green]
!!VRv8&v7=4:S16;  [Orange]
!!VRv8&v7=5:S32;  [Purple]
!!VRv8&v7=6:S64;  [Teal]
!!VRv8&v7=7:S128; [Pink]
!!VRv6:&v8; [Check if this player has visited sign before: v6>0 if yes]
!!FU&v6<1:E; [Exit if sign not visited before]

!!SGv1/v2/v3:M?z1; [Current Sign Text: z1]
!!IF:Q4/-1/-1/4^%Z1^;
!!CM:R0; [Disable standard right-click function]

----------------------------------------------------------------------------------------------------------

 [End of Rewritable Signs]


********************************************************************************
   Message Disabling
********************************************************************************

Variables: v3320-v3325 (v3326-v3330 reserved)

!#VRi^wog_185_enabled^:S(TRUE);
!?FU(OnAfterErmInstructions);
!!VRz1:S^Message Disabling^; [Section name: z1]
!!DO(WOG_185_ManageDisablingStates)/3320/3325/1:P0; [Load the saved disabling states from disk file]

 [Right-click on System Options is trigger]
!?FU(OnAdventureMapRightMouseClick)&i^mouse_item^=10/i^wog_185_enabled^;
!!CM:R0; [Disable standard right-click message]
!!FU(WOG_185_MessageDisablingDlg):P;

!?FU(WOG_185_MessageDisablingDlg);
!!VRz-1:Sz125033;
!!UN:P23/?y-6; [Check if Sorcery script is enabled: y-6]
!!VRz-2:S^^; [Initialize z-2 to null]
!!VRz-2&y-6=1:Sz125034;
!!VRz-3:S^^; [Initialize z-3 to null]
!!VRz-4:S^^; [Initialize z-4 to null]
!!UN:P34/?y-9; [Check if Cards of Prophecy is enabled: y-9]
!!VRz-5:S^^; [Initialize z-5 to null]
!!VRz-5&y-9=1:Sz125037;

!!VRz-6:S^^; [Initialize z-6 to null ]
!!VRz-6&i^wog_233_enabled^:Sz125038; [Check if Quick Combat Battle Option enabled]

!!UN:P105/?y-11; [Check if Loan Bank Option enabled: y-11]
!!VRz-7:S^^; [Initialize z-7 to null]
!!VRz-7&y-11=1:Sz125039;

!!IF&1000/y-6=0/y-7=0/y-8=0/y-9=0/y-10=0/y-11=0:M1/z125040;
!!FU&y-6=0/y-7=0/y-8=0/y-9=0/y-10=0/y-11=0:E; [Exit if nothing to disable]

!!VRz1:S^Message Disabling^; [Section name: z1]
!!DO(WOG_185_ManageDisablingStates)/3320/3325/1:P0; [Load the saved disabling states from disk file]

!!OW:C?y-2; [Current Player: y-2]
!!VRy-2:+1; [Add 1 to current player value: y-2]
!!FU(WOG_CALCULATE_BIT_VALUE):Py-2/?y-100; [Get bit value for current player: y-100]
!!VRy-3:S0; [Initialize button state to 0: y-3]

!!VRy-4:Sv3320; [Set y-4 to v3320: y-4]
!!VRy-4:&y-100; [Check if Sorcery Messages are disabled: y-4]
!!VRy-3&y-4>0:+1; [Add 1 to button state if disabled: y-3]


!!VRy-4:Sv3323; [Set y-4 to v3323: y-4]
!!VRy-4:&y-100; [Check if Cards of Prophecy messages are disabled: y-4]
!!VRy-3&y-4>0:+8; [Add 8 to button state if disabled: y-3]

!!VRy-4:Sv3324; [Set y-4 to v3324: y-4]
!!VRy-4:&y-100; [Check if Quick Combat Battle messages are disabled: y-4]
!!VRy-3&y-4>0:+16; [Add 16 to button state if disabled: y-3]

!!VRy-4:Sv3325; [Set y-4 to v3325: y-4]
!!VRy-4:&y-100;                                [Check if Quick Combat Battle messages are disabled: y-4]
!!VRy-3&y-4>0:+32;                             [Add 32 to button state if disabled: y-3]

 [Display Message Disabling Dialogue Box: player's choices in v1]
!!IF:G0/1/y-3/-1/-2/-3/-4/-5/-6/-7/0/0/0/0/0/0;

!!VRy-5:Sv1;                                   [Set y-5 to v1: y-5]
!!VRy-5:&1;                                    [Check if Sorcery Messages are now disabled: y-5]
!!VRv3320:|y-100;                              [Add disabled state to v3320 for this player: v3320]
!!VRv3320&y-5=0:-y-100;                        [Remove disabled state of v3320 for this player: v3320]

!!VRy-5:Sv1;                                   [Set y-5 to v1: y-5]
!!VRy-5:&8;                                    [Check if Cards of Prophecy messages are now disabled: y-5]
!!VRv3323:|y-100;                              [Add disabled state to v3323 for this player: v3323]
!!VRv3323&y-5=0:-y-100;                        [Remove disabled state of v3323 for this player: v3323]

!!VRy-5:Sv1;                                   [Set y-5 to v1: y-5]
!!VRy-5:&16;                                   [Check if Quick Combat Battle messages are now disabled: y-5]
!!VRv3324:|y-100;                              [Add disabled state to v3324 for this player: v3324]
!!VRv3324&y-5=0:-y-100;                        [Remove disabled state of v3324 for this player: v3324]

!!VRy-5:Sv1;                                   [Set y-5 to v1: y-5]
!!VRy-5:&32;                                   [Check if Loan Bank Repayment messages are now disabled: y-5]
!!VRv3325:|y-100;                              [Add disabled state to v3325 for this player: v3325]
!!VRv3325&y-5=0:-y-100;                        [Remove disabled state of v3325 for this player: v3325]

!!DO(WOG_185_ManageDisablingStates)/3320/3325/1:P1; [Save the disabling state variables to disk file]
----------------------------------------------------------------------------------------------------------

 [Load or save the disabling state variables to/from disk file]
 [x1=0 for load, x1=1 for save]
!?FU(WOG_185_ManageDisablingStates);
!#VA(mode:x);

!!if&(mode)=0;
  !!UN:N6/2/x16/1; [Read stored message disabling number into z2]
  !!VRvx16:Vz2; [Set Message Disabling variable to stored value]
!!el;
  !!VRz2:M3/vx16; [Convert variable to string: z2]
  !!UN:N5/2/x16/1; [Save message disabling variable z2]
!!en;

----------------------------------------------------------------------------------------------------------

 [End of Message Disabling]


********************************************************************************
   Enable Extension Heroes
********************************************************************************

ERM Numbers used: 100

----------------------------------------------------------------------------------------------------------

; Warning: This script must be executed later than 72 wog - hourglass of Asmodeus!
!?FU(WOG_100_EnableExtensionHeroes);
!!UN:P100/?(extHeroOn:y); [Check if Enable Extension Heroes option is enabled]
!!UN:P106/?(hourglassOn:y); [Check if Hourglass of Asmodeus is enabled]

!!if&(extHeroOn);
  ; Enable extension heroes
  !!re i/(HERO_SIR_MULLICH)/(HERO_LAST_WOG);
    ; Skip Asmodeus if necessary
    !!co&(hourglassOn)/i=i^wog_106_Asmodeus^;

    !!HEi:R3/1/255;
  !!en;
!!en;

!#FU(WOG_100_EnableExtensionHeroes):P;

----------------------------------------------------------------------------------------------------------

 [End of Enable Extension Heroes]


********************************************************************************
   Select Neutral Town Types
********************************************************************************

ERM Numbers: 220
Variables used: v1..v4, z-1..z-10, y1..y6, y-1..y-13, x1, x16

--------------------------------------------------------------------------------

 [Select Neutral Town Types]
!?FU(OnAfterErmInstructions);
!!UN:P220/?(wogOption:y); [Check if script is enabled]
!!FU&(wogOption)<>(TRUE):E; [Exit if not enabled]


!!FU(NewIntArray):P?(allowedTowns:y);
!!FU(WOG_220_SelectTownTypes):P?(allowedTowns:y)/?(chosenTownBits:y); [Select town types]
!!SN:M(allowedTowns)/?(size:y);

!!if&(size)/(size)<=(TOWN_LAST_WOG);
  !!UN:U(OBJ_TOWN)/-1/?(numTowns:y); [Number of towns: y-11]
  !!if&(numTowns);
    !!VRv2:S-1; [Initialize v2 to -1 to work with new faster UN:U syntax]
    !!DO(WOG_220_CycleThroughTowns)/1/(numTowns)/1:P(allowedTowns:y)/(size)/(chosenTownBits:y); [Cycle through towns if any disallowed]
  !!en;
!!en;

--------------------------------------------------------------------------------

 [Select town types]
!?FU(WOG_220_SelectTownTypes);
!#VA(arrayId:x) (chosenTownBits:x);
; Read and store choices in ini
!!VR(filename:z):S^wog.ini^;
!!FU(ReadIniInts):P(filename)/^Select Neutral Town Types^/^Town_Choices_Bits^/?(chosenTownBits)/(BITS_9_MASK);
!!re i/0/8;(end_value);
  !!VR(zVar:y):Si+2 *-1;
  !!FU(WOG_Town_GetName):Pi/?z(zVar);
!!en;

!!re j;

  !!IF:G0/1/(chosenTownBits)/^%T(wog.220.header)^/-2/-3/-4/-5/-6/-7/-8/-9/-10/0/0/0;
  !!VR(chosenTownBits):Sv1;
  
  !!if&(chosenTownBits)<>0;
    !!re i/(TOWN_FIRST)/(TOWN_LAST_WOG);
      !!VR(townBits:y):S1 Sd<<i;
      !!VR(isAllowed:y):S(chosenTownBits) &(townBits);
      !!if&(isAllowed);
        !!FU(Array_Push):P(arrayId)/i;
      !!en;
    !!en;
    !!br;
  !!el;
    !!IF:M^%T(wog.220.deny)^;
  !!en;

!!en;
!!FU(WriteIniInts):P(filename)/^Select Neutral Town Types^/^Town_Choices_Bits^/(chosenTownBits);
!!FU(SaveIni):P(filename);


--------------------------------------------------------------------------------

 [Cycle through towns]
!?FU(WOG_220_CycleThroughTowns);
!#VA(townTypesArray:x) (size:x) (chosenTownBits:x);
!!UN:U98/-1/-1/2; [Store next town's coordinates in v2/v3/v4]
!!CA2:O?o; [Owner of town: y1]
!!FU&o>=0:E; [Exit function if town is owned]

!!CA2:T?y2; [Type of town: y2]
!!VRy30:S1 Sd<<y2;                      [Convert to bits]
!!VRy-12:S(chosenTownBits:x) &y30; [Check if town type is allowed]
!!FU&y-12<>(FALSE):E; [Exit function if town type is allowed]

!!VRy31:S(size:x) -1;
!!VRy32:R0/0/y31;
!!SN:M(townTypesArray:x)/y32/?y6;
!!CA2:Ty6 I0; [Set town to new allowable town type and redraw outside: y6]

!!DO(WOG_220_ChangeGarrisonMons)/0/6/1:Py6; [Change garrison creatures to match new town type]

 [Adjust Mage Guild enabling]
!!VRy7:S0;
!!CA2&y2=0/y6<>6/y6<>7:B4/4; [If old was Castle and new not Stronghold or Fortress, enable level 5 mage guild]
!!VRy7&y2=0/y6<>6/y6<>7:S5; [Generate a 5th level spell: y7=5]
!!CA2&y2=6/y6=0:B4/3; [If old was Stronghold and new is Castle, enable level 4 mage guild]
!!VRy7&y2=6/y6=0:S4; [Generate a 4th level spell: y7=4]
!!CA2&y2=7/y6=0:B4/3; [If old was Fortress and new is Castle, enable level 4 mage guild]
!!VRy7&y2=7/y6=0:S4; [Generate a 4th level spell: y7=4]
!!CA2&y2=6/y6<>0/y6<>7:B4/3 B4/4; [If old was Stronghold and new not Fortress or Castle, enable level 4 and 5 mage guilds]
!!VRy7&y2=6/y6<>0/y6<>7:S6; [Generate a 4th and 5th level spell: y7=6]
!!CA2&y2=7/y6<>0/y6<>6:B4/3 B4/4; [If old was Fortress and new not Stronghold or Castle, enable level 4 and 5 mage guilds]
!!VRy7&y2=7/y6<>0/y6<>6:S6; [Generate a 4th and 5th level spell: y7=6]

!!FU&y7=0:E; [Exit if no change to Mage Guilds]

 [Choose a new 4th level spell: y13]
!!VRy14:S13; [Initialize y14 to 13 (for 14 spells)]
!!UN:J0/7/?y15; [See if Water Walk is enabled: y15=0 if enabled]
!!VRy14&y15<>0:-1; [Subtract 1 from y14 if Water Walk disabled]
!!UN:J0/9/?y16; [See if Town Portal enabled: y12=0 if enabled]
!!VRy14&y16<>0:-1; [Subtract 1 from y14 if Town Portal disabled]
!!VRy17:S0;
!!VRy17|y7=4/y7=6:S1 Ry14; [Choose 1st 4th level spell: y17]
!!VRy13:S0;
!!VRy13&y17=1:S19;  [Chain Lightning]
!!VRy13&y17=2:S58;  [Counterstrike]
!!VRy13&y17=3:S23;  [Meteor Shower]
!!VRy13&y17=4:S38;  [Resurrection]
!!VRy13&y17=5:S50;  [Sorrow]
!!VRy13&y17=6:S59;  [Berserk]
!!VRy13&y17=7:S29;  [Fire Shield]
!!VRy13&y17=8:S56;  [Frenzy]
!!VRy13&y17=9:S22;  [Inferno]
!!VRy13&y17=10:S55; [Slayer]
!!VRy13&y17=11:S65; [Clone]
!!VRy13&y17=12:S48; [Prayer]
!!VRy13&y17=13/y15=0:S7;  [Water Walk]
!!VRy13&y17=13/y15=1:S9;  [Town Portal if Water Walk is disabled]
!!VRy13&y17=14:S9;  [Town Portal]
!!CA2&y13>0:G4 G3/0/y13; [Set 1st L4 spell: y13]

!!VRy18:S0;
!!VRy18|y7=4/y7=6:S1 Ry14; [Choose 2nd 4th level spell: y18]
!!VRy18&y18>0/y18=y17:S1 Ry14; [If a duplicate choose again: y18]
!!VRy18&y18>0/y18=y17:S1 Ry14; [If a duplicate choose again: y18]
!!VRy13:S0;
!!VRy13&y18=1:S19;  [Chain Lightning]
!!VRy13&y18=2:S58;  [Counterstrike]
!!VRy13&y18=3:S23;  [Meteor Shower]
!!VRy13&y18=4:S38;  [Resurrection]
!!VRy13&y18=5:S50;  [Sorrow]
!!VRy13&y18=6:S59;  [Berserk]
!!VRy13&y18=7:S29;  [Fire Shield]
!!VRy13&y18=8:S56;  [Frenzy]
!!VRy13&y18=9:S22;  [Inferno]
!!VRy13&y18=10:S55; [Slayer]
!!VRy13&y18=11:S65; [Clone]
!!VRy13&y18=12:S48; [Prayer]
!!VRy13&y18=13/y15=0:S7;  [Water Walk]
!!VRy13&y18=13/y15=1:S9;  [Town Portal if Water Walk is disabled]
!!VRy13&y18=14:S9;  [Town Portal]
!!CA2&y13>0:G3/1/y13; [Set 2nd L4 spell: y13]

!!VRy19:S0;
!!VRy19|y7=4/y7=6:S1 Ry14; [Choose 3rd 4th level spell for Tower: y19]
!!VRy19&y19>0/y19=y17:S1 Ry14; [If a duplicate choose again: y19]
!!VRy19&y19>0/y19=y17:S1 Ry14; [If a duplicate choose again: y19]
!!VRy19&y19>0/y19=y18:S1 Ry14; [If a duplicate choose again: y19]
!!VRy19&y19>0/y19=y18:S1 Ry14; [If a duplicate choose again: y19]
!!VRy13:S0;
!!VRy13&y19=1:S19;  [Chain Lightning]
!!VRy13&y19=2:S58;  [Counterstrike]
!!VRy13&y19=3:S23;  [Meteor Shower]
!!VRy13&y19=4:S38;  [Resurrection]
!!VRy13&y19=5:S50;  [Sorrow]
!!VRy13&y19=6:S59;  [Berserk]
!!VRy13&y19=7:S29;  [Fire Shield]
!!VRy13&y19=8:S56;  [Frenzy]
!!VRy13&y19=9:S22;  [Inferno]
!!VRy13&y19=10:S55; [Slayer]
!!VRy13&y19=11:S65; [Clone]
!!VRy13&y19=12:S48; [Prayer]
!!VRy13&y19=13/y15=0:S7;  [Water Walk]
!!VRy13&y19=13/y15=1:S9;  [Town Portal if Water Walk is disabled]
!!VRy13&y19=14:S9;  [Town Portal]
!!CA2&y13>0/y6=2:G3/2/y13; [Set 3rd L4 spell for Tower: y13]


 [Choose a 5th level spell: y9]
!!VRy10:S8; [Initialize y10 to 8 (for 9 spells)]
!!UN:J0/6/?y11; [See if Fly is enabled: y11=0 if enabled]
!!VRy10&y11<>0:-1; [Subtract 1 from y10 if Fly disabled]
!!UN:J0/8/?y12; [See if Dimension Door is enabled: y12=0 if enabled]
!!VRy10&y12<>0:-1; [Subtract 1 from y10 if Dimension Door disabled]
!!VRy8:S0;
!!VRy8|y7=5/y7=6:S1 Ry10; [Choose 1st 5th level spell: y8]
!!VRy9:S0;
!!VRy9&y8=1:S18; [Implosion]
!!VRy9&y8=2:S36; [Magic Mirror]
!!VRy9&y8=3:S40; [Sacrifice]
!!VRy9&y8=4:S66; [Fire Elemental]
!!VRy9&y8=5:S67; [Earth Elemental]
!!VRy9&y8=6:S68; [Water Elemental]
!!VRy9&y8=7:S69; [Air Elemental]
!!VRy9&y8=8/y11=0:S6;  [Fly]
!!VRy9&y8=8/y11=1:S8;  [Dimension Door if Fly is disabled]
!!VRy9&y8=9:S8;  [Dimension Door]
!!CA2&y9>0:G5 G4/0/y9; [Set L5 spell: y9]

!!VRy20|y7=5/y7=6:S1 Ry10; [Choose a 2nd 5th level spell for Tower: y20]
!!VRy20&y20>0/y20=y8:S1 Ry10; [If a duplicate choose again: y20]
!!VRy20&y20>0/y20=y8:S1 Ry10; [If a duplicate choose again: y20]
!!VRy9:S0;
!!VRy9&y20=1:S18; [Implosion]
!!VRy9&y20=2:S36; [Magic Mirror]
!!VRy9&y20=3:S40; [Sacrifice]
!!VRy9&y20=4:S66; [Fire Elemental]
!!VRy9&y20=5:S67; [Earth Elemental]
!!VRy9&y20=6:S68; [Water Elemental]
!!VRy9&y20=7:S69; [Air Elemental]
!!VRy9&y20=8/y11=0:S6;  [Fly]
!!VRy9&y20=8/y11=1:S8;  [Dimension Door if Fly is disabled]
!!VRy9&y20=9:S8;  [Dimension Door]
!!CA2&y9>0/y6=2:G5 G4/1/y9; [Set 2nd L5 spell for Tower: y9]

--------------------------------------------------------------------------------

 [Change garrison creatures to match new town type]
 [x1=town type, v2/v3/v4=coordinates]
!?FU(WOG_220_ChangeGarrisonMons);
!!CA2:M2/x16/?y1/?y2; [Type: y1, Number: y2]
!!FU|y1<0/y2=0:E; [Exit if slot empty]

!!MA:Ly1/?y3; [Level of monster (0..6): y3]
!!VRy4:S0 R1; [Random non-upgraded/upgraded: y4]
!!UN:Tx1/y3/y4/?y5; [Type of correct monster: y5]
!!CA2:M2/x16/y5/y2; [Replace with correct monster types]

--------------------------------------------------------------------------------

 [End of Select Neutral Town Types]


********************************************************************************
   Build Twice a Day in Towns 
********************************************************************************

ERM Numbers: 228

--------------------------------------------------------------------------------

 [Build Twice a Day in Towns for every player]
 [AI gets refund on the second building to compensate their outdated strategy of building]

!#UN:P228/?(wogOption:y);
!#VRi^wog_228_aiRefund_enabled^&(wogOption):S(TRUE); [Enable AI cheat]

!?FU(OnEveryDay)&i^timerOnce^;
!!UN:P228/?(wogOption:y);               [Check if Build Twice a Day option is enabled]
!!FU&(wogOption)<>(TRUE):E;             [Exit if option not enabled]

; Create array on the first day
; The array store how many times of buildings in a day for every town
!!if&i^timerDay^=1;
  !!FU(NewIntArray):P48/?i^wog_228_townBuildingBuilt^/(M_STORED);
; Reset array from the second day
!!el;
  !!re i/0/47;
    !!SN:Mi^wog_228_townBuildingBuilt^/i/0;
  !!en;
!!en;

!?FU(OnAfterBuildTownBuilding)&i^wog_228_townBuildingBuilt^;
!#VA(townId:x) (buildingId:x);

!!UN:P228/?(wogOption:y);               [Check if Build Twice a Day option is enabled]
!!FU&(wogOption)<>(TRUE):E;             [Exit if option not enabled]

; Check if it was an building event (instead of demolishing)
!!CA0/(townId):B3/(buildingId);
!!FU&-1:E;

!!SN:Mi^wog_228_townBuildingBuilt^/(townId)/?(isBuilt:y);

; Reset building status if it is the first time building
!!if&(isBuilt)=0;
  !!CA0/(townId):R(FALSE);
  !!SN:Mi^wog_228_townBuildingBuilt^/(townId)/d1;
; Gives back resources for AI if it is not the first time building
; Depending on difficulty, gives back 20% to 100% of the cost
; Only isBuilt=1 triggers resources refund in case 3rd party script building town and results in spoilage
!!el&(isBuilt)=1/i^wog_228_aiRefund_enabled^;
  !!CA0/(townId):O?(owner:y);

  !!if&(owner)>(NO_OWNER);
    !!OW:I(owner)/?(isAi:y)/?(hasLost:y);

    ; If it is AI building, calculate part of the resources used for the building
    !!if&(isAi)/(hasLost)<>(TRUE);
      !!CA0/(townId):T?(townType:y);
      !#VA(res[7]:y);
      !!FU(WOG_Town_Building_ResourceCost):P(townType)/(buildingId)/?(res[0])/?(res[1])/?(res[2])/?(res[3])/?(res[4])/?(res[5])/?(res[6]);
      !!UN:J2/?(diff:y);                [difficulty: 0-4]
      !!VR(diff):+1;                    [1-5]

      !!re i/(RES_FIRST)/(RES_LAST_SOD);
        !!VR(resBack:y):S(res[i]) *(diff) :5;
        !!OW&(resBack)>0:R(owner)/i/d(resBack);
      !!en;
    !!en;
  !!en;
!!en;

--------------------------------------------------------------------------------

 [End of Build Twice in Towns]


********************************************************************************
   Quick Combat Battle Options
********************************************************************************

ERM Numbers: 233
Variables used: v3393-v3402

--------------------------------------------------------------------------------

!?FU(WOG_233_Initialization);
; Disable the option if it is in tutorial
!!UN:C(GAME_MANAGER)/4/?(gameMgr:y);
!!UN:C(gameMgr)/128669/1/?(isTutorial:y);
!!UN&(isTutorial):P233/(FALSE);

!!UN:P233/?i^wog_233_enabled^; [Check if Quick Combat Battle option is enabled]

!#FU(WOG_233_Initialization):P;

!?FU(WOG_CreateERMHook)&i^wog_233_enabled^;
!#VA(address:x);

!!SN:E(address)/1/4337680/(WOG_233_AI_CastSpell);

!?FU(WOG_233_AI_CastSpell)&i^wog_233_isQuickCombatWithNoSpell^;
!#VA(hook:x);

!!UN:C(hook)/(STRUCT_HOOK_CONTEXT_EAX)/4/?(activeSide:y);
!!VR(owner:y):Si^battle_owner_%(activeSide)^;

!!if&i^battle_human_%(activeSide)^;
  !!SN:X?(var:y)/0;
  !!UN:C(hook)/(STRUCT_HOOK_CONTEXT_RET)/4/4337852;
!!en;

 [Start of battle trigger]
!?FU(OnBeforeBattleUniversal_Quit)&i^battle_humanOnly^=(FALSE)/i^battle_isNetwork^=(FALSE)/i^battle_aiOnly^=(FALSE)/i^wog_233_enabled^;
!!BA:E?(stateOfBattle:y); [Type of battle (0 if runs at this PC and not network battle): (stateOfBattle)]
!!FU&(stateOfBattle)<>0:E;

!!VRi^wog_233_isQuickCombatWithNoSpell^:S(FALSE);
!!BA:Q?(quickCombatStatus:y); [Store state of main Quick Combat option in i^wog_233_quickCombatStatusPlusOne^]
!!VRi^wog_233_quickCombatStatusPlusOne^:S(quickCombatStatus) +1;

; Set human player
!!re i/(BATTLE_LEFT)/(BATTLE_RIGHT);
  !!if&i^battle_human_%i^;
    !!VR(humanPlayer:y):Si^battle_owner_%i^;

    !!br;
  !!en;
!!en;

!!VR(vInd:y):S3393 +(humanPlayer); [Index for v variable storing this player's last selected option: y2]
!!VR(selectedOption:y):Sv(vInd) F1/(INT_MAX); [Last selected option: v(vInd) (v3393-v3400). If no option was selected, default to option 1]

 [** Check if Quick Combat Battle messages are disabled **]
!!VR(playerPlusOne:y):S(humanPlayer) +1; [Add 1 to (humanPlayer): y4]
!!FU(WOG_CALCULATE_BIT_VALUE):P(playerPlusOne)/?(playerBit:y); [Convert to bit number: (playerBit)]
!!VR(msgIsDisabled:y):Sv3324 &(playerBit); [Check if message is disabled for current player: y5]
 [** If y5=(playerBit), messages are disabled for current player **]

!!VRz-1:Sz125064;
!!VRz-2:Sz125065;
!!VRz-3:Sz125066;
!!VRz-4:Sz125067;
!!VRv1:S0; [Initialize v1 to 0]

!!if&(msgIsDisabled)=(FALSE);
  !!IF:G1/1/(selectedOption)/-1/-2/-3/-4/0/0/0/0/0/0/0/0/0; [Display option list unless disabled]
  !!VRv(vInd):Sv1; [Store selected option in v(vInd) (v3393-v3400) unless disabled]
!!el;
  !!VRv1:S(selectedOption); [If message disabled, use last selected option: v1]
!!en;

!!BA&v1=1:Q0; [No quick combat]
!!BA|v1=2/v1=4:Q1; [Quick combat]

!!VRi^wog_233_isQuickCombatWithNoSpell^&v1=4:S(TRUE);

 [End of battle trigger]
!?FU(OnAfterBattleUniversal)&(ERM_FLAG_IS_HUMAN)/i^wog_233_enabled^/i^wog_233_quickCombatStatusPlusOne^;
!!VR(quickCombatStatus:y):Si^wog_233_quickCombatStatusPlusOne^ -1;
!!BA:Q(quickCombatStatus);

--------------------------------------------------------------------------------

 [End of Quick Combat Battle Options]

** End of Script **
