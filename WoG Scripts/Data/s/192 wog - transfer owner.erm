ZVSE2

** TRANSFER OWNER
** ПЕРЕДАЧА ИМУЩЕСТВА ДРУГИМ ИГРОКАМ

** Option 192 by Tobyn
** Rewritten by igrik (03.03.2021)
** Updated by Archer30 (08.05.2025)

* Enables ownership transference of own heroes,
* towns, mines, dwellings, lighthouses, 
* and garrisons to any active color, incl. none.

* Shift click on a flagged object you own.

; ==================================================================================================

!#DC(WOG_OPT_TRANSFER_OWNER) = 192;

; ==================================================================================================

!#UN:P(WOG_OPT_TRANSFER_OWNER)/?(wogOption:y);
!#VRi^wog_192_dwellingEnabled^&(wogOption):S(TRUE); [Switch for dwelling transfer]

; Array for Towns and Mines
!?FU(OnAfterErmInstructions);
!!UN:P(WOG_OPT_TRANSFER_OWNER)/?(wogOption:y);  
!!FU&(wogOption)<>(TRUE):E;

!!FU(NewIntArray):P?i^wog_192_transferedObjects^/(M_STORED);

; Reset the array every week
!?FU(OnEveryDay)&i^timerOnce^/i^timerWeekDay^=1/i^timerDay^>1/i^wog_192_transferedObjects^;
!!SN:Mi^wog_192_transferedObjects^/0;

!?FU(OnAdventureMapLeftMouseClick)&999/i^key_shift^/i^mouse_action^=(MOUSE_LMB_PRESSED)/i^mouse_item^=(ITEM_ADVMAP_ADVENTURE_MAP);
!!UN:P(WOG_OPT_TRANSFER_OWNER)/?(wogOption:y);  
!!FU&(wogOption)<>(TRUE):E;

; get me player id
!!FU(WOG_GameMgr_GetPlayer_Me):P?(mePlayerId:y);

; exit if I'm not an active player
!!OW:C?(activePlayerId:y);
!!FU&(activePlayerId)<>(mePlayerId):E;

; get click coordinates
!!CM:P?(x:y)/?(y:y)/?(z:y);

; get object params
!!OB(x)/(y)/(z):T?(objectType:y) U?(objectSubype:y);

; get object entrance coordinates
!!SN:O?(x)/?(y)/?(z);

; checking for allowed objects
!!VR(isAllowedObjects:y):S(FALSE);

; list of allowed objects
; For towns and mines, they can only be transfered once a week (for all players)
!!if|(objectType)=(OBJ_TOWN)/(objectType)=(OBJ_MINE);
  !!SN:Mi^wog_192_transferedObjects^/?(size:y);

  !!re i/0/(size)/1/-1;
    !!SN:Mi^wog_192_transferedObjects^/0/?(packedValue:y);
    !!FU(UnpackUnion):P(packedValue)/?(packedX:y)/8/?(packedY:y)/8/?(packedZ:y)/8/?(packedOwner:y)/8;

    *!if&(packedX)=(x)/(packedY)=(y)/(packedZ)=(z)/(packedOwner)=i^timerOwner^;
      *!IF:M^%T(wog.192.cooldown)^;
      *!CM:R0;
      *!FU:E;
    *!en;
  !!en;

  !!VR(isAllowedObjects):S(TRUE);
!!en;

; For dwellings
!!if&i^wog_192_dwellingEnabled^;
  !!if&(objectType)=(OBJ_CREATURE_GENERATOR_1);
    !!re i/80/88;
      !!if&i=(objectSubype);
        !!UN:P(WOG_OPT_REGULAR_LEVEL8_DWELLINGS)/?(isReg:y);

        !!if&(isReg)=(FALSE);
          !!VR(monId:y):Si -80 +(MON_SUPREME_ARCHANGEL);
          !!IF:Q1/(PIC_TYPE_MONSTER)/(monId)/(MSG_TYPE_MES)/^%T(wog.192.level_8)^;
          !!CM:R0;
          !!FU:E;
        !!en;
      !!en;
    !!en;
  !!en;
    ; исправляем защитников при опции существ 8-го уровня:
  !!VR(isAllowedObjects)&(objectType)=(OBJ_CREATURE_GENERATOR_1):S(TRUE);
  !!VR(isAllowedObjects)&(objectType)=(OBJ_CREATURE_GENERATOR_4):S(TRUE);
!!en;

; For Gardens, Water Wheels and Windmills (Era Scripts Mod feature)
!!UN:P879/?(capture:y);
!!if&(capture);
  !!VR(isAllowedObjects)&(objectType)=(OBJ_MYSTICAL_GARDEN):S(TRUE);
  !!VR(isAllowedObjects)&(objectType)=(OBJ_WATER_WHEEL):S(TRUE);
  !!VR(isAllowedObjects)&(objectType)=(OBJ_WINDMILL):S(TRUE);
!!en;
!!VR(isAllowedObjects)&(objectType)=(OBJ_LIGHTHOUSE):S(TRUE);
!!VR(isAllowedObjects)&(objectType)=(OBJ_GARRISON):S(TRUE);
!!VR(isAllowedObjects)&(objectType)=(OBJ_GARRISON_2):S(TRUE);

!!FU&(isAllowedObjects)<>(TRUE):E;

; init owner var
!!VR(owner:y):S-1;

; get object owner
!!CA(x)/(y)/(z)&(objectType)=(OBJ_TOWN):O?(owner)/1;
!!MN(x)/(y)/(z)&(objectType)=(OBJ_MINE):O?(owner)/1;
!!MN(x)/(y)/(z)&(objectType)=(OBJ_LIGHTHOUSE):O?(owner)/1;
!!DW(x)/(y)/(z)&(objectType)=(OBJ_CREATURE_GENERATOR_1):O?(owner)/1;
!!DW(x)/(y)/(z)&(objectType)=(OBJ_CREATURE_GENERATOR_4):O?(owner)/1;
!!GR(x)/(y)/(z)&(objectType)=(OBJ_GARRISON):O?(owner)/1;
!!GR(x)/(y)/(z)&(objectType)=(OBJ_GARRISON_2):O?(owner)/1;
!!PO(x)/(y)/(z)|(objectType)=(OBJ_MYSTICAL_GARDEN)/(objectType)=(OBJ_WATER_WHEEL)/(objectType)=(OBJ_WINDMILL):O?(owner);

; exit if I am not the owner of this object
!!FU&(owner)<>(mePlayerId):E;

; disable standard action
!!CM:R(FALSE);

!!OW:I(PLAYER_RED)/?(isAI:y)/?(isDie:y);  

!!FU(WOG_SetupMultiPlayerDlg):P^%T(wog.192.mainMsg)^/(TRUE)/?(chosenPicture:y)/?(newOwner:y);

!!if&(chosenPicture)<>(NO_PLAYER);
  ; передаём объекты: эти не нуждаются в настройке
  !!DW(x)/(y)/(z)&(objectType)=(OBJ_CREATURE_GENERATOR_1):O(newOwner)/1;
  !!DW(x)/(y)/(z)&(objectType)=(OBJ_CREATURE_GENERATOR_4):O(newOwner)/1;
  !!MN(x)/(y)/(z)&(objectType)=(OBJ_LIGHTHOUSE):O(newOwner);
  !!GR(x)/(y)/(z)&(objectType)=(OBJ_GARRISON):O(newOwner);
  !!GR(x)/(y)/(z)&(objectType)=(OBJ_GARRISON_2):O(newOwner);
  !!if&(capture);
    !!PO(x)/(y)/(z):O(newOwner);
  !!en;
  ; передаём объекты: эти нуждаются в настройке
  !!FU(WOG_192_TownTransferOwner)&(objectType)=(OBJ_TOWN):P(x)/(y)/(z)/(newOwner);
  !!FU(WOG_192_MineTransferOwner)&(objectType)=(OBJ_MINE):P(x)/(y)/(z)/(newOwner);

  ; Set as transfered in the array
  !!if|(objectType)=(OBJ_TOWN)/(objectType)=(OBJ_MINE);
    !!FU(PackUnion):P(x)/8/(y)/8/(z)/8/i^timerOwner^/8/?(packedValue);
    !!FU(Array_Push):Pi^wog_192_transferedObjects^/(packedValue);
  !!en;
!!en;

; ==================================================================================================

!?FU(WOG_192_MineTransferOwner);
!#VA(x:x) (y:x) (z:x) (newOwnerId:x);
; ПРОБЛЕМА:
; если передаём шахту нейтральному игроку
; и в шахте есть только 1 стек охранников
; и если они не в первом (0) слоте
; то шахта в бою берётся без боя (охранников как будто нет)

; РЕШЕНИЕ: перенести охранников в первый слот

; если передаём шахту нейтральному игроку
!!if&(newOwnerId)=(NO_PLAYER);
  ; переменная: есть ли охранники
  !!VR(isGuard:y):S(FALSE);
  ; init vars
  !#VA(guardType[7]:y) (guardCount[7]:y);
  !#VA(guardTypePtr[7]:y) (guardCountPtr[7]:y);

  ; save the guards in the mine
  !!re i/(ARMY_SLOT_FIRST)/(ARMY_SLOT_LAST)/1;
    !!VR(guardTypePtr):S(@guardType) +i; 
    !!VR(guardCountPtr):S(@guardCount) +i; 
    !!MN(x)/(y)/(z):Mi/?y(guardTypePtr)/?y(guardCountPtr);    
    ; записываем в переменную, что стража существует
    !!VR(isGuard:y)&y(guardTypePtr)<>(NO_MON)/y(guardCountPtr)>0:S(TRUE); 
  !!en; 

  !!if&(isGuard)=(TRUE)/(guardType[0])=(NO_MON);
    !!re i/1/(ARMY_SLOT_LAST)/1;
      !!VR(guardTypePtr):S(@guardType) +i; 
      !!VR(guardCountPtr):S(@guardCount) +i; 

      !!if&y(guardTypePtr)<>(NO_MON);
        !!MN(x)/(y)/(z):M(ARMY_SLOT_FIRST)/y(guardTypePtr)/y(guardCountPtr);
        !!MN(x)/(y)/(z):Mi/(NO_MON)/(NULL);
        !!br;
      !!en;

    !!en; 
  !!en;
!!en; (newOwnerId)=(NO_PLAYER)

; set new mine owner
!!MN(x)/(y)/(z):O(newOwnerId);

; ==================================================================================================

!?FU(WOG_192_TownTransferOwner);
!#VA(x:x) (y:x) (z:x) (newOwnerId:x);

; ПРОБЛЕМА 1: нельзя передавать город в котором есть герои
; если гарнизонный: то этот герой тоже переходит под управление другого игрока
; если визитёр: при передаче города противнику, и в последующем посещении города этим же героем
;               этот герой будет драться со своей копией
; РЕШЕНИЕ: запретить передачу при наличии героев в городе


; ПРОБЛЕМА 2: если передать город со стражей (но без героя), то стража просто исчезнет
; РЕШЕНИЕ: сохранить стражу перед передачей, а после передачи вернуть её городу

; Get a hero in the garrison
!!CA(x)/(y)/(z):H0/?(heroUpId:y) H1/?(heroDownId:y) U?(townId:y); 

; if the harrison hero exists - can't transfer the town
!!if|(heroUpId)<>(NO_HERO)/(heroDownId)<>(NO_HERO);
  !!IF:M^%T(wog.192.heroInTown)^;
  !!FU:E;
!!en;

; если активный герой стоит на входе в город, его номер невозможно прочитать
; ни через координаты объекта, ни через CA:H1
; поэтому проверяем через номер координаты активного героя и сравниваем с координатами города
!!OW:A(CURRENT_PLAYER)/?(heroActId:y);
!!if&(heroActId)<>(NO_HERO);
  !!HE(heroActId):P?(heroX:y)/?(heroY:y)/?(heroZ:y);

  !!if&(heroX)=(x)/(heroY)=(y)/(heroZ)=(z);
    !!IF:M^%T(wog.192.heroInTown)^;
    !!FU:E;
  !!en;
!!en;

; destroy capitol
!!if&i^wog_101_map_rule_14_isEnabled^=(FALSE);
  !!OW:W(newOwnerId)/?(towns:y);
  !!if&(towns);
    !!re i/0/(towns)/1/-1;
      !!OW:W(newOwnerId)/i/?(listedTownId:y);
      !!CA0/(listedTownId):B3/13;            [Check if build cap]
      !!if&1;
        !!CA(x)/(y)/(z):B2/13 B6/12; 
        !!br;
      !!en;

    !!en;
  !!en;
!!en;

; Set up special variable - for the compatibility with other scripts
!!VRi^wog_192_%(townId)_%i(timerOwner)^:S(TRUE);

; Set up guards and transfer owner
; init vars
!#VA(guardType[7]:y) (guardCount[7]:y);

; save the guards in the town
!!re i/(ARMY_SLOT_FIRST)/(ARMY_SLOT_LAST)/1;
  !!CA(x)/(y)/(z):M2/i/?(guardType[i])/?(guardCount[i]);
  ; нужно проверить на сохранение опыта и Знамени Полководца
!!en;  

; set new town owner
!!CA(x)/(y)/(z):O(newOwnerId);

; restore the guards in the town
!!re i/(ARMY_SLOT_FIRST)/(ARMY_SLOT_LAST)/1;
  !!CA(x)/(y)/(z):M2/i/(guardType[i])/(guardCount[i]);
!!en;

; ==================================================================================================

; Reset special variables on town capturing - for the compatibility with other scripts
!?FU(WOG_OnCaptureTown);
!#VA(address:x);

!!UN:P(WOG_OPT_TRANSFER_OWNER)/?(wogOption:y);  
!!FU&(wogOption)<>(TRUE):E;

!!UN:C(address)/(STRUCT_HOOK_CONTEXT_EAX)/(UNC_INT)/?(ptr:y);
!!UN:C(ptr)/(UNC_INT8)/?(townId:y);

!!re i/(PLAYER_FIRST)/(PLAYER_LAST);
  !!VRi^wog_192_%(townId)_%i^:S(FALSE);
!!en;

** End of Script **
