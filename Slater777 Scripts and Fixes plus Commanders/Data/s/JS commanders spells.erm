ZVSE2


!?FU(js_SetCommandersSpells);
; Замок (174/183 Паладин)

; Оплот (175/184 Знахарь)

; Башня (176/185 Храмовница) - ремонт (базовая мощность 100 * 2 = 200)
!!if&i^js_amethyst^;
  !!VRi^js_TempleGuardian_basePower^:S100; hardcoded in amethyst
  !!VRi^js_TempleGuardian_spMult^:S2;
  !!VRi^js_TempleGuardian_spDiv^:S1;
  !!VRi^js_TempleGuardian_spAdd^:S0;

  !!MA:W(MON_TEMPLE_GUARDIAN_A)/^        
    Spell 1=0
    Spell 2=10
    Spell 3=0
    CreatureSpellPowerMultiplier=%i(js_TempleGuardian_spMult)
    CreatureSpellPowerDivider=%i(js_TempleGuardian_spDiv)
    CreatureSpellPowerAdder=%i(js_TempleGuardian_spAdd)
  ^;
  !!MA:W(MON_TEMPLE_GUARDIAN_D)/^        
    Spell 1=0
    Spell 2=10
    Spell 3=0
    CreatureSpellPowerMultiplier=%i(js_TempleGuardian_spMult)
    CreatureSpellPowerDivider=%i(js_TempleGuardian_spDiv)
    CreatureSpellPowerAdder=%i(js_TempleGuardian_spAdd)
  ^;
  // Замена def спелла командира
  !!SN:R^dlg_npc1.def:0_5.png^/^Data\Defs\JS_npc1.def\0_5.png^;
  // Замена имени спелла
  *!SN:E7827723/(CALLCONV_CDECL)/12/2/(ZNPC00TXT);
  *!SN:Bv1/d/^%T(jsCommanders.176.spell.name)^;
  // Замена описания спелла
  *!SN:E7827723/(CALLCONV_CDECL)/21/2/(ZNPC00TXT);
  *!SN:Bv1/d/^%T(jsCommanders.176.spell.description)^;
!!en;

; Инферно (177/186 Суккуб) - демонение (базовая мощность 50 * 2 = 100)
!!if&i^js_amethyst^;
  !!VRi^js_Succubus_basePower^:S50; hardcoded in amethyst
  !!VRi^js_Succubus_spMult^:S2;
  !!VRi^js_Succubus_spDiv^:S1;
  !!VRi^js_Succubus_spAdd^:S0;

  !!MA:W(MON_SUCCUBUS_A)/^        
    Spell 1=2
    Spell 2=0
    Spell 3=0
    Demonology=%(MON_DEMON)
    CreatureSpellPowerMultiplier=%i(js_Succubus_spMult)
    CreatureSpellPowerDivider=%i(js_Succubus_spDiv)
    CreatureSpellPowerAdder=%i(js_Succubus_spAdd)
  ^;
  !!MA:W(MON_SUCCUBUS_D)/^        
    Spell 1=2
    Spell 2=0
    Spell 3=0
    Demonology=%(MON_DEMON)
    CreatureSpellPowerMultiplier=%i(js_Succubus_spMult)
    CreatureSpellPowerDivider=%i(js_Succubus_spDiv)
    CreatureSpellPowerAdder=%i(js_Succubus_spAdd)
  ^;
  // Замена def спелла командира
  !!SN:R^dlg_npc1.def:0_7.png^/^Data\Defs\JS_npc1.def\0_7.png^;
  // Замена имени спелла
  // Замена описания спелла
!!en;

; Некрополис (178/187 Пожиратель Душ) - анимейт (базовая мощность 100 = 100)
// Фикс решения вог-команды убрать возможность анимейтить мертвый стек
!!if&i^js_amethyst^;
  !!VRi^js_SoulEater_basePower^:S100; hardcoded in amethyst
  !!VRi^js_SoulEater_spMult^:S1;
  !!VRi^js_SoulEater_spDiv^:S1;
  !!VRi^js_SoulEater_spAdd^:S0;

  !!MA:W(MON_SOUL_EATER_A)/^        
    Spell 1=0
    Spell 2=9
    Spell 3=0
    CreatureSpellPowerMultiplier=%i(js_SoulEater_spMult)
    CreatureSpellPowerDivider=%i(js_SoulEater_spDiv)
    CreatureSpellPowerAdder=%i(js_SoulEater_spAdd)
  ^;
  !!MA:W(MON_SOUL_EATER_D)/^        
    Spell 1=0
    Spell 2=9
    Spell 3=0
    CreatureSpellPowerMultiplier=%i(js_SoulEater_spMult)
    CreatureSpellPowerDivider=%i(js_SoulEater_spDiv)
    CreatureSpellPowerAdder=%i(js_SoulEater_spAdd)
  ^;
  // Замена описания спелла
  *!SN:E7827723/(CALLCONV_CDECL)/23/2/(ZNPC00TXT);
  *!SN:Bv1/d/^%T(jsCommanders.178.spell.description)^;
!!en;

; Темница (179/188 Зверь)

; Цитадель (180/189 Вождь Огров)

; Крепость (181/190 Шаман)

; Сопряжение (182/191 Астральный Дух)



************************************************************************* SPELLS - IMPROVED ANIMATE/REPAIR/RESURRECT
!?FU(js_BS_GetResurrectCount_AfterAmethystCalc);
!!FU(js_BattleMgr_ResurrectArchangelProcessing):Px1/0;

!?FU(js_BattleStack_CanCastAtEmptyHex_AfterCalcMagicPower);
!!FU(js_BattleMgr_ResurrectArchangelProcessing):Px1/1;

!?FU(js_BattleMgr_ResurrectArchangel_OnEnter);
!!FU(js_BattleMgr_ResurrectArchangelProcessing):Px1/2;

!?FU(js_BattleStack_GetMagicResistance_OnCheckMagicPower);
!!FU(js_BattleMgr_ResurrectArchangelProcessing):Px1/3;


************************************************************************* SPELLS - IMPROVED DEMONOLOGY
!?FU(js_BS_GetResurrectCount_AfterAmethystCalc2);
!!FU(js_BattleMgr_ResurrectArchangelProcessing):Px1/10;

!?FU(js_BattleStack_CanCastAtEmptyHex_AfterCalcMagicPower2);
!!FU(js_BattleMgr_ResurrectArchangelProcessing):Px1/11;


************************************************************************* SPELLS - CALCULATIONS
!?FU(js_BattleMgr_ResurrectArchangelProcessing);
!#VA(hook:x) (actionType:x);
; actionType = 0 means it is trigger (mouseover calcs) ON LIVING STACK - ANIMATE/REPAIR/RESURRECT
; actionType = 10 means it is actual spellcasting process (lmc done) - DEMONOLOGY
; actionType = 1 means it is trigger (mouseover calcs) ON AN EMPTY HEX (DEAD STACK) - ANIMATE/REPAIR/RESURRECT
; actionType = 11 means it is trigger (mouseover calcs) ON AN EMPTY HEX (DEAD STACK) - DEMONOLOGY
; actionType = 2 means it is actual spellcasting process (lmc done) - ANIMATE/REPAIR/RESURRECT
; actionType = 3 means it is calculations during magic resistance checks - ANIMATE/REPAIR/RESURRECT

!!BG:N?(activeStackNum:y);
!!BM(activeStackNum):T?(monType:y);

!!if&(monType)>=(MON_COMMANDER_FIRST_A)/(monType)<=(MON_COMMANDER_LAST_D);
  !!FU(js_GetActualStackSide):P(activeStackNum)/?(side:y);
  !!BA:H(side)/?(heroId:y);
  !!FU&(heroId)<0:E;

  !!FU(js_GetCommanderByHeroId):P(heroId)/?(commander:y);
  !!UN:C(commander)/72/4/?(spLvl:y); 48
  !!UN:C(commander)/284/4/?(lvl:y); 11C

  // Do math
  !!if&(spLvl)>0;

    !!if|(actionType)=2/(actionType)=10;
      !!UN&(actionType)=2:C(hook)/(STRUCT_HOOK_CONTEXT_EBP)/4/?(ebp:y) C(ebp)/12/4/?(power:y); C
      !!UN&(actionType)=10:C(hook)/(STRUCT_HOOK_CONTEXT_EAX)/4/?(power:y);
      ;!IF:L^power= %(power)^;
    !!el;
      !!UN:C(commander)/12/4/?(type:y); C

      // Basic power is hardcoded value in amethyst
      !!if&(type)=2; Temple Guardian
        !!VR(basicPower:y):Si^js_TempleGuardian_basePower^;
        !!VR(mult:y):Si^js_TempleGuardian_spMult^;
        !!VR(div:y):Si^js_TempleGuardian_spDiv^;
        !!VR(add:y):Si^js_TempleGuardian_spAdd^;
      !!el&(type)=3; Succubus
        !!VR(basicPower:y):Si^js_Succubus_basePower^;
        !!VR(mult:y):Si^js_Succubus_spMult^;
        !!VR(div:y):Si^js_Succubus_spDiv^;
        !!VR(add:y):Si^js_Succubus_spAdd^;        
      !!el&(type)=4; Soul Eater
        !!VR(basicPower:y):Si^js_SoulEater_basePower^;
        !!VR(mult:y):Si^js_SoulEater_spMult^;
        !!VR(div:y):Si^js_SoulEater_spDiv^;
        !!VR(add:y):Si^js_SoulEater_spAdd^;
      !!en;

      !!FU(js_CalcSpellPowerFromAmethystConfig):P(basicPower)/(mult)/(div)/(add)/?(power:y);
      ;!IF:L^power= %(power)^;
    !!en;

    !!FU(js_RecalcComandersSpPower):P(power)/(spLvl)/(lvl)/?(power);
    ;!IF:L^powerAfterRecal= %(power)^;

    !!if&(actionType)=2; patch spellPower during the cast
      !!UN:C(ebp)/12/4/(power);

    !!el&(actionType)=10; patch spellPower during the demonology casting
      !!UN:C(hook)/(STRUCT_HOOK_CONTEXT_EAX)/4/(power);
      ;!UN:C(hook)/(STRUCT_HOOK_CONTEXT_EBP)/4/?(ebp:y) C(ebp)/-4/4/(power);

    !!el&(actionType)=11; patch spellPower during the demonology mouseover empty hex
      !!UN:C(hook)/(STRUCT_HOOK_CONTEXT_EBP)/4/?(ebp:y) C(ebp)/8/4/(power);

    !!el&(actionType)=3; patch spellPower during the magic resistance calcs
      !!UN:C(hook)/(STRUCT_HOOK_CONTEXT_ESI)/4/(power);

    !!el|(actionType)=0/(actionType)=1; patch qty of resurrected creatures
      !!CM:D?(mouseHexId:y);
      !!FU(js_GetStackByHexId):P(mouseHexId)/?(target:y);
      !!FU(js_GetDeadStackByHexId)&(target)=0:P(mouseHexId)/?(target:y);
      !!UN:C(target)/108/4/?(targetHp:y); 6C
      ;!IF:L^targetHp= %(targetHp)^;

      !!if&(power)>=(targetHp);
        !!VR(monResQty:y):S(power) :(targetHp);
        ;!IF:L^monResQty2= %(monResQty)^;
        !!UN&(actionType)=0:C(hook)/(STRUCT_HOOK_CONTEXT_EAX)/4/(monResQty);
        !!UN&(actionType)=1:C(hook)/(STRUCT_HOOK_CONTEXT_EBP)/4/?(ebp:y) C(ebp)/-4/4/(monResQty);
      !!en;
    !!en;
  !!en;
!!en;


!?FU(js_CalcSpellPowerFromAmethystConfig);
!#VA(basicPower:x) (mult:x) (div:x) (add:x) (power:x);

!!VR(power):S(basicPower) *(mult) :(div) +(add);


!?FU(js_RecalcComandersSpPower);
!#VA(power:x) (spLvl:x) (lvl:x) (newPower:x);

// If max spLvl, do lvl scaling as well
!!if&(spLvl)=5;
  !!VR(lvlScaling:y):S(lvl) *10 +10; // cuz if commander is lvl 1, unc returns 0
!!en;

!!VR(newPower):S(spLvl) *50 +(power) +(lvlScaling);
;!IF:L^newPower= %(newPower)^;
