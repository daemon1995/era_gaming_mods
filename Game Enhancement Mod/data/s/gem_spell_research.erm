ZVSE2

!#DC(SRM_DLG_MAGE_GUILD) = 506;
!#DC(SRM_DLG_ASK_FOR_RESEARCH) = 507;
!#DC(SRM_DLG_SPELL_CHOICE) = 508;
!#DC(SRM_DLG_AVAILABLE_SPELLS) = 509;

!#DC(SRM_ITEM_BACKGROUND) = 45;
!#DC(SRM_ITEM_BACKGROUND_ANIM) = 6;
!#DC(STRUCT_SPELL_LEVEL)           = 24;
!#DC(SPELL_TABLE_POINTER)           = 6848424;


;spellResearch mod is rewritten in ERM 2.0
;current version is 1.4
;author - daemon_n
;original idea - HotA Crew (Horn of the Abyss game)
;requires ERA 3.9.0 +, ERA ERM Framework mod;
;used dialogs ID - 506, 507, 508, 509
;used z-vars - 1-15, 20-23, 30-32, 40, 41, 50;
;added NewSpells Mod support


!?FU(OnAfterBuildTownBuilding);    [trigger after Bulding - ERA 3.9.1+]
!?FU(OnBuildTownBuilding);
!?FU(OnAfterBuildTownBuilding)&i^srm_mod_is_enabled^;    [trigger after Bulding - ERA 3.9.1+]
!#VA(townId:x) (buildingId:x);
  !!CA0/(townId):T?(townType:y);

  !!if&(townType)=(TOWN_TOWER)/(buildingId)=22;                       [when building the library in Tower]
    !!FU(srm_remove_library_spells_from_arrays_when_built):P(townId); [start remove library_spells from_arrays_when_built FU]
  !!en;

!?FU(gem_CreateERMHook)&i^srm_mod_is_enabled^;
!!SN:Ex1/1/6109567/(gem_TownMgr_MagicGuildClick);



!?FU(gem_TownMgr_MagicGuildClick);

  !!UN:Cx1/(STRUCT_HOOK_CONTEXT_EBX)/4/?(townMgr:y) C(townMgr)/56/4/?(town:y);

  !!CA-1:G?(guildLevel:y);
  !!VR(guildId:y):S(guildLevel) -1;

  !!CA-1:U?(townId:y) T?(townType:y) B3/26;    

  !!FU&1/(townType)=(TOWN_CONFLUX)|(townId)>=i^srm_townsAmount^:E;        [if this is not town from the start or flux with graal]

    
  !!CA-1:B3/22;
  !!if&1/(townType)=(TOWN_TOWER);
    !!VR(hasLibrary:y):S(TRUE);

    !!if&i^srm_town%(townId)_has_no_library_from_start^;
      *!FU(srm_remove_library_spells_from_arrays_when_built):P(townId);   [start remove library_spells from_arrays_when_built FU]
      !!VRi^srm_town%(townId)_has_no_library_from_start^:S(FALSE);        [and it should be once]
    !!en;

  !!en;

    *!FU(FileExists):P^Mods\Game enhancement Mod\data\srm_data.pac^/?(isExist:y);
    !!UN:J8/1/^gem_hota.pac^;
    !!FU&-1:E;

    !!UN:C7505216/1/2;                  [remove shadow before DL init;]

    !!FU(srm_SetMageGuildDLGTemplate):P?z1; [Get the filename of rebuild dialogue]
    !!DL(SRM_DLG_MAGE_GUILD):Nz1;
    !!FU(srm_ManageMageGuildDLGItems):P(SRM_DLG_MAGE_GUILD)/(townId); [Customise the dialogue]

    *!FU(srm_check_spellbook)&999:P;                                               [now it's checked when the DLG opened;]

    !!OW:C?(currPlayer:y)/?(clickedPlayer:y);
    !!FU(srm_gm_rebuild_visual_set):P(townId)/(guildLevel)/(townType)/(hasLibrary);
    !!FU(srm_new_MG_DL_text_creating):P(townId)/(currPlayer)/(clickedPlayer);
    !!VRi^srm_check_spellbook1^:S(TRUE);
    !!if&i^srm_greetings_message^;
      !!VRi^srm_greetings_message^:S2;
    !!en;
    !!FU(DL_FindById):P(SRM_DLG_MAGE_GUILD)/?(dlg:y);

    !!UN:C(dlg)/(UNC_INT)/?(dlg);
    !!FU(DoT_ChangeMGBG):P(dlg)/(SRM_ITEM_BACKGROUND)/1;

    !!FU(gem_DlgItem_Show):P(SRM_ITEM_BACKGROUND_ANIM)/(FALSE)/(FALSE)/(FALSE)/(dlg);
    !!FU(gem_DlgItem_Show):P7/(FALSE)/(FALSE)/(FALSE)/(dlg);
    !!DL(SRM_DLG_MAGE_GUILD):S1;
    [AFTER DLG CLOSES]
    // cancel standard action
    !!SN:X?t/0;
    !!UN:Cx1/(STRUCT_HOOK_CONTEXT_RET)/4/6109572;


!?FU(OnCustomDialogEvent)&x1=(SRM_DLG_MAGE_GUILD)/v999>=0/v999<=42;
  !#VA(spellId:y) (townId:y) (spellPlace:y) (isSpellResearched:y);

  !!FU&v1000<>(MOUSE_LMB_PRESSED)/v1000<>(MOUSE_RMB_PRESSED):E;

  !!FU&i^srm_spell_%v999^<100:E;
  !!CA-1:U?(townId);
  !!VR(spellId)&v999<42:Si^srm_spell_%v999^ -100;
  !!VR(spellId)&v999=42/i^current_researchable_spell_in_town%(townId)^>-1:Si^current_researchable_spell_in_town%(townId)^;
  !!FU&v999=42/i^current_researchable_spell_in_town%(townId)^=-1:E;

  !!if&v1000=(MOUSE_LMB_PRESSED);


    !!if&v999<=41;
      !!VRi^srm_spell_place_in_mg^:Sv999;
    !!el;
      !!VRi^srm_spell_place_in_mg^:Si^current_researchable_spell_in_town%(townId)_place^; [allocate of the central shard ID is equal scroll]
    !!en;

    !!OW:C?(currPlayer:y)/?(clickedPlayer:y);
    !!VRi^srm_ask_research_leave_dl^:S(FALSE);

    !!FU(srm_ask_player_for_researching):P(spellId)/(townId)/(currPlayer)/(clickedPlayer);

    !!if|i^player_decided_research_spells^/i^srm_spell_research_is_confirmed^;

      !!FU(srm_display_spell_choice_DL)&i^player_decided_research_spells^:P(spellId)/(townId)/(clickedPlayer); start choice spell dialog

      !!if&i^current_researchable_spell_in_town%(townId)^>-1/i^srm_spell_research_is_confirmed^=(FALSE);

        !!DL(SRM_DLG_MAGE_GUILD):Ai^srm_spell_place_in_mg^/(DLG_CMD_SET_DEF_FRAME)/i^current_researchable_spell_in_town%(townId)^/0; [set correct def cadre on clicked in MG scroll]
        !!DL(SRM_DLG_MAGE_GUILD):Ai^srm_spell_place_in_mg^/(DLG_CMD_SET_DEF)/^TPMAGES.def^/0 Ai^srm_spell_place_in_mg^/(DLG_CMD_SET_DEF_FRAME)/1/0; [set correct def cadre on clicked in MG scroll]
        !!DL(SRM_DLG_MAGE_GUILD):A48/(DLG_CMD_SET_DEF)/^spells.def^/0 A48/(DLG_CMD_SET_DEF_FRAME)/i^current_researchable_spell_in_town%(townId)^/0; [set correct def cadre on clicked in MG scroll]
        !!DL(SRM_DLG_MAGE_GUILD):E42/1 A42/(DLG_CMD_SET_DEF)/^splsph_a.def^/0;

      !!en;

      !!if&i^srm_spell_research_is_confirmed^=(TRUE);

        !!FU(srm_accept_researchable_spell):Pi^current_researchable_spell_in_town%(townId)^/(townId)/i^srm_spell_place_in_mg^; [call FU for changing DL view]
      !!en;

      !!VR(buildSound:z):S^BUILDTWN.wav^;            [play sound]
      !!VRi^srm_spell_research_is_confirmed^:S(FALSE); deleting after dlg close;
      !!VRi^player_decided_research_spells^:S(FALSE);
      !!FU(srm_new_MG_DL_text_creating):P(townId)/(currPlayer)/(clickedPlayer);
      !!SN:P(buildSound);
      !!UN:R6/500;

      *!VRi^srm_rebuild_guild^:S(TRUE);

    !!en;

    !!VRi^srm_spell_place_in_mg^:S(NULL);

  !!en;

  !!if&v1000=(MOUSE_RMB_PRESSED);

    !!if&i^current_researchable_spell_in_town%(townId)^>-1/i^current_researchable_spell_in_town%(townId)^=(spellId);           [if click on researcheable scroll or shard]
      *!SN:H^spell^/(spellId)/(SPELL_TEXT_DESCR)/?(spellDescription:z);
      !!FU(srm_GetSpellName):P(spellId)/(SPELL_TEXT_DESCR)/?(spellDescription:z);
      !!SN:T^srm.scroll_texts.rolled_scroll^/?(rolledScrollDescription:z);
      !!IF:Q1/9/(spellId)/4/^%(rolledScrollDescription)%(spellDescription)^;                                          [show long popup on right click]
    !!el;
      !!FU(srm_spell_description_and_picture_message):P(spellId)/v1000/v999/x1;
    !!en;
  !!en;

!?FU(srm_accept_researchable_spell);
  !#VA(spellId:x) (townId:x) (realElementID:x);

    !!VR(guildLevel:y):S(realElementID) :10;
    !!VR(spellPlace:y):S(realElementID) %10;
    !!CA-1:G(guildLevel)/(spellPlace)/(spellId);                                         [accept researhable spell in town]

    !!DL(SRM_DLG_MAGE_GUILD):A(realElementID)/(DLG_CMD_SET_DEF)/^SpellScr.def^/0;                    [set opened scroll]
    !!DL(SRM_DLG_MAGE_GUILD):A(realElementID)/(DLG_CMD_SET_DEF_FRAME)/(spellId)/0;   [set correct dlg in town]
    !!FU(Array_Push):Pi^srm_town%(townId)_researched_slots^/(realElementID);          [add scroll to blocked list]
    !!DL(SRM_DLG_MAGE_GUILD):A48/(DLG_CMD_SET_DEF_FRAME)/0/0 A48/(DLG_CMD_SET_DEF)/^emptSpel.def^/0; [set correct def cadre on clicked in MG scroll]
    !!DL(SRM_DLG_MAGE_GUILD):A42/(DLG_CMD_SET_DEF_FRAME)/0/0 A42/(DLG_CMD_SET_DEF)/^emptSpel.def^/0; [hide central shard]
    !!VRi^current_researchable_spell_in_town%(townId)^:S-1;
    !!VRi^current_researchable_spell_in_town%(townId)_place^:S-1;
    !!DL(SRM_DLG_MAGE_GUILD):E42/0 E48/0;

    !!SN:Mi^srm_town%(townId)_researched_slots^/?(arraySize:y);                       [if array is not empty]
    !!FU(srm_researched_scrolls_def_replacement)&(arraySize):P(townId)/(arraySize);    [block real scroll]

!?FU(OnCustomDialogEvent)&x1=(SRM_DLG_MAGE_GUILD)/v999>=200/v999<242;
  !#VA(spellId:y) (realElementID:y);
  !!VR(realElementID):Sv999 -200;
  !!FU&i^srm_spell_%(realElementID)^<100:E;
  !!VR(spellId):Si^srm_spell_%(realElementID)^ -100;

  !!FU(srm_spell_description_and_picture_message)&v1000<>(MOUSE_LMB_RELEASED):P(spellId)/v1000/v999/x1;

!?FU(OnCustomDialogEvent)&x1=(SRM_DLG_ASK_FOR_RESEARCH);/v1000=(MOUSE_RMB_PRESSED);
  !!if&v999=15;
    !!FU(srm_spell_description_and_picture_message)|v1000=(MOUSE_LMB_PRESSED)/v1000=(MOUSE_RMB_PRESSED):Pi^srm_research_current_displayed_spell^/v1000;
  !!en;

  !!FU&v1000<>(MOUSE_LMB_RELEASED):E;

  !!if&v999=20;
    !!VRi^srm_spell_research_is_confirmed^:S(TRUE);
  !!en;

  !!if&v999=30722;
    !!VRi^player_decided_research_spells^:S(TRUE);                    [call offer spell dialog when close]
    !!CA-1:U?(townId:y);
    !!VRi^srm_%(townId)_cant_research_today^:S(TRUE); [only when pay for next research set that var to TRUE]
  !!en;


  !!DL|v999=20/v999=30721/v999=30722:C1;

!?FU(OnEveryDay)&i^timerOnce^;                 [reset ability to research each town again;]

  !!re i/0/i^srm_townsAmount^/1/-1;
    !!VRi^srm_%i_cant_research_today^:S(FALSE);
  !!en;



!?FU(srm_GetSpellLevel);
!#VA(spellId:x) (lvl:x);
  !!if&(spellId)<=(SPELL_LAST_WOG);
    !!SS(spellId):L?(lvl);
  !!el;
    !!UN:C(SPELL_TABLE_POINTER)/(UNC_INT)/?(spellsTable:y);
    !!VR(spellPtr:y):S(spellId) *(SIZEOF_SPELL_STRUCT) +(spellsTable);
    !!UN:C(spellPtr)/(STRUCT_SPELL_LEVEL)/(UNC_INT)/?(lvl);
  !!en;

!?FU(srm_ask_player_for_researching);
  !#VA(spellId:x) (townId:x) (currPlayer:x) (clickedPlayer:x);
  !!UN:C7505216/1/18;                                                 [; после закрытия диалога - вернуть параметр тени на место]
  !!DL(SRM_DLG_ASK_FOR_RESEARCH):N^srm_gm_ask^;
  !!FU(gem_DlgSetColor):P(SRM_DLG_ASK_FOR_RESEARCH)/(clickedPlayer); 


  !!DL(SRM_DLG_ASK_FOR_RESEARCH):E20/0 E21/0;                                                 [disabling "researh for free" button for evading random effects]
  !!DL(SRM_DLG_ASK_FOR_RESEARCH):A15/(DLG_CMD_SET_DEF_FRAME)/(spellId)/1;

  !!if&(spellId)=i^current_researchable_spell_in_town%(townId)^;
    !!DL(SRM_DLG_ASK_FOR_RESEARCH):A20/52/167/0 A20/53/446/0 E20/1 A21/52/166/0 A21/53/445/0; [displaying "researh for free" button]
  !!el&i^current_researchable_spell_in_town%(townId)^>-1;
    !!DL(SRM_DLG_ASK_FOR_RESEARCH):E30722/0;
  !!en;

  !!FU(srm_GetSpellLevel):P(spellId)/?(spellLevel:y);

  !!VR(researchCost:y):S(spellLevel) *2;
  !!FU(srm_CheckPlayerResources):P(clickedPlayer)/0/(researchCost)/0/(researchCost)/(researchCost)/(researchCost)/1000/?(canPay:y);


  !!if|i^srm_%(townId)_cant_research_today^/(canPay)=(FALSE);
    !!DL(SRM_DLG_ASK_FOR_RESEARCH):E30722/0;
  !!en;
  !!CA0/(townId):O?(townOwner:y);

  !!if|(currPlayer)<>(clickedPlayer)/(townOwner)<>(clickedPlayer);  [disable "researh for free/payments" buttons if not that's player turn or ally town]
    !!DL(SRM_DLG_ASK_FOR_RESEARCH):E20/0 E30722/0;
  !!en;

  !!FU(srm_ask_research_DL_text_creating):P(spellId)/(spellLevel)/(townId)/(currPlayer)/(clickedPlayer);
  !!VRi^srm_research_current_displayed_spell^:S(spellId);
  !!DL(SRM_DLG_ASK_FOR_RESEARCH):S1;

!?FU(srm_CheckPlayerResources); if res >0 then check, else then decrease
!#VA(playerID:x) (resType[7]:x) (result:x); 

  !!VR(result):S(TRUE);

  !!re i/0/(resType[SIZE])/1/-1;

    !!if&(resType[i])>0;
      !!OW:R(playerID)/i/?(resNum:y);
      !!if&(resNum)<(resType[i]);
        !!VR(result):S(FALSE);
      !!en;
    !!el;
      !!OW:R(playerID)/i/d(resType[i]);
    !!en;
  !!en;


!?FU(srm_display_spell_choice_DL);
  !#VA(spellId:x) (townId:x) (clickedPlayer:x);
  !!DL(SRM_DLG_SPELL_CHOICE):N^srm_gm_choice^;
  !!DL(SRM_DLG_SPELL_CHOICE):E1/0 E2/0;                                                         [disabling buttons vefore user press any]
  !!VRi^srm_current_user_pressed_picture^:S(NULL);

  !!FU(srm_GetSpellLevel):P(spellId)/?(spellLevel:y);
  !!VR(researchCost:y):S(spellLevel) *-2;

  !!FU(srm_CheckPlayerResources):P(clickedPlayer)//(researchCost)//(researchCost)/(researchCost)/(researchCost)/-1000;

  !!FU(srm_generate_researchable_spells):P(spellId)/(townId);
  !!FU(srm_spell_choice_DL_text_creating):Pi^firstSpellFromStore^/i^secondSpellFromStore^;
  !!DL(SRM_DLG_SPELL_CHOICE):S1;

!?FU(srm_generate_researchable_spells);
  !#VA(spellId:x) (townId:x);

    !!VR(spellGlobalPlace:y):Si^srm_spell_place_in_mg^;
    !!VR(guildLevel:y):S(spellGlobalPlace) :10;

    !!SN:Mi^srm_town%(townId)_gm%(guildLevel)_store^/?(availableSpellsToResearch:y);

    !!SN:Mi^srm_town%(townId)_gm%(guildLevel)_store^/0/?i^firstSpellFromStore^;

    !!DL(SRM_DLG_SPELL_CHOICE):A5/(DLG_CMD_SET_DEF_FRAME)/i^firstSpellFromStore^/0;             [set correct pictures in offer dialog]

    !!if|(guildLevel)=4/(availableSpellsToResearch)<2;                                          [if 5th gm Lvl or array has only 1 spell]
      !!VRi^secondSpellFromStore^:S-1;
      !!VRi^current_researchable_spell_in_town%(townId)^:Si^firstSpellFromStore^;
    !!el;
      !!SN:Mi^srm_town%(townId)_gm%(guildLevel)_store^/1/?i^secondSpellFromStore^;
      !!DL(SRM_DLG_SPELL_CHOICE):A6/(DLG_CMD_SET_DEF_FRAME)/i^secondSpellFromStore^/0; 
    !!en;

!?FU(OnCustomDialogEvent)&x1=(SRM_DLG_SPELL_CHOICE)/v999>=1/v999<=2/v1000=(MOUSE_LMB_RELEASED); [chosenSpellpellGeneratingFunction);]
  !#VA(spellId:y) (guildLevel:y) (spellPlace:y) (chosenSpell:y);


    !!VR(spellGlobalPlace:y):Si^srm_spell_place_in_mg^;
    !!VR(spellId):Si^srm_spell_%(spellGlobalPlace)^ -100;

    !!VR(guildLevel):S(spellGlobalPlace) :10;
    !!VR(spellPlace):S(spellGlobalPlace) %10;
    !!CA-1:U?(townId:y);
    !!VR(chosenSpell):Si^current_researchable_spell_in_town%(townId)^;

    !!if&v999=1;                                                         [if accepted one of the offered spells]
      !!VRi^srm_spell_research_is_confirmed^:S(TRUE);                    [set variable, that no-one spell is researched]
    !!en;

    !!if&v999=2;                                                         [if declined both offered spells]

      !!if&(spellGlobalPlace); - if it is not the first slot 
        !!CA-1:G0/0/?(existingSpell:y);                                 [set real spell in town as in 1st slot]
      !!el;
        !!CA-1:G0/1/?(existingSpell:y);                                 [set real spell in town as in 2nd slot]
      !!en;
      !!CA-1:G(guildLevel)/(spellPlace)/(existingSpell);                 [set real spell in town as we have to prevent learning bugs]

      !!VRi^current_researchable_spell_in_town%(townId)_place^:S(spellGlobalPlace); [set correct researchable spell slot]
      !!VRi^current_researchable_spell_in_town%(townId)^:S(chosenSpell); [set researchable spell in town as one of the offered before]
      !!DL(SRM_DLG_MAGE_GUILD):E42/1;                                   [enable shard]
    !!en;

    !!if|v999=1/v999=2;                                                            [if one of splells 'd been chosen]

      !!VRi^srm_spell_%(spellGlobalPlace)^:S(chosenSpell) +100;                    [setting varaiable for the next time scroll click]
      !!VRi^srm_spell_42^:S(chosenSpell) +100;                                     [setting variable for central shard]
      !!FU(NewIntArray):P?(commonSpellsList:y);
      !!FU(Array_Copy):Pi^srm_town%(townId)_gm%(guildLevel)_store^/(commonSpellsList);

      !!if&i^secondSpellFromStore^<0;
        !!SN:V(commonSpellsList)/0/-1; 
      !!el;
        !!SN:V(commonSpellsList)/0/-1 V(commonSpellsList)/1/-1; 
      !!en;



      !!if&i^current_researchable_spell_in_town%(townId)^=i^firstSpellFromStore^; [if left spell is chosen one]
        !!FU(Array_Push):P(commonSpellsList)/(spellId);
        !!FU(Array_Push):P(commonSpellsList)/i^secondSpellFromStore^;
      !!el;                                                                       [if right spell is chosen one]
        !!FU(Array_Push):P(commonSpellsList)/(spellId);
        !!FU(Array_Push):P(commonSpellsList)/i^firstSpellFromStore^;
      !!en;

      !!VRi^firstSpellFromStore^:S(NULL);                           [rezero now useless vars]
      !!VRi^secondSpellFromStore^:S(NULL);

      !!SN:M(commonSpellsList)/?(tempArrayLength:y);
      !!VR(fillArrayCount:y):S0;

      !!re i/0/(tempArrayLength)/1/-1;
        !!SN:M(commonSpellsList)/i/?(spellFromTempArray:y);

        !!if&(spellFromTempArray)>-1;
          !!SN:Mi^srm_town%(townId)_gm%(guildLevel)_store^/(fillArrayCount)/(spellFromTempArray);
          !!VR(fillArrayCount):+1;
        !!en;
      !!en;

      !!if&i^srm_town%(townId)_has_no_library_from_start^=(TRUE);                             [setting spell from array as next GM spell;]
        !!VR(scrollPosition:y):S5 -(guildLevel); 
        !!CA-1:G(guildLevel)/(scrollPosition)/?(extraLibrarySpell:y);
        !!SN:Mi^srm_town%(townId)_gm%(guildLevel)_store^/0/?(spellForSet:y);
        !!CA-1:G(guildLevel)/(scrollPosition)/(spellForSet);
      !!en;

    !!en;

  !!VRi^srm_research_current_displayed_spell^:S(NULL);
  !!VRi^srm_current_user_pressed_picture^:S(NULL);
  !!DL:C1;



!?FU(OnCustomDialogEvent)&x1=(SRM_DLG_SPELL_CHOICE)/v999>=5/v999<=6;                       [chosenSpellpellGeneratingFunction);]
  !!if&v1000=(MOUSE_LMB_PRESSED)/i^secondSpellFromStore^>=0;

    !!if&i^srm_current_user_pressed_picture^=v999;
      !!FU(srm_spell_description_and_picture_message)&v999=5:Pi^firstSpellFromStore^/v1000;
      !!FU(srm_spell_description_and_picture_message)&v999=6:Pi^secondSpellFromStore^/v1000;
    !!el;
      !!VRi^srm_current_user_pressed_picture^:Sv999;
      !!VR(correctFrameElement:y):Sv999 +10;
      !!DL(SRM_DLG_SPELL_CHOICE):A15/(DLG_CMD_SET_DEF_FRAME)/0/1 A16/(DLG_CMD_SET_DEF_FRAME)/0/1;
      !!DL(SRM_DLG_SPELL_CHOICE):A(correctFrameElement)/(DLG_CMD_SET_DEF_FRAME)/1/1;

      !!CA-1:U?(townId:y);
      !!if&v999=5;
        !!VRi^current_researchable_spell_in_town%(townId)^:Si^firstSpellFromStore^;
      !!el;
        !!VRi^current_researchable_spell_in_town%(townId)^:Si^secondSpellFromStore^;
      !!en;

    !!en;

    !!if&i^srm_current_user_pressed_picture^;
      !!DL(SRM_DLG_SPELL_CHOICE):E1/1 E2/1; [disabling buttons vefore user press any]
    !!en;

  !!el&v1000=(MOUSE_LMB_PRESSED);
    !!FU(srm_spell_description_and_picture_message)&v999=5:Pi^firstSpellFromStore^/v1000;
  !!en;



  !!if&v1000=(MOUSE_RMB_PRESSED);
    !!FU(srm_spell_description_and_picture_message)&v999=5:Pi^firstSpellFromStore^/v1000;
    !!FU(srm_spell_description_and_picture_message)&v999=6:Pi^secondSpellFromStore^/v1000;
  !!en;


!?FU(OnCustomDialogEvent)&x1=(SRM_DLG_MAGE_GUILD)/v999=30722/v1000=(MOUSE_LMB_RELEASED);
  !!re i/(SPELL_FIRST)/42;                              [resetting all useless variables]
    !!VRi^srm_spell_%i^&i^srm_spell_%i^:S(NULL);
  !!en;
  !!DL:C1;
  !!UN:C7505216/1/18;                   [return shadow after DL closing]

!?FU(srm_GetSpellName);
!#VA(spellId:x) (nameType:x) (spellName:x);
  !!if&(spellId)<=(SPELL_LAST_WOG);
    !!SN:H^spell^/(spellId)/(nameType)/?(spellDescription:z);
  !!el;
    !!UN:C(SPELL_TABLE_POINTER)/(UNC_INT)/?(spellsTable:x);
    !!VR(spellPtr:y):S(spellId) *(SIZEOF_SPELL_STRUCT) +(spellsTable);

    !!if&(nameType)=(SPELL_TEXT_NAME);
      !!VR(nameType):S(STRUCT_SPELL_NAME);

    !!el&(nameType)=(SPELL_TEXT_SHORT_NAME);
      !!VR(nameType):S(STRUCT_SPELL_SHORT_NAME);

    !!el&(nameType)=(SPELL_TEXT_DESCR);
      !!VR(nameType):S(STRUCT_SPELL_DESCR);
    !!en;

    !!UN:C(spellPtr)/(nameType)/(UNC_INT)/?(strPtr:y);
    !!SN:B(strPtr)/d/?(spellDescription);
    *!IF:L^%(strPtr)^;

  !!en;
  !!VR(spellName):Z(spellDescription);

!?FU(srm_spell_description_and_picture_message);
  !#VA(spellId:x) (clickSubtype:x)  (elementId:x) (dlgId:x) (messageType:y);
  !!FU&(clickSubtype)<>(MOUSE_LMB_PRESSED)/(clickSubtype)<>(MOUSE_RMB_PRESSED)|(spellId)>99:E;
  !!FU(srm_GetSpellName):P(spellId)/(SPELL_TEXT_DESCR)/?(spellDescription:z);
  *!SN:H^spell^/(spellId)/(SPELL_TEXT_DESCR)/?(spellDescription:z);

  !!if&(clickSubtype)=(MOUSE_LMB_PRESSED);
    !!VR(messageType):S1;
  !!el;
    !!VR(messageType):S4;
  !!en; 

  !!if&(dlgId)=(SRM_DLG_MAGE_GUILD);
    !!FU(srm_GetSpellName):P(spellId)/(SPELL_TEXT_NAME)/?(spellName:z);

    !!SN:K(spellName)/?(spellNameLength:y);
    !!VR(spellNameLength):+1;
    !!SN:K(spellDescription)/?(spellDescriptionLength:y) K(spellDescription)/0/?(firstChar:z);
    !!if&(firstChar)=^{^;
      !!VR(spellDescription):M1/(spellDescription)/(spellNameLength)/(spellDescriptionLength);
    !!el;
       !!VR(newSpellDescription:z):S^

       ^ +(spellDescription);
       !!VR(spellDescription):S(newSpellDescription);

    !!en;


    !!if&(elementId)>=200;
      !!SN:T^srm.scroll_texts.cant_change^/?(additionalText:z)/^spellName^/(spellName);
    !!el;
      !!SN:T^srm.scroll_texts.can_change^/?(additionalText:z)/^spellName^/(spellName);
    !!en;

    !!VR(spellDescription):S^%(additionalText)%(spellDescription)^;
  !!en;

  !!IF:Q1/9/(spellId)/(messageType)^%(spellDescription)^;


!?FU(srm_new_MG_DL_creating);

  !!UN:C7505216/1/2;                    [remove shadow border before DL ini]

  !!FU(srm_SetMageGuildDLGTemplate):P?z1;   [Get the filename of rebuild dialogue]
  !!DL(SRM_DLG_MAGE_GUILD):Nz1;

  !!CA-1:U?(townId:y) G?(guildLevel:y);
  *!FU(srm_DlgTown_ChangeCoords):P(SRM_DLG_MAGE_GUILD);
!?FU(srm_new_MG_DL_text_creating);      [function for displaying player resourses for MG without HD MG]
  !#VA(townId:x) (currPlayer:x) (clickedPlayer:x);

  !!CA0/(townId):O?(townOwner:y);

    !!VR(paymentLevel:y):S10;

    !!re (resType:y)/(RES_FIRST)/(RES_GOLD);
      !!OW:R(clickedPlayer)/(resType)/?(resValue:y);
      !!VR(dlgElementID:y):S50 +(resType);
      !!DL(SRM_DLG_MAGE_GUILD):A(dlgElementID)/(DLG_CMD_SET_TEXT)/^%(resValue)^/0;
      !!co|(resType)=(RES_WOOD)/(resType)=(RES_ORE);
      !!VR(paymentLevel)&(paymentLevel)>(resValue)/(resType)<>(RES_GOLD):S(resValue);
      !!VR(paymentLevel)&(resValue)<1000/(resType)=(RES_GOLD):S0;
    !!en;


    !!VR(paymentLevel)::2;

  !!re i/0/42;                              [resetting all useless variables]
    !!if&i^srm_spell_%i^;
      !!VR(zVarId:y)&i>0:Si;
      !!VR(zVarId:y)&i=0:S6;
      !!VR(spellId:y):Si^srm_spell_%i^ -100;

      !!if&(spellId)<=i^srm_MAX_SPELL_ID^;
        !!FU(srm_GetSpellName):P(spellId)/(SPELL_TEXT_NAME)/?(spellName:z);

        *!SN:H^spell^/(spellId)/(SPELL_TEXT_NAME)/?(spellName:z);
        !!FU(srm_GetSpellLevel):P(spellId)/?(spellLevel:y);
      !!el;
      
      !!en;


      !!if&i^current_researchable_spell_in_town%(townId)^>-1; [if researching is in progress]
        !!SN&i^current_researchable_spell_in_town%(townId)^<>(spellId):T^srm.hints.another_researh^/?z(zVarId)/^spellName^/(spellName);
        !!SN&i^current_researchable_spell_in_town%(townId)^=(spellId):T^srm.hints.is_researching^/?z(zVarId)/^spellName^/(spellName);
      !!el;

        !!if&i^srm_%(townId)_cant_research_today^=(FALSE);

          !!if&(currPlayer)=(clickedPlayer);
            !!SN&(paymentLevel)<(spellLevel):T^srm.hints.no_resources^/?z(zVarId)/^spellName^/(spellName);
            !!SN&(paymentLevel)>=(spellLevel)/(townOwner)=(clickedPlayer):T^srm.hints.do_research^/?z(zVarId)/^spellName^/(spellName);

            !!VRz(zVarId)&(paymentLevel)>=(spellLevel)/(townOwner)<>(clickedPlayer):S^%(spellName)^;
          !!el;
            !!VRz(zVarId):S^%(spellName)^;
          !!en;

        !!el;
          !!SN:T^srm.hints.was_researching^/?z(zVarId)/^spellName^/(spellName);
        !!en;
      !!en;

      !!DL(SRM_DLG_MAGE_GUILD):H(zVarId)/z(zVarId);

    !!en;
  !!en;



  !!SN:Mi^srm_town%(townId)_researched_slots^/?(arraySize:y); 

  !!if&(arraySize);
    !!re i/0/(arraySize)/1/-1;
      !!SN:Mi^srm_town%(townId)_researched_slots^/i/?(blockedScroll:y); [setting description for the blocked scrolls (learned spells)]
      !!VR(spellId:y):Si^srm_spell_%(blockedScroll)^ -100;
      !!co&(spellId)<0;
      !!FU(srm_GetSpellName):P(spellId)/(SPELL_TEXT_NAME)/?(spellName:z);

      *!SN:H^spell^/(spellId)/(SPELL_TEXT_NAME)/?(spellName:z);
      !!VR(realElementID:y):S200 +(blockedScroll);

      !!if&(blockedScroll)>0;

        !!SN:T^srm.hints.is_researched^/?z(blockedScroll)/^spellName^/(spellName);
        !!DL(SRM_DLG_MAGE_GUILD):H(realElementID)/z(blockedScroll);        
      !!el;

        !!SN:T^srm.hints.is_researched^/?z6/^spellName^/(spellName);
        !!DL(SRM_DLG_MAGE_GUILD):H(realElementID)/z6;
      !!en;

    !!en;
  !!en;

  !!SN:T^srm.hints.leave_mg^/?z50;

  !!DL(SRM_DLG_MAGE_GUILD):A49/(DLG_CMD_SET_TEXT)/^%T(srm.main.mg)^/0 H30722/z50 H0/z6; [idk why H0 works only from here]

*?FU(srm_new_MG_DL_hint_creating);      [function for displaying player resourses for MG without HD MG
  


!?FU(srm_ask_research_DL_text_creating);
  !#VA(spellId:x) (spellLevel:x) (townId:x) (currPlayer:x) (clickedPlayer:x);
  !#VA(headerText:z) (textForResearchInfo:z);


  !!if&i^current_researchable_spell_in_town%(townId)^=(spellId);

    !!SN:T^srm.main.cant_learn^/?(headerText);
    !!SN:T^srm.main.or_complete_it_for_free^/?(textForResearchInfo);
    !!SN:T^srm.hints.complete_for_free^/?z8;
    !!SN:T^srm.hints.pay_and_continue^/?z15;

  !!el;

    !!SN:T^srm.main.can_learn^/?(headerText);
    !!SN:T^srm.main.can_research_for_pay^/?(textForResearchInfo);
    !!SN:T^srm.hints.pay_and_start^/?z15;
  !!en;

  !!DL(SRM_DLG_ASK_FOR_RESEARCH):A1/(DLG_CMD_SET_TEXT)/(headerText)/0;

  *!SN:H^spell^/(spellId)/(SPELL_TEXT_NAME)/?(spellName:z);
  !!FU(srm_GetSpellName):P(spellId)/(SPELL_TEXT_NAME)/?(spellName:z);

  !!DL(SRM_DLG_ASK_FOR_RESEARCH):A2/(DLG_CMD_SET_TEXT)/(spellName)/0;

  !!DL(SRM_DLG_ASK_FOR_RESEARCH):A3/(DLG_CMD_SET_TEXT)/(textForResearchInfo)/0;

  !!VR(researchCost:y):S(spellLevel) *2;

  !!re i/6/9;
    !!DL(SRM_DLG_ASK_FOR_RESEARCH):Ai/(DLG_CMD_SET_TEXT)/^%(researchCost)^/0;
  !!en;
    !!DL(SRM_DLG_ASK_FOR_RESEARCH):A10/(DLG_CMD_SET_TEXT)/^1000^/0;


  !!FU(srm_CheckPlayerResources):P(clickedPlayer)/0/(researchCost)/0/(researchCost)/(researchCost)/(researchCost)/1000/?(canPay:y);

  !!if&i^current_researchable_spell_in_town%(townId)^=(spellId);

    !!if&i^srm_%(townId)_cant_research_today^;

      !!SN:T^srm.main.this_turn_was_research^/?(smallInfoLine:z);
    !!el;

      !!if&(canPay);
        !!SN:T^srm.main.available^/?(smallInfoLine:z);       
      !!el;
        !!SN:T^srm.main.no_resources^/?(smallInfoLine:z);
      !!en;

    !!en;

  !!el&i^current_researchable_spell_in_town%(townId)^>-1;

      !!SN:T^srm.main.two_rsrchs_frbdn^/?(smallInfoLine:z);

  !!el;

    !!if&i^srm_%(townId)_cant_research_today^;

      !!SN:T^srm.main.this_turn_was_research^/?(smallInfoLine:z);
    !!el;

      !!if&(canPay);
        !!SN:T^srm.main.available^/?(smallInfoLine:z);       
      !!el;
        !!SN:T^srm.main.no_resources^/?(smallInfoLine:z);
      !!en;      
    !!en;

  !!en;


  !!DL(SRM_DLG_ASK_FOR_RESEARCH):A4/(DLG_CMD_SET_TEXT)/(smallInfoLine)/0;

  !!if&1;
    !!SN:T^srm.main.no_reseraching^/?(text:z);
  !!el;
    !!SN:T^srm.main.is_reseraching^/?(text:z);
  !!en;

  !!if&1;
    
  !!en;

    *!VRz-1:S^{~>RESOURCE.def:1 align = center} {~>RESOURCE.def:3} {~>RESOURCE.def:4} {~>RESOURCE.def:5} {~>RESOURCE.def:6}^;

    *!DL(SRM_DLG_ASK_FOR_RESEARCH):A5/(DLG_CMD_SET_TEXT)/z-1/1;
    *!SN:H^spell^/(spellId)/(SPELL_TEXT_NAME)/?z7;
    !!FU(srm_GetSpellName):P(spellId)/(SPELL_TEXT_NAME)/?z7;

    !!SN:T^srm.hints.cancel^/?z9;

    !!DL(SRM_DLG_ASK_FOR_RESEARCH):H15/z7 H30722/z15 H20/z8 H30721/z9;
!?FU(srm_spell_choice_DL_text_creating);
  !#VA(leftSpellId:x) (rigthSpellId:x);

  !!if&(rigthSpellId)>=0;
    !!SN:T^srm.spell_choice.head^/?(head:z);
    *!SN:H^spell^/(rigthSpellId)/(SPELL_TEXT_SHORT_NAME)/?z4;
    !!FU(srm_GetSpellName):P(rigthSpellId)/(SPELL_TEXT_SHORT_NAME)/?z4;
    !!VRz4:M4/?(rigthSpellLength:y);
  !!el;
    !!SN:T^srm.spell_choice.head_one_spell^/?(head:z);
    !!VR(rigthSpellLength:y):S0;
    !!DL(SRM_DLG_SPELL_CHOICE):E1/1 E2/1 E6/0 E13/0 E15/0 E16/0;
    !!DL(SRM_DLG_SPELL_CHOICE):A5/52/86/0 A12/52/74/0 A6/52/86/0;
  !!en;

  !!SN:T^srm.spell_choice.accept_hint^/?z1;
  !!SN:T^srm.spell_choice.decline_hint^/?z2;

  *!SN:H^spell^/(leftSpellId)/(SPELL_TEXT_SHORT_NAME)/?z3;
  !!FU(srm_GetSpellName):P(leftSpellId)/(SPELL_TEXT_SHORT_NAME)/?z3;

  !!VRz3:M4/?(leftSpellLength:y); 

  !!if|(leftSpellLength)>15/(rigthSpellLength)>15;
    !!FU(DL_FindById):P(SRM_DLG_SPELL_CHOICE)/?(dlg:y);
    !!UN:C(dlg)/(UNC_INT)/?(dlg);
    
    !!FU(gem_DlgItem_Size):P12/d/d20/(FALSE)/(dlg);
    !!FU(gem_DlgItem_Size):P13/d/d20/(FALSE)/(dlg);
  !!en;

  !!DL(SRM_DLG_SPELL_CHOICE):A11/(DLG_CMD_SET_TEXT)/(head)/0 A12/(DLG_CMD_SET_TEXT)/z3/0;
  !!DL(SRM_DLG_SPELL_CHOICE):H1/z1 H2/z2 H5/z3;

  !!if&(rigthSpellId)>=0;
    !!DL(SRM_DLG_SPELL_CHOICE):A13/(DLG_CMD_SET_TEXT)/z4/0 H6/z4;
  !!en;

!?FU(gem_OnDlgProcessAction)|i^srm_check_spellbook1^=(TRUE)/i^srm_greetings_message^=2;
  !!if&i^srm_greetings_message^;
    !!VRi^srm_greetings_message^:S0;
    !!SN:T^srm.help.head^/?(head:z);
    !!SN:T^srm.help.body^/?s^srm_availableSpellsToResearchList^;
    !!SN:T^srm.help.info^/?(info:z);
    !!IF:M^%(head)%s(srm_availableSpellsToResearchList)%(info)^;
    !!SN:W^srm_availableSpellsToResearchList^;
  !!en;

  !!if&i^srm_check_spellbook1^;
    !!VRi^srm_check_spellbook1^:S(FALSE);
    !!FU(srm_check_spellbook)&999:P;
  !!en;



// SHOW HINT
!?FU(OnCustomDialogEvent)&x1=(SRM_DLG_MAGE_GUILD)/v999=43/v1000<>(MOUSE_LMB_PRESSED);
  !!CA-1:U?(townId:y) G?(guildLevel:y);

  !!VR(guildLevel):-1;
  !!IF:V2/(TRUE);
  !!if&v1000=(MOUSE_LMB_RELEASED);
    !!SN:T^srm.help.head^/?(head:z);
    !!SN:T^srm.help.body^/?s^srm_availableSpellsToResearchList^;
    !!SN:T^srm.help.ask^/?(ask:z);

    !!IF:Q2^%(head)%s(srm_availableSpellsToResearchList)%(ask)^;
    !!SN:W^srm_availableSpellsToResearchList^;
  !!en;
  !!FU(srm_Dlg_spells_to_research_Create)&2:P(SRM_DLG_AVAILABLE_SPELLS)/(townId)/(guildLevel)/v1000;

!?FU(OnCustomDialogEvent)&x1=(SRM_DLG_AVAILABLE_SPELLS)/i^mouse_action^=(MOUSE_LMB_RELEASED)/i^mouse_item^>=30721/i^mouse_item^<=30722;
!!DL:C1;

!?FU(OnCustomDialogEvent)&x1=(SRM_DLG_AVAILABLE_SPELLS)/i^mouse_item^>=(SPELL_FIRST)/i^mouse_item^<=i^srm_MAX_SPELL_ID^/i^mouse_action^<>(MOUSE_LMB_RELEASED);

  !!FU(srm_GetSpellName):Pi^mouse_item^/(SPELL_TEXT_DESCR)/?(text:z);
  !!IF:Q1/(PIC_TYPE_SPELL)/i^mouse_item^/(MSG_TYPE_POPUP)^%(text)^;



!?FU(srm_Dlg_spells_to_research_Create);
!#VA(dlgId:x) (townId:x) (guildLevel:x) (clickSubtype:x);
  !!UN:C7505216/1/18;                                               [enable shadow]

  !!DL(dlgId):N^gAvSpDlg.txt^;

  !!if&(TRUE);
    !!FU(DL_FindById):P(dlgId)/?(dlgPtr:y);
    !!UN:C(dlgPtr)/4/?(dlg:y);
    !!OW:Cd/?(clickedPlayer:y);

    !!FU(gem_DlgSetColor):P(dlgId)/(clickedPlayer);
    !!re i/0/116;
      !!FU(gem_DlgItem_Show):Pi/0/0/0/(dlg);
    !!en;
    !!SN:T^srm.help.levelSpellsHead^/?(head:z);

    !#VA(dlgItemId:y);
    !!DL(dlgId):A210/(DLG_CMD_SET_TEXT)/(head)/0;
    !!VR(yPos:y):S42;

    !!re i/0/(guildLevel);
      !!SN:Mi^srm_town%(townId)_gm%i_store^/?(arraySize:y);

      !!if&(arraySize);
        !!VR(realGm:y):Si +1;
        !!SN:T^srm.help.levelSpells^/?(onLvlTxt:z)/^guild^/(realGm);
        !!VR(dlgItemId):S200 +i;
        !!DL(dlgId):A(dlgItemId)/53/(yPos)/0 A(dlgItemId)/(DLG_CMD_SET_TEXT)/(onLvlTxt)/0;
        !!VR(yPos:y):+18;

        !!FU(NewIntArray):P?(tempSpellListarray:y);
        !!FU(Array_Copy):Pi^srm_town%(townId)_gm%i_store^/(tempSpellListarray);
        !!FU(Array_Sort):P(tempSpellListarray);
        !!VR(xPos:y):S16;

        !!re (itemId:y)/0/(arraySize)/1/-1;
          !!SN:M(tempSpellListarray)/(itemId)/?(spellId:y);

          !!VR(dlgItemId):S(spellId);
          !!FU(gem_DlgItem_Show):P(dlgItemId)/(TRUE)/0/0/(dlg);

          !!VR(spellId):+1;               [for SpellInt.def only. Disable this line if Spells.def is used]
          !!if&(xPos)>552;
            !!VR(yPos:y):+40;
            !!VR(xPos):S16;
          !!en;

          !!DL(dlgId):A(dlgItemId)/52/(xPos)/0 A(dlgItemId)/53/(yPos)/0 A(dlgItemId)/(DLG_CMD_SET_DEF_FRAME)/(spellId)/0;

          !!VR(xPos):+52;

        !!en;
        !!VR(yPos:y):+40;
      !!en;
    !!en;

    !!if&(clickSubtype)=(MOUSE_LMB_RELEASED);
      !!DL(dlgId):S;
    !!el;
      !!re i/30720/37222;
        !!FU(gem_DlgItem_Show):Pi/(FALSE)/0/0/(dlg);
      !!en;

      !!FU(DL_ShowPopup):P(dlgId);
    !!en;
    
  !!en;



!?FU(srm_remove_library_spells_from_arrays_when_built);
  !#VA(townId:x) (guildLevel:y);
  !!VR(hasLibrary:y):S(TRUE);                                            [of course it is :demonr:]
  !!re (guildLevel)/0/4;

    !!VR(scrollPosition:y):S5 -(guildLevel);
    !!CA0/(townId):G(guildLevel)/(scrollPosition)/?(extraLibrarySpell:y);
    !!SN:Mi^srm_town%(townId)_gm%(guildLevel)_store^/?(arraySize:y);


    !!co&(arraySize)<1;
    !!VR(localArrayCount:y):S0;

    !!re i/0/(arraySize)/1/-1;
      !!SN:Mi^srm_town%(townId)_gm%(guildLevel)_store^/i/?(spellForCheck:y);

      !!if&(spellForCheck)<>(extraLibrarySpell)/(extraLibrarySpell)>=(SPELL_FIRST);
        !!SN:Mi^srm_town%(townId)_gm%(guildLevel)_store^/(localArrayCount)/(spellForCheck);
        !!VR(localArrayCount):+1;
      !!en;

    !!en;


    !!SN:Mi^srm_town%(townId)_gm%(guildLevel)_store^/d-1; [resize array when library is build and spell is removed from its]
    !!SN:Mi^srm_town%(townId)_gm%(guildLevel)_store^/?(availableSpellsToResearch:y);

    !!if&(availableSpellsToResearch)=0;
      *!VR(maxScrollsOnLevel:y):S5 -(guildLevel) +(hasLibrary);
      !!CA0/(townId):G(guildLevel)/?(maxScrollsOnLevel:y);
      !!re i/0/(maxScrollsOnLevel)/1/-1;
        !!VR(itemId:y):S(guildLevel) *10 + i;
        !!FU(Array_Push):Pi^srm_town%(townId)_researched_slots^/(itemId);
        !!if&(itemId)=i^current_researchable_spell_in_town%(townId)_place^;
          !!CA0/(townId):G(guildLevel)/i/i^current_researchable_spell_in_town%(townId)^;  [accept researhable spell in town]
          !!VRi^current_researchable_spell_in_town%(townId)^:S-1;
          !!VRi^current_researchable_spell_in_town%(townId)_place^:S-1;
        !!en;
      !!en;

    !!en;


  !!en;

!?FU(OnGameEnter)&i^srm_mod_is_enabled^;
  !!UN:J8/5/^gem_spell_research.erm^;
  !!VRi^srm_mod_is_enabled^&-1:S(FALSE);

!?FU(OnAfterErmInstructions);
  !!VR(filePath:z):S^Runtime/game_enhancement_mod.ini^;
  !!FU(ReadIniInts):P(filePath)/^main^/^srm_greetings^/?i^srm_greetings_message^/1;
  !!if&i^srm_greetings_message^;
    !!FU(WriteIniInts):P(filePath)/^main^/^srm_greetings^/0; [save battle save option only when plugin is disabled]
    !!FU(SaveIni):P(filePath);
  !!en;

*!re i/0/4;


  !!SN:F^PluginExists^/^NewSpells^;
  !!if&v1;
    !!VR(spellsNum:y):V^%T(gem_spell_research.NewSpells.SPELLS_NUM)^;
    !!VRi^srm_MAX_SPELL_ID^:S(spellsNum) -1;
    *!IF:M^%i(srm_MAX_SPELL_ID)^;
    !!UN:C7551021/3/1/(spellsNum); // un:j0 Patch
    *!VRy44:S(SIZEOF_SPELL_STRUCT) *126;
    *!SN:L^era.dll^/?y1 Ay1/^RedirectMemoryBlock^/?y2;
    *!UN:C(SPELL_TABLE_POINTER)/4/?y22;
    *!SN:Ey2/(CALLCONV_STDCALL)/(ADDR_WOG_SPELLS_TABLE)/y22/y44;
  !!el;
    !!VRi^srm_MAX_SPELL_ID^:S(SPELL_LAST_WOG);
  !!en;


!?FU(OnAfterErmInited)&i^gem_option_5_ini^;

!!VRi^srm_mod_is_enabled^:S(TRUE);
!!UN:U(OBJ_TOWN)/(ANY_OBJ)/?i^srm_townsAmount^;
!!UN:U(OBJ_RANDOM_TOWN)/(ANY_OBJ)/?(randomTownsAmount:y);
!!VRi^srm_townsAmount^&(randomTownsAmount):+(randomTownsAmount);

!!UN:C(SPELL_TABLE_POINTER)/4/?(spellsTable:y);
*!IF:M^%(spellsTable)^;

!!re (townId:y)/(MAP_TOWN_FIRST)/i^srm_townsAmount^/1/-1;
  !!FU(srm_SetUpTown):P(townId)/(spellsTable);
!!en;


!?FU(srm_SetUpTown);
  !#VA(townId:x) (spellsTable:x);

  !!CA0/(townId):T?(townType:y);
  !!VRi^current_researchable_spell_in_town%(townId)^:S-1;
  !!VRi^current_researchable_spell_in_town%(townId)_place^:S-1;

  !!if|(townType)=(TOWN_STRONGHOLD)/(townType)=(TOWN_FORTRESS);
    !!VR(maxGm:y):S2;
  !!el&(townType)=(TOWN_CASTLE);
    !!VR(maxGm:y):S3;
  !!el;
    !!VR(maxGm:y):S4;
  !!en;


  !!re (guildLevel:y)/0/(maxGm);
    !!SN:M(M_AUTO_ID)/0/(M_INT)/(M_STORED)/?i^srm_town%(townId)_gm%(guildLevel)_store^;;
  !!en;

  !!SN:M(M_AUTO_ID)/0/(M_INT)/(M_STORED)/?i^srm_town%(townId)_researched_slots^; [create empty arrays for in the future spells research]

  !!VR(hasLibrary:y):S(FALSE);

  !!if&(townType)=(TOWN_TOWER);
    !!CA0/(townId):B3/22;                                                   [check if has library in Tower]
    !!VR(hasLibrary)&1:S(TRUE);
    !!VRi^srm_town%(townId)_has_no_library_from_start^&-1:S(TRUE);
  !!en;

  !!re (spellForCheck:y)/(SPELL_FIRST)/i^srm_MAX_SPELL_ID^;(GEM_SPELLS_NUM)/1/-1;(SPELL_LAST_WOG);                                            [loop all spells]

    !!if&(spellForCheck)<=(SPELL_LAST_WOG);
      !!UN:J0/(spellForCheck)/?(isSpellRestricted:y);
        !!co&(isSpellRestricted);                                                                       [if spell is banned  then skip round;]

      !!SS(spellForCheck):H(townType)/?(appearChance:y);
        !!co&(appearChance)<1;                                                                          [if spell can't appear then skip round;]

    !!el;

      !!VR(spellPtr:y):S(spellForCheck) *(SIZEOF_SPELL_STRUCT) +(spellsTable);
      !!UN:C(spellPtr)/12/(UNC_INT8)/?(flags:y);
      !!VR(flags):&8;                                                                        [check if creature spell]
        !!co&(flags);                                                                          [if spell is creature spell then skip round;]

      !!VR(offset:y):S(townType) *(UNC_INT) +68;
      !!UN:C(spellPtr)/(offset)/(UNC_INT)/?(appearChance:y);

        !!co&(appearChance)<1;                                                                          [if spell can't appear then skip round;]
    !!en;

    !!FU(srm_GetSpellLevel):P(spellForCheck)/?(spellLevel:y);
    !!VR(guildLevel):S(spellLevel) -1;
      !!co|(guildLevel)>(maxGm)/(guildLevel)<0;                                                                          [if spell can't appear then skip round;]

    !!if&(spellForCheck)<=(SPELL_LAST_WOG);
      
      !!FU(Town_IsSpellBanned):P(townId)/(spellForCheck)/?(isBanned:y);
      !!co&(isBanned);                                                                          [if spell can't appear then skip round;]

    !!en;

    !!FU(srm_CheckIfSpellIsAlreadyInTown):P(townId)/(spellForCheck)/(guildLevel)/(hasLibrary)/?(isSpellFree:y);   [check if spell is now at any position in town]
      *!IF&(spellForCheck)>=85/(spellForCheck)<=87:M^%(spellForCheck) %(isSpellFree)^;

    !!FU(Array_Push)&(isSpellFree)=(TRUE):Pi^srm_town%(townId)_gm%(guildLevel)_store^/(spellForCheck); [if spell is free, then add in array]
  !!en;

  !!if&(townId)=0;
    !!SN:Mi^srm_town%(townId)_gm4_store^/?(arraySize:y);

    !!re i/0/(arraySize)/1/-1;
      !!SN:Mi^srm_town%(townId)_gm4_store^/i/?j;

      !!if&j>70;

      !!en;
    !!en;
  !!en;


************  AFTER ADDING ALL SPELLS TO RESEARCH IN THE ARRAYS DO THIS:  ************************* 

  !!re (guildLevel:y)/0/4;                                                                             [after all the spells loops - loop all mg lvls]
    !!br&(guildLevel)=3/(townType)=(TOWN_STRONGHOLD);  
    !!br&(guildLevel)=3/(townType)=(TOWN_FORTRESS);
    !!br&(guildLevel)=4/(townType)=(TOWN_CASTLE); 
    !!FU(Array_Shuffle):Pi^srm_town%(townId)_gm%(guildLevel)_store^;                                   [shuffle all the arrays]

    !!if&(townType)=(TOWN_TOWER)/i^srm_town%(townId)_has_no_library_from_start^;                    [if tower has no library from start]
      !!VR(scrollPosition:y):S5 -(guildLevel);
      !!CA0/(townId):G(guildLevel)/(scrollPosition)/?(extraLibrarySpell:y);                            [check each latest scroll in each gm lvl]

      !!if&(extraLibrarySpell)>=(SPELL_FIRST);                                                           [only if extra slot has spell]
        !!SN:Mi^srm_town%(townId)_gm%(guildLevel)_store^/?(arraySize:y);                                 [get research array size]

        !!FU(NewIntArray):P?(mainArrayLocalCopy:y);
        !!FU(Array_Copy):Pi^srm_town%(townId)_gm%(guildLevel)_store^/(mainArrayLocalCopy);               [copy to local array]
        !!SN:Mi^srm_town%(townId)_gm%(guildLevel)_store^/1;                                              [set array size = to  1]
        !!SN:Mi^srm_town%(townId)_gm%(guildLevel)_store^/0/(extraLibrarySpell);                          [set extraLibrarySpell to the 0th array elem]

        !!re i/0/(arraySize)/1/-1;
          !!SN:M(mainArrayLocalCopy)/i/?(spellFromArray:y);                                           [check each its spell]

          !!if&(extraLibrarySpell)<>(spellFromArray);                                                 [except extraLibrarySpell ID]
            !!FU(Array_Push):Pi^srm_town%(townId)_gm%(guildLevel)_store^/(spellFromArray);                 [filling the main array with itself and only from 1st (not 0th) element]
          !!en;
        !!en;
      !!en;
    !!en;

    !!SN:Mi^srm_town%(townId)_gm%(guildLevel)_store^/?(availableSpellsToResearch:y);

    !!if&(availableSpellsToResearch)<1;
      *!VR(maxScrollsOnLevel:y):S5 -(guildLevel) +(hasLibrary);
      !!CA0/(townId):G(guildLevel)/?(maxScrollsOnLevel:y);

      !!re i/0/(maxScrollsOnLevel)/1/-1;
        !!VR(itemId:y):S(guildLevel) *10 + i;
        !!FU(Array_Push):Pi^srm_town%(townId)_researched_slots^/(itemId);
      !!en;
    !!en;
  !!en;

!?FU(srm_CheckIfSpellIsAlreadyInTown);
  !#VA(townId:x) (spellForCheck:x) (guildLevel:x) (hasLibrary:x) (isSpellFree:x);
  !!VR(maxScrollsOnLevel:y):S5 -(guildLevel) +(hasLibrary);
  !!VR(isSpellFree):S(TRUE);
  *!IF&(guildLevel)<0:M^%(guildLevel) %(spellForCheck))^;
  !!re (scrollPosition:y)/0/(maxScrollsOnLevel)/1/-1;
    !!CA0/(townId):G(guildLevel)/(scrollPosition)/?(spellOnPosition:y);

    !!if&(spellForCheck)=(spellOnPosition);
      !!VR(isSpellFree):S(FALSE);
      !!br;
    !!en;
  !!en;

!?FU(srm_gm_rebuild_visual_set);
  !#VA(townId:x) (guildLevel:x) (townType:x) (hasLibrary:x);

  !!FU(NewStrArray):P?(mgWindowViews:y); 
  !!FU(Array_Push):P(mgWindowViews)/^CS^/^RM^/^TW^/^IN^/^NC^/^DN^/^ST^/^FR^/^El^; [setting view from MG]

  !!SN:M(mgWindowViews)/(townType)/?(mgCurrentWindowView:z);
  !!DL(SRM_DLG_MAGE_GUILD):A44/(DLG_CMD_SET_PCX)/^TPMAGE%(mgCurrentWindowView).PCX^/0; 

  !!VR(maxGuildLevel:y):S4;
  !!VR(maxGuildLevel)|(townType)=(TOWN_CASTLE):-1;
  !!VR(maxGuildLevel)|(townType)=(TOWN_STRONGHOLD)/(townType)=(TOWN_FORTRESS):-2;
  !!DL(SRM_DLG_MAGE_GUILD):E42/0; disa

  !!FU(DL_FindById):P(SRM_DLG_MAGE_GUILD)/?(dlgPtr:y);
  !!UN:C(dlgPtr)/(UNC_INT)/?(dlg:y);

  !!if&(guildLevel);

    !!re i/0/4; loop all gm's
      !!CA-1:Gi/?(guildLevelSpellsAmount:y);
      !!VR(maxScrollsOnLevel:y):S5 -i +(hasLibrary);

      ; Mark all the spells in the level as researched if there is not enough spell in the level (banned by map editor or scripts)
      ; by Archer30
      !!if&(guildLevelSpellsAmount)<(maxScrollsOnLevel);
        !!re k/0/(guildLevelSpellsAmount)/1/-1;
          !!VR(itemId:y):Si *10 + k;
          !!VR(coverId:y):S200 +(itemId);
          !!FU(gem_DlgItem_Position):P(itemId)/?(x:y)/?(y:y)/d/(dlg);
          !!VR(y):-5;
          !!FU(gem_DlgItem_Position):P(coverId)/(x)/(y)/d/(dlg);
        !!en;
      !!en;

      !!re j/0/(maxScrollsOnLevel);
        !!VR(spellPlace:y):Si *10 +j;
        !!co|(spellPlace)=6/(spellPlace)=15/(spellPlace)=24/(spellPlace)=33/(spellPlace)=42;

        !!if&i<=(maxGuildLevel)/j<(guildLevelSpellsAmount);
          !!CA-1:Gi/j/?(spellId:y);

          !!if&(spellPlace)<>i^current_researchable_spell_in_town%(townId)_place^;
            !!DL(SRM_DLG_MAGE_GUILD):A(spellPlace)/(DLG_CMD_SET_DEF_FRAME)/(spellId)/(TRUE); set corret img on the set place
            !!VRi^srm_spell_%(spellPlace)^:S(spellId) +100;
          !!el;&i^current_researchable_spell_in_town%(townId)^>-1;
            !!DL(SRM_DLG_MAGE_GUILD):A(spellPlace)/(DLG_CMD_SET_DEF)/^TPMAGES.def^/0 A(spellPlace)/(DLG_CMD_SET_DEF_FRAME)/1/(FALSE) A(spellPlace)/61/63/0;
            !!VRi^srm_spell_%(spellPlace)^:Si^current_researchable_spell_in_town%(townId)^ +100; [setting var for clossed scroll entry]
            !!VRi^srm_spell_42^:Si^srm_spell_%(spellPlace)^;                                     [setting var for central shard entry]
            !!DL(SRM_DLG_MAGE_GUILD):A48/(DLG_CMD_SET_DEF)/^spells.def^/0 A48/(DLG_CMD_SET_DEF_FRAME)/i^current_researchable_spell_in_town%(townId)^/(FALSE);
            !!DL(SRM_DLG_MAGE_GUILD):E42/1 A42/(DLG_CMD_SET_DEF)/^splsph_a.def^/0;
          !!en;



          *!if&(spellId)>=(SPELL_FIRST)/(spellId)<=(SPELL_LAST_WOG);
            *!DL(SRM_DLG_MAGE_GUILD):A(spellPlace)/(DLG_CMD_SET_DEF_FRAME)/(spellId)/(TRUE); set corret img on the set place
            *!VRi^srm_spell_%(spellPlace)^:S(spellId) +100;
          *!el;
            *!DL(SRM_DLG_MAGE_GUILD):A(spellPlace)/(DLG_CMD_SET_DEF)/^TPMAGES.def^/0 A(spellPlace)/(DLG_CMD_SET_DEF_FRAME)/1/(FALSE) A(spellPlace)/61/63/0;
            *!VRi^srm_spell_%(spellPlace)^:Si^current_researchable_spell_in_town%(townId)^ +100; [setting var for clossed scroll entry]
            *!VRi^srm_spell_42^:Si^srm_spell_%(spellPlace)^;                                     [setting var for central shard entry]
            *!DL(SRM_DLG_MAGE_GUILD):A48/(DLG_CMD_SET_DEF)/^spells.def^/0 A48/(DLG_CMD_SET_DEF_FRAME)/i^current_researchable_spell_in_town%(townId)^/(FALSE);
            *!DL(SRM_DLG_MAGE_GUILD):E42/1 A42/(DLG_CMD_SET_DEF)/^splsph_a.def^/0;
          *!en;

        !!en;

        !!if|i>(maxGuildLevel)/j=(maxScrollsOnLevel);
          !!DL(SRM_DLG_MAGE_GUILD):A(spellPlace)/52/331/1 A(spellPlace)/53/150/1;
          !!co;
        !!en;

        !!if&i<=(maxGuildLevel)/j>=(guildLevelSpellsAmount);
          !!DL(SRM_DLG_MAGE_GUILD):A(spellPlace)/(DLG_CMD_SET_DEF)/^TPMAGES.def^/0 A(spellPlace)/(DLG_CMD_SET_DEF_FRAME)/1/(FALSE);
        !!en;

      !!en;

    !!en;

    !!SN:Mi^srm_town%(townId)_researched_slots^/?(arraySize:y);
    !!FU(srm_researched_scrolls_def_replacement)&(arraySize):P(townId)/(arraySize);
  !!en;

!?FU(srm_researched_scrolls_def_replacement);
  !#VA(townId:x) (arraySize:x);
  !#VA(coverId:y) (x:y) (y:y);

  !!FU(DL_FindById):P(SRM_DLG_MAGE_GUILD)/?(dlgPtr:y);
  !!UN:C(dlgPtr)/(UNC_INT)/?(dlg:y);

  !!re i/0/(arraySize)/1/-1;                                            [such times how array is size]
    !!SN:Mi^srm_town%(townId)_researched_slots^/i/?(itemId:y);             [read exh element]
    !!VR(coverId):S200 +(itemId);

    !!FU(gem_DlgItem_Position):P(itemId)/?(x)/?(y)/d/(dlg);
    !!VR(y):-5;
    !!FU(gem_DlgItem_Position):P(coverId)/(x)/(y)/d/(dlg);
  !!en;

!?FU(srm_check_spellbook);
  !#VA(guestHeroHasSpellBook:y) (garnHeroHasSpellBook:y);

  !!CA-1:H0/?(garnHero:y) H1/?(guestHero:y);

  !!FU&(garnHero)=(NO_HERO)/(guestHero)=(NO_HERO):E;

  !!if&(guestHero)<>(NO_HERO);
    !!HE(guestHero):A2/(ART_SPELL_BOOK)/d/?(guestHeroHasSpellBook);

    !!if&(guestHeroHasSpellBook);
      !!FU:E;
    !!el;
      !!FU(srm_buy_spell_book):P(guestHero);
    !!en;

  !!el;
    !!HE(garnHero):A2/(ART_SPELL_BOOK)/d/?(garnHeroHasSpellBook);

    !!if&(garnHeroHasSpellBook);
      !!FU:E;
    !!el;
      !!FU(srm_buy_spell_book):P(garnHero);
    !!en;
  !!en;


!?FU(srm_buy_spell_book);
  !#VA(heroId:x);


  !!if&(heroId)=45;
    !!UN:C6911900/1/?(isCampaign:y);

    !!if&(isCampaign);
      !!VR(campIdOffset:y):S128088 +4;
      !!UN:C(GAME_MANAGER)/4/?(gameMgr:y) C(gameMgr)/(campIdOffset)/4/?(bigCampaignIndex:y);
      !!if&(bigCampaignIndex:y);
        !!FU(GetTextFileString):P^genrltxt^/737/?(cantBuy:z);
        !!IF:M^%(cantBuy)^;

        !!FU:E;
      !!en;
    !!en;

  !!en;
  
  !!HE(heroId):O?(heroOwner:y);
  !!OW:R(heroOwner)/(RES_GOLD)/?(goldAmount:y);
  !!UN:C6089301/4/?(spellBookCost:y);  [проверка на наличие 500 голды]

  !!if&(goldAmount)>=(spellBookCost);
    !!SN:T^srm.main.can_buy^/?(msgSpellBook:z)/^cost^/(spellBookCost);
    !!IF:Q1/8/0/2^%(msgSpellBook)^;

    !!if&1;
      !!OW:R(heroOwner)/(RES_GOLD)/d-(spellBookCost) R(heroOwner)/(RES_GOLD)/?(goldAmount:y);
      !!DL(SRM_DLG_MAGE_GUILD):A56/(DLG_CMD_SET_TEXT)/^%(goldAmount)^/1;
      !!HE(heroId):A4/(ART_SPELL_BOOK);
      !!VRi^srm_spell_bought^:S(TRUE);
    !!en;

  !!el;
    !!SN:T^srm.main.cant_buy^/?(msgSpellBook:z)/^cost^/(spellBookCost);
    !!IF:Q1/8/0/1^%(msgSpellBook)^;
  !!en;


; Compatiblity with Dragon Town (Era Scripts)
!?FU(ES_757_SetUpDragonTown);
!#VA(townId:x);

!!VRi^srm_townsAmount^:+1;
!!UN:C(SPELL_TABLE_POINTER)/4/?(spellsTable:y);
!!FU(srm_SetUpTown):P(townId)/(spellsTable);

; Function for setting the filename of the DL template of the main dialogue
!?FU(srm_SetMageGuildDLGTemplate);
!#VA(file:x);

!!VR(file):Z^srm_gm_rebuild^;
