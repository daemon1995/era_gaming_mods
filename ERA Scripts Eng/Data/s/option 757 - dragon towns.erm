ZVSE2
** Author orig.  : Algor
** Rewritten by  : Archer30
** Name          : Dragon towns
** Name rus.     : Драконьи города
** Options       : 757

** Разграбленную Утопию Драконов можно перестроить в город имеющий форт и ГМ 3-го уровня за 20 дерева и 20 руды.
** Тип нового города определяется расой героя-строителя. ИИ при наличии ресурсов всегда перестраивает разграбленную Утопию.
; This script used to work with AI, but not anymore. UN:I seems to have some problem on AI's turn, the new town sometimes fails to be put on the map and leads to a crash.
; This script used to work in MP, but not anymore. It results in crashs when the town is built (https://discord.com/channels/665742159307341827/1245861416615805068)


!?FU(OnAfterErmInstructions);
!!UN:P757/?(wogOption:y);
!!FU&(wogOption)<>(TRUE):E;

; Check if it is a real multiplayer game. Disable Dragon Town if it is (coz of crashes)
!!UN:V?t/?t/?t/?t/?(gameType:y);

!!if&(gameType)<>0/(gameType)<>3;
  !!UN:P757/(FALSE);
  !!FU:E;
!!en;

; Set up array for the index of dragon town names
; We use an array in order to generate random town names without duplicates
!!FU(ES_757_SetUpDragonTownNamesIndList):P;

!?FU(ES_757_SetUpDragonTownNamesIndList);
!!FU(NewIntArray):P16/?i^es_757_dragonTownNamesIndList^/(M_STORED);
!!FU(Array_Fill):Pi^es_757_dragonTownNamesIndList^/0/1; [Fill the array with number 0 to 15]

; Trigger after leaving Utopias
!$OB(OBJ_DRAGON_UTOPIA)&i^timerIsHuman^;
; Exit if the Utopia has not been cleared
!!CB998:T?(isCleared:y);
!!FU&(isCleared)<>(TRUE):E;

; Here we use a function for mod compatibility
!!FU(ES_757_BuildDragonTown):P;

!?FU(ES_757_BuildDragonTown);
!!UN:P757/?(wogOption:y);
!!FU&(wogOption)<>(TRUE):E;

; Check the quantity of towns on the map
!!UN:U(OBJ_TOWN)/(ANY_OBJ)/?(townNum:y);

; Check for the owner and type pf the hero to set the details of the new town
!!HE(CURRENT_HERO):N?(hero:y);
!!HE(hero):O?(owner:y) B2/?(class:y);
!!VR(townType:y):S(class) :2;
!!VR(picTypeTown:y)&(ERM_FLAG_IS_HUMAN):S(townType) +22;

; Exit the function if there are more 48 or more towns on the map
!!if&(townNum)>=48;
  !!IF&(ERM_FLAG_IS_HUMAN):Q1/(picTypeTown)/9/(MSG_TYPE_MES)^%T(es.757.dlg1)%T(es.757.tooManyTowns)^;
  !!FU:E;
!!en;

; Check the tile at the right bottom of the new town
; Exit if the result =-1 (the tile is interactive or is part of an interactive object)
!!VR(townX:y):Sv998 +1;
!!FU(ES_757_CheckTileEligibility):P(townX)/v999/v1000/?(result1:y);

!!if&(result1)>-1;
  !!VR(objY:y):Sv999 -1;
  !!FU(ES_757_CheckTileEligibility):P(townX)/(objY)/v1000/?(result2:y);

  ; Also check the left bottom
  !!if&(result2)>-1;
    !!VR(objX:y):Sv998 -3;
    !!FU(ES_757_CheckTileEligibility):P(objX)/v999/v1000/?(result3:y);

    ; Check the entrance of the new town (y-coordinate +1) to ensure the path is clear
    !!if&(result3)>-1;
      !!VR(heroX:y):S-1;
      !!VR(heroResult:y):S0;
      !!VR(entranceX:y):Sv998 -1;
      !!VR(entranceY:y):Sv999 +1;
      !!FU(ES_757_CheckTileEligibility):P(entranceX)/(entranceY)/v1000/?(entranceResultMid:y);

      ; Check for one tile to the right of the entrance, set heroX to the target's x coordinate if found
      !!if&(entranceResultMid)<=0;
        !!FU(ES_757_CheckTileEligibility):Pv998/(entranceY)/v1000/?(entranceResultRight:y);

        ; Check for one tile to the left
        !!if&(entranceResultRight)<=0;
          !!VR(entranceLeftX:y):Sv998 -2;
          !!FU(ES_757_CheckTileEligibility):P(entranceLeftX)/(entranceY)/v1000/?(entranceResultLeft:y);

          !!if&(entranceResultLeft)>0;
            !!VR(heroX):S(entranceLeftX);
            !!VR(heroResult):S(entranceResultLeft);
          !!en;
        !!el;
          !!VR(heroX):Sv998;
          !!VR(heroResult):S(entranceResultRight);
        !!en;
      !!el;
        !!VR(heroX):S(entranceX);
        !!VR(heroResult):S(entranceResultMid);
      !!en;
    !!en;
  !!en;
!!en;

; Exit if the surrounding is not large enough for a town
!!if|(result1)=-1/(result2)=-1/(result3)=-1/(heroX)=-1;
  !!IF&(ERM_FLAG_IS_HUMAN):Q1/(picTypeTown)/9/(MSG_TYPE_MES)^%T(es.757.dlg1)%T(es.757.tooNarrow)^;
  !!FU:E;
!!en;

; Check the resources of the visiting player - If AI does not reach the requirement, they can still build with a reduced price
!!VR(hasEnoughRes:y):S(TRUE);

!!if&(ERM_FLAG_IS_HUMAN);
  !!FU(NewIntArray):P7/?(requiredResourcesList:y);

  !!if|(townType)=(TOWN_INFERNO)/(townType)=(TOWN_NECROPOLIS)/(townType)=(TOWN_CONFLUX);
    !!SN:V(requiredResourcesList)/0/30/20/30/15/15/15/30000;
  !!el|(townType)=(TOWN_DUNGEON)/(townType)=(TOWN_FORTRESS);
    !!SN:V(requiredResourcesList)/0/30/15/30/20/15/15/30000;
  !!el|(townType)=(TOWN_RAMPART)/(townType)=(TOWN_STRONGHOLD);
    !!SN:V(requiredResourcesList)/0/30/15/30/15/20/15/30000;
  !!el|(townType)=(TOWN_CASTLE)/(townType)=(TOWN_TOWER);
    !!SN:V(requiredResourcesList)/0/30/15/30/15/15/20/30000;
  !!en;

  !!FU(ES_Player_CheckEnoughResources):P?(hasEnoughRes:y)/(owner)/(requiredResourcesList);

  !!FU(NewIntArray):P16/?(mutliPicDialogItems:y);
  !!VR(monType:y):S(townType);
  !!VR(monType):Sd<<1;

  !!SN:V(mutliPicDialogItems)/0/(PIC_TYPE_MONSTER)/(monType);

  !!re i/(PIC_TYPE_RES_FIRST)/(PIC_TYPE_RES_GOLD); [Note: (PIC_TYPE_RES_LAST) = (PIC_TYPE_RES_MITHRIL)]
    !!VR(arrayItemInd:y):Si *2 +2;
    !!SN:M(mutliPicDialogItems)/(arrayItemInd)/i;

    !!VR(arrayItemInd):+1;
    !!SN:M(requiredResourcesList)/i/?(resQty:y);
    !!SN:M(mutliPicDialogItems)/(arrayItemInd)/(resQty);
  !!en;

  ; Memory patch (Resour82.def -> Resource.def)
  !!UN:C5199571/(UNC_UINT32)/?(saveMemory1:y) C5199571/(UNC_UINT32)/6865956;
  !!UN:C5199620/(UNC_UINT32)/?(saveMemory2:y) C5199620/(UNC_UINT32)/6865956;
  !!UN:C5201083/1/(UNC_UINT32)/?(saveMemory3:y) C5201083/1/(UNC_UINT32)/6865436;
  !!UN:C5201132/1/(UNC_UINT32)/?(saveMemory4:y) C5201132/1/(UNC_UINT32)/6865436;

  !!SN:E4590784/(CALLCONV_FASTCALL)/0/9;
  !!VR(offset:y):S(townType) *4;
  !!UN:C6976860/(offset)/4/?(namePtr:y);
  !!SN:B(namePtr)/d/?(buildingName:z);

  !!SN:H^monname^/(monType)/1/?(storeMonName:z) H^monname^/(monType)/1/(buildingName:z);

  !!FU(PrepareMultiPicDialog):P(mutliPicDialogItems);

  ; Check if the player wants to build Dragon Town - AI will always build
  !!VR(choice:y):S(FALSE);

  !!if&(hasEnoughRes);
    !!IF:N(MSG_TYPE_QUESTION)/^%T(es.757.dlg2)%T(es.757.ask)^/?(choice:y);
  ; If the player does not have enough resources, show up the info without a choice
  !!el;
    !!IF:N(MSG_TYPE_MES)/^%T(es.757.dlg2)%T(es.757.notEnoughRes)^;
  !!en;

  ; memory patch (restore original code)
  !!SN:H^monname^/(monType)/1/(storeMonName:z);

  !!UN:C5199571/(UNC_UINT32)/(saveMemory1) C5199620/(UNC_UINT32)/(saveMemory2);
  !!UN:C5201083/1/(UNC_UINT32)/(saveMemory3:y) C5201132/1/(UNC_UINT32)/(saveMemory4:y);?(saveMemory3:y);
  !!FU&(choice)=(FALSE):E;
!!en;

; Reduce resources 
!!FU(ES_Player_RemoveResources):P(owner)/(requiredResourcesList);
!!UN&(ERM_FLAG_IS_HUMAN):R2;

; Remove obstacles
; This function must be executed with FU:D first! Otherwise it leads to a crash
!!IP:D(ANY_PLAYER);
!!FU(ES_757_RemoveObstacles):D(hero)/(heroResult)/(heroX)/(townX)/(entranceX)/(entranceY)/(objX)/(objY)/(result1)/(result2)/(result3)
  P(hero)/(heroResult)/(heroX)/(townX)/(entranceX)/(entranceY)/(objX)/(objY)/(result1)/(result2)/(result3);

; Generate a random index for the name of dragon town
!!SN:Mi^es_757_dragonTownNamesIndList^/?(size:y);

!!if&(size)=0;
  !!FU(ES_757_SetUpDragonTownNamesIndList):P;
!!en;

!!FU(Array_Shuffle):Pi^es_757_dragonTownNamesIndList^;
!!FU(Array_Pop):Pi^es_757_dragonTownNamesIndList^/?(nameInd:y);

; Place and set up the new town
!!FU(ES_757_PlaceAndSetUpTheTown):D(townX)/(owner)/(townType)/(nameInd)/(hero) P(townX)/(owner)/(townType)/(nameInd)/(hero);

// Check if the targeted tile is available
!?FU(ES_757_CheckTileEligibility);
; Returns value =1, =0, =1 or =2, corresponding to is interactive or is part of an interactive object, on a tile of water or rock, eligible to place or eligible to place after object deletion
!#VA(x:x) (y:x) (z:x) (result:x);

; Initialization - assume the tile is interactive or part of an interactive objcect, or the coordinate isn't correct
!!VR(result):S-1;

; Exit if the given coordinate isn't correct
!!if|(x)<0/(y)<0/(z)<0;
  !!FU:E;
!!en;

; Check if the targeted tile is interactive or passable, or is a water/rock tile
!!TR(x)/(y)/(z):E?(notinteractive:y) P?(isPassable:y) T?(type:y)/d/d/d/d/d/d/d;

; Check further when the tile is not on the water or rock
!!if&(type)<>8/(type)<>9;
  ; Set the result to 1 if not interactive and passable (no object)
  !!if&(notinteractive)/(isPassable);
    !!VR(result):S1;
  ; Check if the object is interractable by trying to find its yellow tile
  !!el&(notinteractive)/(isPassable)<>(TRUE);
    *!UN:X?(mapSize:y)/?y99;
    *!VR(x):F0/(mapSize:y);
    *!VR(y):F0/(mapSize:y);
    !!VR(newX:y):S(x);
    !!VR(newY:y):S(y);
    !!VR(newZ:y):S(z);
    !!SN:O?(newX)/?(newY)/?(newZ);

    ; Set the result to 2 if the object is not interactive (normal road blocks)
    !!VR(result)&(x)=(newX)/(y)=(newY)/(z)=(newZ):S2;
  !!en;
!!el;
  ; Set the result to 0 if the tile is on the water or rock
  !!VR(result):S0;
!!en;

// Remove objects in the given coordinates
// The function would be executed for 3 times at most if there are multiple obstacles in the targeted location
!?FU(ES_757_RemoveObject);
!#VA(x:x) (y:x) (z:x);

!!OB(x)/(y)/(z):T?(type:y);

!!if&(type)<>(OBJ_STUB);
  !!UN:O(x)/(y)/(z)/0;
  !!OB(x)/(y)/(z):T?(type);

  !!if&(type)<>(OBJ_STUB);
    !!UN:O(x)/(y)/(z);
    !!OB(x)/(y)/(z):T?(type);

    !!if&(type)<>(OBJ_STUB);
      !!UN:O(x)/(y)/(z);
      !!OB(x)/(y)/(z):T?(type);
    !!en;
  !!en;
!!en;


!?FU(ES_757_RemoveObstacles);
!#VA(hero:x) (heroResult:x) (heroX:x) (townX:x) (entranceX:x) (entranceY:x) (objX:x) (objY:x) (result1:x) (result2:x) (result3:x);

; Teleport the hero to the front of the entrance (to prevent the hero got covered by the town)
!!FU(ES_757_RemoveObject)&(heroResult)=2:P(heroX)/(entranceY)/v1000;
!!HE(hero):P(heroX)/(entranceY)/v1000/0;

; Remove obstacles if existing
!!FU(ES_757_RemoveObject):Pv998/v999/v1000; [Entrance of Utopia]
!!FU(ES_757_RemoveObject):P(entranceX)/v999/v1000; [Entrance of the town]
!!FU(ES_757_RemoveObject)&(result1)=2:P(townX)/v999/v1000;
!!FU(ES_757_RemoveObject)&(result2)=2:P(townX)/(objY)/v1000;
!!FU(ES_757_RemoveObject)&(result3)=2:P(objX)/v999/v1000;

; Wipe out every single tile of the new town just to be safe (or maybe not?)
; Start from the leftmost spot in the middle row
*!VR(extraX:y):Sv998 -3;
*!VR(extraY:y):Sv999 -1;
*!FU(ES_757_RemoveObject):P(extraX)/(extraY)/v1000;
; One tile right
*!VR(extraX):+1;
*!FU(ES_757_RemoveObject):P(extraX)/(extraY)/v1000;
; One tile down
*!VR(extraY):+1;
*!FU(ES_757_RemoveObject):P(extraX)/(extraY)/v1000;
; Entrance of the Town
*!VR(extraX):+1;
*!FU(ES_757_RemoveObject):P(extraX)/(extraY)/v1000;
; Top of the Entrance
*!VR(extraY):-1;
*!FU(ES_757_RemoveObject):P(extraX)/(extraY)/v1000;
; One tile right
*!VR(extraX):+1;
*!FU(ES_757_RemoveObject):P(extraX)/(extraY)/v1000;
; One tile Up
*!VR(extraY):-1;
*!FU(ES_757_RemoveObject):P(extraX)/(extraY)/v1000;
; All the way to the left
*!VR(extraX):-1;
*!FU(ES_757_RemoveObject):P(extraX)/(extraY)/v1000;
*!VR(extraX):-1;
*!FU(ES_757_RemoveObject):P(extraX)/(extraY)/v1000;

// Place and set up the town for every player in MP
// For some reason, the new town will only visually appear after showing up IF msg (from Achievements for example)
!?FU(ES_757_PlaceAndSetUpTheTown);
!#VA(x:x) (owner:x) (townType:x) (nameInd:x) (hero:x);

!!VR(y:y):Sv999;
!!VR(z:y):Sv1000;
!!TR998:T?(terrain:y)/d/d/d/d/d/d/d;
!!UN:I(x)/(y)/(z)/(OBJ_TOWN)/(townType)/(OBJ_TOWN)/(townType)/(terrain)/0;            [x/y/z - the right bottom corner of the town]
!!SN:O?(x)/?(y)/?(z);                                                                 [Get the entrance]

; Check if UN:I really placed the town on the map (fail safe)
!!VR(searchX:y):S(x) -1;
!!UN:U(OBJ_TOWN)/(ANY_OBJ)/-1/(searchX)/(y)/(z);
!!FU&(searchX)<>(x):E;

; Set up town data
!!CA(x)/(y)/(z):U?(townId:y);
!!SN:T^es.757.name%(nameInd)^/?z2;
!!CA0/(townId):Nz2 B2/30 B2/31 B6/2 B6/9;                                             [установка владельца, имени, разрушение жилищ и отстройка «амка и √ћ3 уровн€]
!!CA0/(townId):M2/0/-1/0 M2/1/-1/0 M2/2/-1/0 M2/3/-1/0 M2/4/-1/0 M2/5/-1/0 M2/6/-1/0; [нет стражников]
!!CA0/(townId):M1/0/0/0 M1/1/0/0 M1/2/0/0 M1/3/0/0 M1/4/0/0 M1/5/0/0 M1/6/0/0;        [нет существ дл€ выкупа]
!!CA0/(townId):O(owner);                                                              [Set the owner]

; Compatibility with All towns have a grail
!!if&(townType:x)<>(TOWN_CONFLUX)/i^wog_101_map_rule_19_isEnabled^;                   [if build grails anywhere]
  !!CA0/(townId):B6/26;                                                               [build grail]
!!en;

; Compatibility with Enhanced War Machines III
!!UN:P73/?(enhWMIII:y); 
!!PO(x)/(y)/(z)&(enhWMIII):H1 T1;

!!FU(ES_757_SetUpDragonTown):P(townId);  [This function would be called by 3rd party scripts in order to tweak details of the town]

; Place stump and log on empty tiles in order to match the passabilities
!!VR(stumpX:y):S(x) -3;
!!VR(stumpY:y):S(y) -1;
!!FU(ES_757_CheckTileEligibility):P(stumpX)/(stumpY)/(z)/?(result4:y);
!!UN&(result4:y)=1:I(stumpX)/(stumpY)/(z)/(OBJ_STUMP)/0/(OBJ_STUMP)/0/-1/1;

!!VR(logX:y):S(x) +2;
!!VR(logY:y):S(y) -2;
!!FU(ES_757_CheckTileEligibility):P(logX)/(logY)/(z)/?(result5:y);
!!UN&(result5)=1:I(logX)/(logY)/(z)/(OBJ_LOG)/0/(OBJ_LOG)/0/-1/1;

; Teleport the hero to the real entrance of the town and update the data of the town
!!HE(hero):P(x)/(y)/(z)/1;
!!FU(ES_Town_GetStruct):P(townId)/?(townStruct:y);
; Don't set visiting hero - it seems uncessary and results in bugs
*!UN:C(townStruct)/16/(UNC_INT)/(hero); [16 - visiting hero poionter. Don't use CA:H1 here as it creates a duplicate of hero. And don't use UN:C too...]

; Update the sreen
!!SN:D;

// Fix hero visiting self after teleported to the entrance of the Dragon Town by pressing Spacebar (thanks to daemon_n)
!?FU(ES_CreateERMHook);
!#VA(address:x);

!!UN:P757/?(wogOption:y);
!!FU&(wogOption)<>(TRUE):E;

!!SN:E(address)/1/4882836/(ES_OnObjectVisit);

!?OB(OBJ_TOWN);
!!UN:P757/?(wogOption:y);
!!FU&(wogOption)<>(TRUE):E;

!!VRi^es_757_isVisitingTown^:S(TRUE);

!?FU(ES_OnObjectVisit)&i^es_757_isVisitingTown^;
!#VA(address:x);

!!VRi^es_757_isVisitingTown^:S(FALSE);
!!UN:C(address)/(STRUCT_HOOK_CONTEXT_EBX)/4/?(objType:y);

!!if&(objType)=(OBJ_HERO);
  !!UN:C(address)/(STRUCT_HOOK_CONTEXT_EBP)/4/?(ebp:y) C(ebp)/8/4/?(activeHero:y) C(ebp)/12/4/?(mapitem:y);
  !!UN:C(activeHero)/26/4/?(activeHeroId:y) C(mapitem)/4/?(targetSubtype:y);
  !!UN&(activeHeroId)=(targetSubtype):C(address)/(STRUCT_HOOK_CONTEXT_EBX)/4/(OBJ_TOWN);
!!en;

**end
