ZVSE2
** Author        : Algor (idea: DracoLich)
** Updated by    : Archer30
** Name          : Skeletons with artifacts
** Name rus.     : Скелеты с артефактами
** Options       : 882


!?FU(OnAfterErmInstructions);           // перед показом карты
!!UN:P882/?y1;
!!FU&y1=0:E;                            // выход, если опция не включена

!!UN:U22/-1/?y1;                        // y1 - количество трупов
!!VRv1:S-1;                             // инициализация v1 для быстрого поиска
!!DO(ES_882_SetArts)/1/y1/1:P;       	// для каждого трупа устанавливаем артефакт

!?FU(OnAfterLoadGame);                  // при загрузке игры
!!UN:P882/?y1;
!!SN&y1<>0:W^opt882.c^/0;// сброс битвы со скелетом для случая загрузки из боя

!?FU(ES_882_SetArts);                	// раздаем трупам артефакты
!!UN:U22/-1/-1/1;                       // получаем координаты трупа в v1-v3
!!VRy1:S0 R99;                          // y1 - случайное число (0.99)
!!VRy2&y1<50:S(ART_LEVEL_TREASURE);     // В 50% случаев treasure-артефакт
!!VRy2&y1>=50:S(ART_LEVEL_MINOR);       // В 35% случаев minor-артефакт
!!VRy2&y1>=85:S(ART_LEVEL_MAJOR);       // В 15% случаев major-артефакт
!!UN:J6/y2/?y1;                         // y1 - случайный артефакт нужного класса
!!SK1:S1 Ay1;                           // даем трупу артефакт

!?OB(OBJ_CORPSE);                       // посещение трупа
!!UN:P882/?y1;
!!FU&y1=0:E;                            // выход, если опция не включена

!!OB998:S;                              // запрещаем посещение скелета
!!SK998:A?y1;                           // y1 - артефакт у трупа

!!if|-(ERM_FLAG_IS_HUMAN)/y1>999;
  !!OB998:R;
  !!FU:E;                               // при посещении ИИ или если артефакта уже нет разрешаем использование объекта и выходим]
!!en;

!!UN:Ay1/3/?y2;
!!VRy2::4 +1;                           // y2 класс артефакта (1/2/3)
!!SN:T^opt882.m%Y2^/?z2;                // z2 - текст вопроса о сражении

!!FU(ES_882_GetSkeletonMonType):Py2/?y30;

!!IF:Q1/(PIC_TYPE_MONSTER)/y30/(PIC_TYPE_ART)/y1/(MSG_TYPE_QUESTION)^%Z2^;           // выводим запрос на битву
!!FU&-1:E;                              // выход, если герой отказался от битвы

!!HE(CURRENT_HERO):N?y4;                // y4 - номер героя-посетителя
!!SN:W^opt882.h^/y4 W^opt882.c^/y2;     // сохраняем номер героя-посетителя и классартефакта
!!HE(CURRENT_HERO):Tv998/v999/v1000/y30/1;           // инициируем битву с 1 скелетом-воином
!!SN:W^opt882.h^/?y2 W^opt882.c^/0;     // y2 - номер героя-посетителя, сброс параметров артефакта
!!HEy2:O?y1;                            // выход, если герой проиграл
!!OB998&y1>(NO_PLAYER):R;               // разрешаем стандартное использование объекта


!?FU(OnSetupBattlefield);               // при настройке поля боя
!#VA(usedY[20]:y);

!!SN:W^opt882.c^/?(newAbilities:y);
!!FU&(newAbilities)<=0:E;               // класс артефакта (1/2/3), выход, если бой не со скелетом

!!UN:J2/?y4;
!!VRy4:+y2;                             // y4 - выбранный человеком уровень сложности
!!VRy5:Sc *y4 +100;                     // y5 - коэффициент усиления зависящий от уровня сложности и дня посещения
!!VRy10:C10/10/4/300/50/100/3/3;        // y10..y17 - базовые параметры скелета (attk def speed health dmgmin dmgmax casts retail)

!!re i/10/17;                           // y10..y17 - параметры скелета, усиленные в соответствии с классом артефакта, днем и уровнем сложности
  !!VRyi:*y5 :100;                      // ...
!!en;                                   // ...

!!VRy16:F0/5;                          [Restrain the max spells to 5]

; Set up new description for skeleton (only when the battle is visible)
!!FU(ES_882_SetUpNewDescForSkeleton):P(BATTLE_DEFENDER_STACK_FIRST);

!!BM(BATTLE_DEFENDER_STACK_FIRST):F?(flags:y);
!!VR(flags)&(newAbilities)>=1:|(MON_FLAG_NO_RETALIATION);     // безответный удар для treasure-артефактов
!!VR(flags)&(newAbilities)>=2:|(MON_FLAG_ATTACKS_TWICE);      // + двойной удар для minor-артефактов
!!VR(flags)&(newAbilities)>=3:|(MON_FLAG_ATTACKS_ALL_AROUND); // + круговая атака для major-артефактов

!!BM(BATTLE_DEFENDER_STACK_FIRST):Ay10 Dy11 Sy12 Hy13 U1/y14 U2/y15 Ey16 Ry17 F(flags); // выставляем способности скелету-охраннику

!?FU(OnBeforeBattleAction);
!!SN:W^opt882.c^/?(newAbilities:y);
!!FU&(newAbilities)<1:E;                            // выход, если бой не со скелетом

!!FU&i^battle_acting_stack^<>(BATTLE_DEFENDER_STACK_FIRST):E; // выход, если не ход скелета                 

!!BM(BATTLE_DEFENDER_STACK_FIRST):E?(spells:y) P?(pos:y);
!!FU&(spells)<=0:E;                            // выход, если скелет исчерпал заклинания

!!if&i^battle_isVisible^;
  !!SN:T^opt882.b1^/?z2;
  !!MM:Sz2;                               // вывод сообщения о призыве в лог битвы
  !!SN:P^CLONE^;                          // вывод звука Клона
!!en;


; Summon Skeletons
; No need to check if it is possible to summon as the max spell is 5, meaning max at 6 stacks would be created
!!BM(BATTLE_DEFENDER_STACK_FIRST):C(SPELL_CLONE)/(pos)/10/3/0 H?(hp:y) L?(lostHp:y);    // скелет кастует на себя заклинание Клон
!!VR(summNum:y):S(hp) -(lostHp) :5;                          // численность призываемых скелетов = 20% от здоровья скелета-охранника
; Set the global var for reducing spell later
!!VRi^es_882_summonedSkeletons^:S(TRUE);

; Look for the stack that was cloned from BM:C
!!re i/(BATTLE_DEFENDER_STACK_FIRST)/(BATTLE_DEFENDER_STACK_LAST); // перебор отрядов защищающейся стороны
  !!BMi:F?(flags:y);
  !!VR(isClone:y):S(flags) &(MON_FLAG_CLONE);             // y6 - признак Клона

  !!if&(isClone);                              // если найден клон
    ; Set no mirror for the first skeleton guardian
    !!BM(BATTLE_DEFENDER_STACK_FIRST):U5/-1;

    ; Remove the found cloned stack
    !!BMi:P?(summPos:y);           // отвязываем клон от скелета-охранника
    !!FU(ES_882_RemoveStack):Pi;        // убираем отряд с поля

    ; Summon the stack
    !!BU:S(MON_SKELETON)/(summNum)/(summPos)/(BATTLE_RIGHT)/-1/(TRUE) E(summPos)/?(summStack:y);      // и призываем на его место отряд скелетов, номер отряда

    !!if&i^battle_isVisible^;
      !!SN:P^ANIMDEAD^;                   // вывод звука Поднятия нежити
      ; Set up new description for skeleton (only when the battle is visible)
      !!FU(ES_882_SetUpNewDescForSkeleton):P(summStack);
    !!en;
    ; Set up new abilities
    !!BM(summStack):F?(flags:y);
    !!VR(flags)&(newAbilities)>=1:|(MON_FLAG_NO_RETALIATION);     // безответный удар для treasure-артефактов
    !!VR(flags)&(newAbilities)>=2:|(MON_FLAG_ATTACKS_TWICE);      // + двойной удар для minor-артефактов
    !!VR(flags)&(newAbilities)>=3:|(MON_FLAG_ATTACKS_ALL_AROUND); // + круговая атака для major-артефактов
    !!BM(summStack):F(flags);

    !!if&i^battle_isVisible^;
      !!BM(summStack):V74;                         // копируем отряду флаги охранника и анимируем Поднятие нежити
      !!SN:D;                             // обновляем поле боя
    !!en;

  !!en;
!!en;

; Reduce one spell OnBattleActionEnd
; Warniing: For some reason, reducing OnBeforeBattleAction doesn't work correclty when there is only one spell left
!?FU(OnBattleActionEnd)&i^es_882_summonedSkeletons^;
!!BM(BATTLE_DEFENDER_STACK_FIRST):Ed-1;        // снижаем кол-во кастов охранника (максимум 5 кастов)
!!VRi^es_882_summonedSkeletons^:S(FALSE);

!?FU(ES_882_RemoveStack);               // удаление отряда x1 с поля
!#VA(stackId:x);
!!if&(stackId)>=(BATTLE_STACK_FIRST)/(stackId)<=(BATTLE_STACK_LAST);
  !!BM(stackId):Z?(stackStruct:y);
  !!UN:C(stackStruct)/234/(UNC_INT8)/1;   // указываем, что стек умер                     
  !!BM(stackId):Fd|(MON_FLAG_SACRIFICED); // ставим флаг "принесён в жертву"
  !!BM(stackId):N0;                       // кол-во: 0
  !!UN:C(COMBAT_MANAGER)/(UNC_INT)/?(cmbMgr:y);
  !!SN:E4621680/2/(cmbMgr)/51/1;          // функция "убрать тело", если мертв
  !!SN:E4797616/2/(cmbMgr)/0/1;           // обновить сетку поля боя
!!el;
  !!SN:F^ShowErmError^/^Invalid "stackId" argument: %(stackId)^;
!!en;


!?FU(ES_882_SetUpNewDescForSkeleton)&i^battle_isVisible^;
!#VA(stack:x);

!!BM(stack):F?(flags:y);
!!VR(abilities[3]:y):C(MON_FLAG_NO_RETALIATION)/(MON_FLAG_ATTACKS_TWICE)/(MON_FLAG_ATTACKS_ALL_AROUND);
!!VR(addedAbilityCounter:y):S0;
!!VR(newDesc:z):S^^;
!!VR(loopEnd:y):Si^opt882.c^ F1/(abilities[SIZE]);

!!re i/0/(loopEnd)/1/-1;
  !!VR(hasAbility:y):S(flags) &(abilities[i]);

  !!if&(hasAbility)=(FALSE);
    ; Set up basic text if it's the first ability added
    !!if&(addedAbilityCounter)=0;
      !!VR(addedAbilityCounter):+1;
      !!SN:T^es.882.desc^/?(newDesc);
    !!en;

    ; Add the text of the ability
    !!SN:T^es.882.ability.%i^/?(abilityName:z);
    !!VR(newDesc):+(abilityName) +^%T(es.period)^;
  !!en;
!!en;

; If any new ability has been added, set the new text (and set the pointer of desc to a new one from array)
!!if&(newDesc)<>^^;
  ; Get stack stucture
  !!BM(stack):Z?(stackStruct:y);
  ; Set up new description string
  !!UN:C(stackStruct)/144/(UNC_INT)/?(descPtr:y);
  !!SN:B(descPtr)/d/?(desc:z);
  !!VR(desc):+(newDesc);
  ; Put the string in the array and get the address of the string
  !!FU(ES_AllocBattleStr):P(desc)/?(newDescAddr:y);
  !!SN:B(newDescAddr)/d/?(text:z);
  ; Apply new description
  !!UN:C(stackStruct)/144/(UNC_INT)/(newDescAddr);
!!en;

!?FU(OnAfterBattleUniversal)&i^es_882_newDescriptionsList^;
!!SN:Mi^es_882_newDescriptionsList^;
!!VRi^es_882_newDescriptionsList^:S0;

// Function to get the creature type of the Guardian
!?FU(ES_882_GetSkeletonMonType);
!#VA(artLevel:x) (monType:x);

!!VR(monType):S(MON_SKELETON_WARRIOR);

** end
